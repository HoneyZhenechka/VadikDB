
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA CREATE DELETE DROP ENDREQUEST EQUAL FROM INSERT INTO LBRACKET NAME RBRACKET SELECT SET SHOW TABLE UPDATE VALUES WHERE bol bool int strstart : create\n             | show\n             | drop\n             | select\n             | insert\n             | update\n             | deletecreate : CREATE create_body ENDREQUESTcreate_body : TABLE NAME LBRACKET values RBRACKETvalues : NAME type\n              | values COMMA NAME typeshow : SHOW CREATE TABLE NAME ENDREQUESTdrop : DROP TABLE NAME ENDREQUESTselect : SELECT select_body ENDREQUESTselect_body : fields FROM NAME\n                   | fields FROM NAME conditioninsert : INSERT insert_body ENDREQUESTinsert_body : INTO NAME VALUES LBRACKET fields RBRACKET\n                   | INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKETupdate : UPDATE update_body ENDREQUESTupdate_body : NAME SET expression\n                   | NAME SET expression conditionexpression : field operator field\n                  | expression COMMA field operator fielddelete : DELETE FROM NAME ENDREQUEST\n              | DELETE FROM NAME condition ENDREQUESTfields : NAME\n              | fields COMMA NAMEfield : NAMEoperator : EQUALcondition : WHERE field operator fieldtype : int\n            | str\n            | bol\n            | bool'
    
_lr_action_items = {'CREATE':([0,10,],[9,18,]),'SHOW':([0,],[10,]),'DROP':([0,],[11,]),'SELECT':([0,],[12,]),'INSERT':([0,],[13,]),'UPDATE':([0,],[14,]),'DELETE':([0,],[15,]),'$end':([1,2,3,4,5,6,7,8,28,32,35,37,42,50,55,63,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-14,-17,-20,-13,-25,-12,-26,]),'TABLE':([9,11,18,],[17,19,30,]),'NAME':([12,14,17,19,24,27,30,33,34,38,40,46,52,57,60,61,62,71,76,80,83,],[22,26,29,31,36,39,41,43,44,47,53,22,47,22,47,47,-30,77,47,47,22,]),'INTO':([13,],[24,]),'FROM':([15,21,22,44,],[27,33,-27,-28,]),'ENDREQUEST':([16,20,23,25,31,39,41,43,47,48,51,56,59,70,75,78,81,84,86,],[28,32,35,37,42,50,55,-15,-29,-21,63,-16,-22,-9,-23,-18,-31,-24,-19,]),'COMMA':([21,22,44,47,48,54,58,65,66,67,68,69,72,75,82,84,85,],[34,-27,-28,-29,60,71,34,-10,-32,-33,-34,-35,34,-23,-11,-24,34,]),'RBRACKET':([22,44,54,58,65,66,67,68,69,72,82,85,],[-27,-28,70,73,-10,-32,-33,-34,-35,78,-11,86,]),'SET':([26,],[38,]),'LBRACKET':([29,36,45,79,],[40,46,57,83,]),'VALUES':([36,73,],[45,79,]),'WHERE':([39,43,47,48,75,84,],[52,52,-29,52,-23,-24,]),'EQUAL':([47,49,64,74,],[-29,62,62,62,]),'int':([53,77,],[66,66,]),'str':([53,77,],[67,67,]),'bol':([53,77,],[68,68,]),'bool':([53,77,],[69,69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'create':([0,],[2,]),'show':([0,],[3,]),'drop':([0,],[4,]),'select':([0,],[5,]),'insert':([0,],[6,]),'update':([0,],[7,]),'delete':([0,],[8,]),'create_body':([9,],[16,]),'select_body':([12,],[20,]),'fields':([12,46,57,83,],[21,58,72,85,]),'insert_body':([13,],[23,]),'update_body':([14,],[25,]),'expression':([38,],[48,]),'field':([38,52,60,61,76,80,],[49,64,74,75,81,84,]),'condition':([39,43,48,],[51,56,59,]),'values':([40,],[54,]),'operator':([49,64,74,],[61,76,80,]),'type':([53,77,],[65,82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> create','start',1,'p_start','SQL_parser.py',91),
  ('start -> show','start',1,'p_start','SQL_parser.py',92),
  ('start -> drop','start',1,'p_start','SQL_parser.py',93),
  ('start -> select','start',1,'p_start','SQL_parser.py',94),
  ('start -> insert','start',1,'p_start','SQL_parser.py',95),
  ('start -> update','start',1,'p_start','SQL_parser.py',96),
  ('start -> delete','start',1,'p_start','SQL_parser.py',97),
  ('create -> CREATE create_body ENDREQUEST','create',3,'p_create','SQL_parser.py',103),
  ('create_body -> TABLE NAME LBRACKET values RBRACKET','create_body',5,'p_create_body','SQL_parser.py',109),
  ('values -> NAME type','values',2,'p_values','SQL_parser.py',115),
  ('values -> values COMMA NAME type','values',4,'p_values','SQL_parser.py',116),
  ('show -> SHOW CREATE TABLE NAME ENDREQUEST','show',5,'p_show','SQL_parser.py',127),
  ('drop -> DROP TABLE NAME ENDREQUEST','drop',4,'p_drop','SQL_parser.py',133),
  ('select -> SELECT select_body ENDREQUEST','select',3,'p_select','SQL_parser.py',139),
  ('select_body -> fields FROM NAME','select_body',3,'p_select_body','SQL_parser.py',145),
  ('select_body -> fields FROM NAME condition','select_body',4,'p_select_body','SQL_parser.py',146),
  ('insert -> INSERT insert_body ENDREQUEST','insert',3,'p_insert','SQL_parser.py',155),
  ('insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET','insert_body',6,'p_insert_body','SQL_parser.py',161),
  ('insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET','insert_body',9,'p_insert_body','SQL_parser.py',162),
  ('update -> UPDATE update_body ENDREQUEST','update',3,'p_update','SQL_parser.py',171),
  ('update_body -> NAME SET expression','update_body',3,'p_update_body','SQL_parser.py',177),
  ('update_body -> NAME SET expression condition','update_body',4,'p_update_body','SQL_parser.py',178),
  ('expression -> field operator field','expression',3,'p_expression','SQL_parser.py',187),
  ('expression -> expression COMMA field operator field','expression',5,'p_expression','SQL_parser.py',188),
  ('delete -> DELETE FROM NAME ENDREQUEST','delete',4,'p_delete','SQL_parser.py',199),
  ('delete -> DELETE FROM NAME condition ENDREQUEST','delete',5,'p_delete','SQL_parser.py',200),
  ('fields -> NAME','fields',1,'p_fields','SQL_parser.py',209),
  ('fields -> fields COMMA NAME','fields',3,'p_fields','SQL_parser.py',210),
  ('field -> NAME','field',1,'p_field','SQL_parser.py',221),
  ('operator -> EQUAL','operator',1,'p_operator','SQL_parser.py',227),
  ('condition -> WHERE field operator field','condition',4,'p_condition','SQL_parser.py',232),
  ('type -> int','type',1,'p_type','SQL_parser.py',238),
  ('type -> str','type',1,'p_type','SQL_parser.py',239),
  ('type -> bol','type',1,'p_type','SQL_parser.py',240),
  ('type -> bool','type',1,'p_type','SQL_parser.py',241),
]
