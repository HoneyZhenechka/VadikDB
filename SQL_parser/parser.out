Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> start
Rule 1     start -> create ENDREQUEST
Rule 2     start -> show ENDREQUEST
Rule 3     start -> drop ENDREQUEST
Rule 4     start -> tree_selects ENDREQUEST
Rule 5     start -> insert ENDREQUEST
Rule 6     start -> update ENDREQUEST
Rule 7     start -> delete ENDREQUEST
Rule 8     start -> transaction ENDREQUEST
Rule 9     transaction -> BEGIN TRANSACTION
Rule 10    transaction -> END TRANSACTION
Rule 11    transaction -> ROLLBACK
Rule 12    create -> CREATE INDEX NAME ON NAME LBRACKET fields RBRACKET
Rule 13    create -> CREATE create_body
Rule 14    create_body -> TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET
Rule 15    create_body -> TABLE NAME LBRACKET variables RBRACKET
Rule 16    variables -> NAME type
Rule 17    variables -> variables COMMA NAME type
Rule 18    show -> SHOW INDEX NAME
Rule 19    show -> SHOW CREATE TABLE NAME
Rule 20    drop -> DROP INDEX NAME ON NAME
Rule 21    drop -> DROP TABLE NAME
Rule 22    join -> JOIN
Rule 23    join -> LEFT OUTER JOIN
Rule 24    join -> RIGHT OUTER JOIN
Rule 25    union -> UNION
Rule 26    union -> UNION ALL
Rule 27    intersect -> INTERSECT
Rule 28    tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
Rule 29    tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
Rule 30    tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
Rule 31    tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
Rule 32    tree_selects -> LBRACKET tree_selects RBRACKET union select
Rule 33    tree_selects -> LBRACKET tree_selects RBRACKET intersect select
Rule 34    tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition
Rule 35    tree_selects -> LBRACKET tree_selects RBRACKET join select
Rule 36    tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition
Rule 37    tree_selects -> LBRACKET tree_selects RBRACKET join name_table
Rule 38    tree_selects -> select union LBRACKET tree_selects RBRACKET
Rule 39    tree_selects -> select intersect LBRACKET tree_selects RBRACKET
Rule 40    tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition
Rule 41    tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table
Rule 42    tree_selects -> select union select
Rule 43    tree_selects -> select intersect select
Rule 44    tree_selects -> select join select join_condition
Rule 45    tree_selects -> select join select
Rule 46    tree_selects -> select join name_table join_condition
Rule 47    tree_selects -> select join name_table
Rule 48    tree_selects -> select
Rule 49    join_condition -> ON field EQUAL field
Rule 50    join_condition -> USING LBRACKET fields RBRACKET
Rule 51    name_table -> NAME
Rule 52    select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date
Rule 53    select -> SELECT select_body FOR SYSTEM TIME FROM date TO date
Rule 54    select -> SELECT select_body condition
Rule 55    select -> SELECT select_body
Rule 56    date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME
Rule 57    date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME
Rule 58    date -> NAME HYPHEN NAME HYPHEN NAME NAME
Rule 59    date -> NAME HYPHEN NAME HYPHEN NAME
Rule 60    date -> NAME HYPHEN NAME
Rule 61    select_body -> fields FROM NAME
Rule 62    select_body -> STAR COMMA fields FROM NAME
Rule 63    select_body -> STAR FROM NAME
Rule 64    insert -> INSERT insert_body
Rule 65    insert_body -> INTO NAME VALUES LBRACKET values RBRACKET
Rule 66    insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET
Rule 67    update -> UPDATE update_body
Rule 68    update_body -> NAME SET expression
Rule 69    update_body -> NAME SET expression condition
Rule 70    expression -> field EQUAL tree_expression
Rule 71    expression -> expression COMMA field EQUAL tree_expression
Rule 72    delete -> DELETE FROM NAME
Rule 73    delete -> DELETE FROM NAME condition
Rule 74    values -> value
Rule 75    values -> values COMMA value
Rule 76    value -> NAME
Rule 77    value -> QUOTE NAME QUOTE
Rule 78    fields -> field
Rule 79    fields -> fields COMMA field
Rule 80    field -> NAME
Rule 81    field -> NAME DOT NAME
Rule 82    condition -> WHERE tree_condition
Rule 83    tree_condition -> tree_comparison operator_condition tree_condition
Rule 84    tree_condition -> tree_comparison
Rule 85    tree_comparison -> tree_expression operator_comparison tree_expression
Rule 86    tree_expression -> value
Rule 87    tree_expression -> value operator_expression tree_expression
Rule 88    tree_expression -> operator_expression tree_expression
Rule 89    tree_expression -> LBRACKET tree_expression RBRACKET
Rule 90    tree_expression -> tree_expression operator_expression tree_expression
Rule 91    operator_condition -> AND
Rule 92    operator_condition -> OR
Rule 93    operator_comparison -> GREATER_THAN_OR_EQUAL
Rule 94    operator_comparison -> LESS_THAN_OR_EQUAL
Rule 95    operator_comparison -> NOT_EQUAL
Rule 96    operator_comparison -> EQUAL
Rule 97    operator_comparison -> GREATER_THAN
Rule 98    operator_comparison -> LESS_THAN
Rule 99    operator_expression -> PLUS
Rule 100   operator_expression -> MINUS
Rule 101   operator_expression -> STAR
Rule 102   operator_expression -> DIVISION
Rule 103   type -> int
Rule 104   type -> str
Rule 105   type -> bol
Rule 106   type -> bool
Rule 107   type -> float

Terminals, with rules where they appear

ALL                  : 26
AND                  : 91
AS                   : 40 41
BEGIN                : 9
COLON                : 56 56 57
COMMA                : 17 62 71 75 79
CREATE               : 12 13 19
DELETE               : 72 73
DIVISION             : 102
DOT                  : 81
DROP                 : 20 21
END                  : 10
ENDREQUEST           : 1 2 3 4 5 6 7 8
EQUAL                : 14 49 70 71 96
FOR                  : 52 53
FROM                 : 52 53 61 62 63 72 73
GREATER_THAN         : 97
GREATER_THAN_OR_EQUAL : 93
HYPHEN               : 56 56 57 57 58 58 59 59 60
INDEX                : 12 18 20
INSERT               : 64
INTERSECT            : 27
INTO                 : 65 66
JOIN                 : 22 23 24
LBRACKET             : 12 14 14 15 28 28 29 29 30 30 31 31 32 33 34 35 36 37 38 39 40 41 50 65 66 66 89
LEFT                 : 23
LESS_THAN            : 98
LESS_THAN_OR_EQUAL   : 94
MINUS                : 100
NAME                 : 12 12 14 15 16 17 18 19 20 20 21 51 56 56 56 56 56 56 57 57 57 57 57 58 58 58 58 59 59 59 60 60 61 62 63 65 66 68 69 72 73 76 77 80 81 81
NOT                  : 
NOT_EQUAL            : 95
ON                   : 12 14 20 49
OR                   : 92
OUTER                : 23 24
PLUS                 : 99
QUOTE                : 77 77
RBRACKET             : 12 14 14 15 28 28 29 29 30 30 31 31 32 33 34 35 36 37 38 39 40 41 50 65 66 66 89
RIGHT                : 24
ROLLBACK             : 11
SELECT               : 52 53 54 55
SET                  : 68 69
SHOW                 : 18 19
STAR                 : 62 63 101
SYSTEM               : 52 53
TABLE                : 14 15 19 21
TIME                 : 52 53
TO                   : 52 53
TRANSACTION          : 9 10
UNION                : 25 26
UPDATE               : 67
USING                : 50
VALUES               : 65 66
VERSIONING           : 14
WHERE                : 82
WITH                 : 14
bol                  : 105
bool                 : 106
error                : 
float                : 107
int                  : 103
str                  : 104

Nonterminals, with rules where they appear

condition            : 52 54 69 73
create               : 1
create_body          : 13
date                 : 52 52 53 53
delete               : 7
drop                 : 3
expression           : 68 69 71
field                : 49 49 70 71 78 79
fields               : 12 50 61 62 66 79
insert               : 5
insert_body          : 64
intersect            : 29 33 39 43
join                 : 30 31 34 35 36 37 40 41 44 45 46 47
join_condition       : 30 34 36 40 44 46
name_table           : 36 37 40 41 46 47
operator_comparison  : 85
operator_condition   : 83
operator_expression  : 87 88 90
select               : 32 33 34 35 38 39 40 41 42 42 43 43 44 44 45 45 46 47 48
select_body          : 52 53 54 55
show                 : 2
start                : 0
transaction          : 8
tree_comparison      : 83 84
tree_condition       : 82 83
tree_expression      : 70 71 85 85 87 88 89 90 90
tree_selects         : 4 28 28 29 29 30 30 31 31 32 33 34 35 36 37 38 39 40 41
type                 : 16 17
union                : 28 32 38 42
update               : 6
update_body          : 67
value                : 74 75 86 87
values               : 65 66 75
variables            : 14 15 17

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . create ENDREQUEST
    (2) start -> . show ENDREQUEST
    (3) start -> . drop ENDREQUEST
    (4) start -> . tree_selects ENDREQUEST
    (5) start -> . insert ENDREQUEST
    (6) start -> . update ENDREQUEST
    (7) start -> . delete ENDREQUEST
    (8) start -> . transaction ENDREQUEST
    (12) create -> . CREATE INDEX NAME ON NAME LBRACKET fields RBRACKET
    (13) create -> . CREATE create_body
    (18) show -> . SHOW INDEX NAME
    (19) show -> . SHOW CREATE TABLE NAME
    (20) drop -> . DROP INDEX NAME ON NAME
    (21) drop -> . DROP TABLE NAME
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (34) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (35) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (36) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (38) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> . select union select
    (43) tree_selects -> . select intersect select
    (44) tree_selects -> . select join select join_condition
    (45) tree_selects -> . select join select
    (46) tree_selects -> . select join name_table join_condition
    (47) tree_selects -> . select join name_table
    (48) tree_selects -> . select
    (64) insert -> . INSERT insert_body
    (67) update -> . UPDATE update_body
    (72) delete -> . DELETE FROM NAME
    (73) delete -> . DELETE FROM NAME condition
    (9) transaction -> . BEGIN TRANSACTION
    (10) transaction -> . END TRANSACTION
    (11) transaction -> . ROLLBACK
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    CREATE          shift and go to state 10
    SHOW            shift and go to state 12
    DROP            shift and go to state 13
    LBRACKET        shift and go to state 11
    INSERT          shift and go to state 15
    UPDATE          shift and go to state 16
    DELETE          shift and go to state 17
    BEGIN           shift and go to state 18
    END             shift and go to state 19
    ROLLBACK        shift and go to state 20
    SELECT          shift and go to state 21

    start                          shift and go to state 1
    create                         shift and go to state 2
    show                           shift and go to state 3
    drop                           shift and go to state 4
    tree_selects                   shift and go to state 5
    insert                         shift and go to state 6
    update                         shift and go to state 7
    delete                         shift and go to state 8
    transaction                    shift and go to state 9
    select                         shift and go to state 14

state 1

    (0) S' -> start .



state 2

    (1) start -> create . ENDREQUEST

    ENDREQUEST      shift and go to state 22


state 3

    (2) start -> show . ENDREQUEST

    ENDREQUEST      shift and go to state 23


state 4

    (3) start -> drop . ENDREQUEST

    ENDREQUEST      shift and go to state 24


state 5

    (4) start -> tree_selects . ENDREQUEST

    ENDREQUEST      shift and go to state 25


state 6

    (5) start -> insert . ENDREQUEST

    ENDREQUEST      shift and go to state 26


state 7

    (6) start -> update . ENDREQUEST

    ENDREQUEST      shift and go to state 27


state 8

    (7) start -> delete . ENDREQUEST

    ENDREQUEST      shift and go to state 28


state 9

    (8) start -> transaction . ENDREQUEST

    ENDREQUEST      shift and go to state 29


state 10

    (12) create -> CREATE . INDEX NAME ON NAME LBRACKET fields RBRACKET
    (13) create -> CREATE . create_body
    (14) create_body -> . TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET
    (15) create_body -> . TABLE NAME LBRACKET variables RBRACKET

    INDEX           shift and go to state 30
    TABLE           shift and go to state 32

    create_body                    shift and go to state 31

state 11

    (28) tree_selects -> LBRACKET . tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> LBRACKET . tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> LBRACKET . tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> LBRACKET . tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> LBRACKET . tree_selects RBRACKET union select
    (33) tree_selects -> LBRACKET . tree_selects RBRACKET intersect select
    (34) tree_selects -> LBRACKET . tree_selects RBRACKET join select join_condition
    (35) tree_selects -> LBRACKET . tree_selects RBRACKET join select
    (36) tree_selects -> LBRACKET . tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> LBRACKET . tree_selects RBRACKET join name_table
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (34) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (35) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (36) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (38) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> . select union select
    (43) tree_selects -> . select intersect select
    (44) tree_selects -> . select join select join_condition
    (45) tree_selects -> . select join select
    (46) tree_selects -> . select join name_table join_condition
    (47) tree_selects -> . select join name_table
    (48) tree_selects -> . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 11
    SELECT          shift and go to state 21

    tree_selects                   shift and go to state 33
    select                         shift and go to state 14

state 12

    (18) show -> SHOW . INDEX NAME
    (19) show -> SHOW . CREATE TABLE NAME

    INDEX           shift and go to state 34
    CREATE          shift and go to state 35


state 13

    (20) drop -> DROP . INDEX NAME ON NAME
    (21) drop -> DROP . TABLE NAME

    INDEX           shift and go to state 36
    TABLE           shift and go to state 37


state 14

    (38) tree_selects -> select . union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> select . intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> select . join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> select . join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> select . union select
    (43) tree_selects -> select . intersect select
    (44) tree_selects -> select . join select join_condition
    (45) tree_selects -> select . join select
    (46) tree_selects -> select . join name_table join_condition
    (47) tree_selects -> select . join name_table
    (48) tree_selects -> select .
    (25) union -> . UNION
    (26) union -> . UNION ALL
    (27) intersect -> . INTERSECT
    (22) join -> . JOIN
    (23) join -> . LEFT OUTER JOIN
    (24) join -> . RIGHT OUTER JOIN

    ENDREQUEST      reduce using rule 48 (tree_selects -> select .)
    RBRACKET        reduce using rule 48 (tree_selects -> select .)
    UNION           shift and go to state 41
    INTERSECT       shift and go to state 42
    JOIN            shift and go to state 43
    LEFT            shift and go to state 44
    RIGHT           shift and go to state 45

    union                          shift and go to state 38
    intersect                      shift and go to state 39
    join                           shift and go to state 40

state 15

    (64) insert -> INSERT . insert_body
    (65) insert_body -> . INTO NAME VALUES LBRACKET values RBRACKET
    (66) insert_body -> . INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    INTO            shift and go to state 47

    insert_body                    shift and go to state 46

state 16

    (67) update -> UPDATE . update_body
    (68) update_body -> . NAME SET expression
    (69) update_body -> . NAME SET expression condition

    NAME            shift and go to state 49

    update_body                    shift and go to state 48

state 17

    (72) delete -> DELETE . FROM NAME
    (73) delete -> DELETE . FROM NAME condition

    FROM            shift and go to state 50


state 18

    (9) transaction -> BEGIN . TRANSACTION

    TRANSACTION     shift and go to state 51


state 19

    (10) transaction -> END . TRANSACTION

    TRANSACTION     shift and go to state 52


state 20

    (11) transaction -> ROLLBACK .

    ENDREQUEST      reduce using rule 11 (transaction -> ROLLBACK .)


state 21

    (52) select -> SELECT . select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> SELECT . select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> SELECT . select_body condition
    (55) select -> SELECT . select_body
    (61) select_body -> . fields FROM NAME
    (62) select_body -> . STAR COMMA fields FROM NAME
    (63) select_body -> . STAR FROM NAME
    (78) fields -> . field
    (79) fields -> . fields COMMA field
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    STAR            shift and go to state 56
    NAME            shift and go to state 55

    select_body                    shift and go to state 53
    fields                         shift and go to state 54
    field                          shift and go to state 57

state 22

    (1) start -> create ENDREQUEST .

    $end            reduce using rule 1 (start -> create ENDREQUEST .)


state 23

    (2) start -> show ENDREQUEST .

    $end            reduce using rule 2 (start -> show ENDREQUEST .)


state 24

    (3) start -> drop ENDREQUEST .

    $end            reduce using rule 3 (start -> drop ENDREQUEST .)


state 25

    (4) start -> tree_selects ENDREQUEST .

    $end            reduce using rule 4 (start -> tree_selects ENDREQUEST .)


state 26

    (5) start -> insert ENDREQUEST .

    $end            reduce using rule 5 (start -> insert ENDREQUEST .)


state 27

    (6) start -> update ENDREQUEST .

    $end            reduce using rule 6 (start -> update ENDREQUEST .)


state 28

    (7) start -> delete ENDREQUEST .

    $end            reduce using rule 7 (start -> delete ENDREQUEST .)


state 29

    (8) start -> transaction ENDREQUEST .

    $end            reduce using rule 8 (start -> transaction ENDREQUEST .)


state 30

    (12) create -> CREATE INDEX . NAME ON NAME LBRACKET fields RBRACKET

    NAME            shift and go to state 58


state 31

    (13) create -> CREATE create_body .

    ENDREQUEST      reduce using rule 13 (create -> CREATE create_body .)


state 32

    (14) create_body -> TABLE . NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET
    (15) create_body -> TABLE . NAME LBRACKET variables RBRACKET

    NAME            shift and go to state 59


state 33

    (28) tree_selects -> LBRACKET tree_selects . RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> LBRACKET tree_selects . RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> LBRACKET tree_selects . RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> LBRACKET tree_selects . RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> LBRACKET tree_selects . RBRACKET union select
    (33) tree_selects -> LBRACKET tree_selects . RBRACKET intersect select
    (34) tree_selects -> LBRACKET tree_selects . RBRACKET join select join_condition
    (35) tree_selects -> LBRACKET tree_selects . RBRACKET join select
    (36) tree_selects -> LBRACKET tree_selects . RBRACKET join name_table join_condition
    (37) tree_selects -> LBRACKET tree_selects . RBRACKET join name_table

    RBRACKET        shift and go to state 60


state 34

    (18) show -> SHOW INDEX . NAME

    NAME            shift and go to state 61


state 35

    (19) show -> SHOW CREATE . TABLE NAME

    TABLE           shift and go to state 62


state 36

    (20) drop -> DROP INDEX . NAME ON NAME

    NAME            shift and go to state 63


state 37

    (21) drop -> DROP TABLE . NAME

    NAME            shift and go to state 64


state 38

    (38) tree_selects -> select union . LBRACKET tree_selects RBRACKET
    (42) tree_selects -> select union . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 66
    SELECT          shift and go to state 21

    select                         shift and go to state 65

state 39

    (39) tree_selects -> select intersect . LBRACKET tree_selects RBRACKET
    (43) tree_selects -> select intersect . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 68
    SELECT          shift and go to state 21

    select                         shift and go to state 67

state 40

    (40) tree_selects -> select join . LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> select join . LBRACKET tree_selects RBRACKET AS name_table
    (44) tree_selects -> select join . select join_condition
    (45) tree_selects -> select join . select
    (46) tree_selects -> select join . name_table join_condition
    (47) tree_selects -> select join . name_table
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body
    (51) name_table -> . NAME

    LBRACKET        shift and go to state 70
    SELECT          shift and go to state 21
    NAME            shift and go to state 72

    select                         shift and go to state 69
    name_table                     shift and go to state 71

state 41

    (25) union -> UNION .
    (26) union -> UNION . ALL

    LBRACKET        reduce using rule 25 (union -> UNION .)
    SELECT          reduce using rule 25 (union -> UNION .)
    ALL             shift and go to state 73


state 42

    (27) intersect -> INTERSECT .

    LBRACKET        reduce using rule 27 (intersect -> INTERSECT .)
    SELECT          reduce using rule 27 (intersect -> INTERSECT .)


state 43

    (22) join -> JOIN .

    LBRACKET        reduce using rule 22 (join -> JOIN .)
    SELECT          reduce using rule 22 (join -> JOIN .)
    NAME            reduce using rule 22 (join -> JOIN .)


state 44

    (23) join -> LEFT . OUTER JOIN

    OUTER           shift and go to state 74


state 45

    (24) join -> RIGHT . OUTER JOIN

    OUTER           shift and go to state 75


state 46

    (64) insert -> INSERT insert_body .

    ENDREQUEST      reduce using rule 64 (insert -> INSERT insert_body .)


state 47

    (65) insert_body -> INTO . NAME VALUES LBRACKET values RBRACKET
    (66) insert_body -> INTO . NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    NAME            shift and go to state 76


state 48

    (67) update -> UPDATE update_body .

    ENDREQUEST      reduce using rule 67 (update -> UPDATE update_body .)


state 49

    (68) update_body -> NAME . SET expression
    (69) update_body -> NAME . SET expression condition

    SET             shift and go to state 77


state 50

    (72) delete -> DELETE FROM . NAME
    (73) delete -> DELETE FROM . NAME condition

    NAME            shift and go to state 78


state 51

    (9) transaction -> BEGIN TRANSACTION .

    ENDREQUEST      reduce using rule 9 (transaction -> BEGIN TRANSACTION .)


state 52

    (10) transaction -> END TRANSACTION .

    ENDREQUEST      reduce using rule 10 (transaction -> END TRANSACTION .)


state 53

    (52) select -> SELECT select_body . condition FOR SYSTEM TIME FROM date TO date
    (53) select -> SELECT select_body . FOR SYSTEM TIME FROM date TO date
    (54) select -> SELECT select_body . condition
    (55) select -> SELECT select_body .
    (82) condition -> . WHERE tree_condition

    FOR             shift and go to state 80
    UNION           reduce using rule 55 (select -> SELECT select_body .)
    INTERSECT       reduce using rule 55 (select -> SELECT select_body .)
    JOIN            reduce using rule 55 (select -> SELECT select_body .)
    LEFT            reduce using rule 55 (select -> SELECT select_body .)
    RIGHT           reduce using rule 55 (select -> SELECT select_body .)
    ENDREQUEST      reduce using rule 55 (select -> SELECT select_body .)
    RBRACKET        reduce using rule 55 (select -> SELECT select_body .)
    ON              reduce using rule 55 (select -> SELECT select_body .)
    USING           reduce using rule 55 (select -> SELECT select_body .)
    WHERE           shift and go to state 81

    condition                      shift and go to state 79

state 54

    (61) select_body -> fields . FROM NAME
    (79) fields -> fields . COMMA field

    FROM            shift and go to state 82
    COMMA           shift and go to state 83


state 55

    (80) field -> NAME .
    (81) field -> NAME . DOT NAME

    FROM            reduce using rule 80 (field -> NAME .)
    COMMA           reduce using rule 80 (field -> NAME .)
    EQUAL           reduce using rule 80 (field -> NAME .)
    RBRACKET        reduce using rule 80 (field -> NAME .)
    ENDREQUEST      reduce using rule 80 (field -> NAME .)
    DOT             shift and go to state 84


state 56

    (62) select_body -> STAR . COMMA fields FROM NAME
    (63) select_body -> STAR . FROM NAME

    COMMA           shift and go to state 85
    FROM            shift and go to state 86


state 57

    (78) fields -> field .

    FROM            reduce using rule 78 (fields -> field .)
    COMMA           reduce using rule 78 (fields -> field .)
    RBRACKET        reduce using rule 78 (fields -> field .)


state 58

    (12) create -> CREATE INDEX NAME . ON NAME LBRACKET fields RBRACKET

    ON              shift and go to state 87


state 59

    (14) create_body -> TABLE NAME . LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET
    (15) create_body -> TABLE NAME . LBRACKET variables RBRACKET

    LBRACKET        shift and go to state 88


state 60

    (28) tree_selects -> LBRACKET tree_selects RBRACKET . union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> LBRACKET tree_selects RBRACKET . intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> LBRACKET tree_selects RBRACKET . join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> LBRACKET tree_selects RBRACKET . join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> LBRACKET tree_selects RBRACKET . union select
    (33) tree_selects -> LBRACKET tree_selects RBRACKET . intersect select
    (34) tree_selects -> LBRACKET tree_selects RBRACKET . join select join_condition
    (35) tree_selects -> LBRACKET tree_selects RBRACKET . join select
    (36) tree_selects -> LBRACKET tree_selects RBRACKET . join name_table join_condition
    (37) tree_selects -> LBRACKET tree_selects RBRACKET . join name_table
    (25) union -> . UNION
    (26) union -> . UNION ALL
    (27) intersect -> . INTERSECT
    (22) join -> . JOIN
    (23) join -> . LEFT OUTER JOIN
    (24) join -> . RIGHT OUTER JOIN

    UNION           shift and go to state 41
    INTERSECT       shift and go to state 42
    JOIN            shift and go to state 43
    LEFT            shift and go to state 44
    RIGHT           shift and go to state 45

    union                          shift and go to state 89
    intersect                      shift and go to state 90
    join                           shift and go to state 91

state 61

    (18) show -> SHOW INDEX NAME .

    ENDREQUEST      reduce using rule 18 (show -> SHOW INDEX NAME .)


state 62

    (19) show -> SHOW CREATE TABLE . NAME

    NAME            shift and go to state 92


state 63

    (20) drop -> DROP INDEX NAME . ON NAME

    ON              shift and go to state 93


state 64

    (21) drop -> DROP TABLE NAME .

    ENDREQUEST      reduce using rule 21 (drop -> DROP TABLE NAME .)


state 65

    (42) tree_selects -> select union select .

    ENDREQUEST      reduce using rule 42 (tree_selects -> select union select .)
    RBRACKET        reduce using rule 42 (tree_selects -> select union select .)


state 66

    (38) tree_selects -> select union LBRACKET . tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (34) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (35) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (36) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (38) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> . select union select
    (43) tree_selects -> . select intersect select
    (44) tree_selects -> . select join select join_condition
    (45) tree_selects -> . select join select
    (46) tree_selects -> . select join name_table join_condition
    (47) tree_selects -> . select join name_table
    (48) tree_selects -> . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 11
    SELECT          shift and go to state 21

    select                         shift and go to state 14
    tree_selects                   shift and go to state 94

state 67

    (43) tree_selects -> select intersect select .

    ENDREQUEST      reduce using rule 43 (tree_selects -> select intersect select .)
    RBRACKET        reduce using rule 43 (tree_selects -> select intersect select .)


state 68

    (39) tree_selects -> select intersect LBRACKET . tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (34) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (35) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (36) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (38) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> . select union select
    (43) tree_selects -> . select intersect select
    (44) tree_selects -> . select join select join_condition
    (45) tree_selects -> . select join select
    (46) tree_selects -> . select join name_table join_condition
    (47) tree_selects -> . select join name_table
    (48) tree_selects -> . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 11
    SELECT          shift and go to state 21

    select                         shift and go to state 14
    tree_selects                   shift and go to state 95

state 69

    (44) tree_selects -> select join select . join_condition
    (45) tree_selects -> select join select .
    (49) join_condition -> . ON field EQUAL field
    (50) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 45 (tree_selects -> select join select .)
    RBRACKET        reduce using rule 45 (tree_selects -> select join select .)
    ON              shift and go to state 97
    USING           shift and go to state 98

    join_condition                 shift and go to state 96

state 70

    (40) tree_selects -> select join LBRACKET . tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> select join LBRACKET . tree_selects RBRACKET AS name_table
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (34) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (35) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (36) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (38) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> . select union select
    (43) tree_selects -> . select intersect select
    (44) tree_selects -> . select join select join_condition
    (45) tree_selects -> . select join select
    (46) tree_selects -> . select join name_table join_condition
    (47) tree_selects -> . select join name_table
    (48) tree_selects -> . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 11
    SELECT          shift and go to state 21

    select                         shift and go to state 14
    tree_selects                   shift and go to state 99

state 71

    (46) tree_selects -> select join name_table . join_condition
    (47) tree_selects -> select join name_table .
    (49) join_condition -> . ON field EQUAL field
    (50) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 47 (tree_selects -> select join name_table .)
    RBRACKET        reduce using rule 47 (tree_selects -> select join name_table .)
    ON              shift and go to state 97
    USING           shift and go to state 98

    join_condition                 shift and go to state 100

state 72

    (51) name_table -> NAME .

    ON              reduce using rule 51 (name_table -> NAME .)
    USING           reduce using rule 51 (name_table -> NAME .)
    ENDREQUEST      reduce using rule 51 (name_table -> NAME .)
    RBRACKET        reduce using rule 51 (name_table -> NAME .)


state 73

    (26) union -> UNION ALL .

    LBRACKET        reduce using rule 26 (union -> UNION ALL .)
    SELECT          reduce using rule 26 (union -> UNION ALL .)


state 74

    (23) join -> LEFT OUTER . JOIN

    JOIN            shift and go to state 101


state 75

    (24) join -> RIGHT OUTER . JOIN

    JOIN            shift and go to state 102


state 76

    (65) insert_body -> INTO NAME . VALUES LBRACKET values RBRACKET
    (66) insert_body -> INTO NAME . LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    VALUES          shift and go to state 103
    LBRACKET        shift and go to state 104


state 77

    (68) update_body -> NAME SET . expression
    (69) update_body -> NAME SET . expression condition
    (70) expression -> . field EQUAL tree_expression
    (71) expression -> . expression COMMA field EQUAL tree_expression
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    expression                     shift and go to state 105
    field                          shift and go to state 106

state 78

    (72) delete -> DELETE FROM NAME .
    (73) delete -> DELETE FROM NAME . condition
    (82) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 72 (delete -> DELETE FROM NAME .)
    WHERE           shift and go to state 81

    condition                      shift and go to state 107

state 79

    (52) select -> SELECT select_body condition . FOR SYSTEM TIME FROM date TO date
    (54) select -> SELECT select_body condition .

    FOR             shift and go to state 108
    UNION           reduce using rule 54 (select -> SELECT select_body condition .)
    INTERSECT       reduce using rule 54 (select -> SELECT select_body condition .)
    JOIN            reduce using rule 54 (select -> SELECT select_body condition .)
    LEFT            reduce using rule 54 (select -> SELECT select_body condition .)
    RIGHT           reduce using rule 54 (select -> SELECT select_body condition .)
    ENDREQUEST      reduce using rule 54 (select -> SELECT select_body condition .)
    RBRACKET        reduce using rule 54 (select -> SELECT select_body condition .)
    ON              reduce using rule 54 (select -> SELECT select_body condition .)
    USING           reduce using rule 54 (select -> SELECT select_body condition .)


state 80

    (53) select -> SELECT select_body FOR . SYSTEM TIME FROM date TO date

    SYSTEM          shift and go to state 109


state 81

    (82) condition -> WHERE . tree_condition
    (83) tree_condition -> . tree_comparison operator_condition tree_condition
    (84) tree_condition -> . tree_comparison
    (85) tree_comparison -> . tree_expression operator_comparison tree_expression
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    tree_condition                 shift and go to state 110
    tree_comparison                shift and go to state 111
    tree_expression                shift and go to state 112
    value                          shift and go to state 113
    operator_expression            shift and go to state 114

state 82

    (61) select_body -> fields FROM . NAME

    NAME            shift and go to state 122


state 83

    (79) fields -> fields COMMA . field
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    field                          shift and go to state 123

state 84

    (81) field -> NAME DOT . NAME

    NAME            shift and go to state 124


state 85

    (62) select_body -> STAR COMMA . fields FROM NAME
    (78) fields -> . field
    (79) fields -> . fields COMMA field
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    fields                         shift and go to state 125
    field                          shift and go to state 57

state 86

    (63) select_body -> STAR FROM . NAME

    NAME            shift and go to state 126


state 87

    (12) create -> CREATE INDEX NAME ON . NAME LBRACKET fields RBRACKET

    NAME            shift and go to state 127


state 88

    (14) create_body -> TABLE NAME LBRACKET . variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET
    (15) create_body -> TABLE NAME LBRACKET . variables RBRACKET
    (16) variables -> . NAME type
    (17) variables -> . variables COMMA NAME type

    NAME            shift and go to state 128

    variables                      shift and go to state 129

state 89

    (28) tree_selects -> LBRACKET tree_selects RBRACKET union . LBRACKET tree_selects RBRACKET
    (32) tree_selects -> LBRACKET tree_selects RBRACKET union . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 130
    SELECT          shift and go to state 21

    select                         shift and go to state 131

state 90

    (29) tree_selects -> LBRACKET tree_selects RBRACKET intersect . LBRACKET tree_selects RBRACKET
    (33) tree_selects -> LBRACKET tree_selects RBRACKET intersect . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 132
    SELECT          shift and go to state 21

    select                         shift and go to state 133

state 91

    (30) tree_selects -> LBRACKET tree_selects RBRACKET join . LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> LBRACKET tree_selects RBRACKET join . LBRACKET tree_selects RBRACKET
    (34) tree_selects -> LBRACKET tree_selects RBRACKET join . select join_condition
    (35) tree_selects -> LBRACKET tree_selects RBRACKET join . select
    (36) tree_selects -> LBRACKET tree_selects RBRACKET join . name_table join_condition
    (37) tree_selects -> LBRACKET tree_selects RBRACKET join . name_table
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body
    (51) name_table -> . NAME

    LBRACKET        shift and go to state 134
    SELECT          shift and go to state 21
    NAME            shift and go to state 72

    select                         shift and go to state 135
    name_table                     shift and go to state 136

state 92

    (19) show -> SHOW CREATE TABLE NAME .

    ENDREQUEST      reduce using rule 19 (show -> SHOW CREATE TABLE NAME .)


state 93

    (20) drop -> DROP INDEX NAME ON . NAME

    NAME            shift and go to state 137


state 94

    (38) tree_selects -> select union LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 138


state 95

    (39) tree_selects -> select intersect LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 139


state 96

    (44) tree_selects -> select join select join_condition .

    ENDREQUEST      reduce using rule 44 (tree_selects -> select join select join_condition .)
    RBRACKET        reduce using rule 44 (tree_selects -> select join select join_condition .)


state 97

    (49) join_condition -> ON . field EQUAL field
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    field                          shift and go to state 140

state 98

    (50) join_condition -> USING . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 141


state 99

    (40) tree_selects -> select join LBRACKET tree_selects . RBRACKET AS name_table join_condition
    (41) tree_selects -> select join LBRACKET tree_selects . RBRACKET AS name_table

    RBRACKET        shift and go to state 142


state 100

    (46) tree_selects -> select join name_table join_condition .

    ENDREQUEST      reduce using rule 46 (tree_selects -> select join name_table join_condition .)
    RBRACKET        reduce using rule 46 (tree_selects -> select join name_table join_condition .)


state 101

    (23) join -> LEFT OUTER JOIN .

    LBRACKET        reduce using rule 23 (join -> LEFT OUTER JOIN .)
    SELECT          reduce using rule 23 (join -> LEFT OUTER JOIN .)
    NAME            reduce using rule 23 (join -> LEFT OUTER JOIN .)


state 102

    (24) join -> RIGHT OUTER JOIN .

    LBRACKET        reduce using rule 24 (join -> RIGHT OUTER JOIN .)
    SELECT          reduce using rule 24 (join -> RIGHT OUTER JOIN .)
    NAME            reduce using rule 24 (join -> RIGHT OUTER JOIN .)


state 103

    (65) insert_body -> INTO NAME VALUES . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 143


state 104

    (66) insert_body -> INTO NAME LBRACKET . fields RBRACKET VALUES LBRACKET values RBRACKET
    (78) fields -> . field
    (79) fields -> . fields COMMA field
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    fields                         shift and go to state 144
    field                          shift and go to state 57

state 105

    (68) update_body -> NAME SET expression .
    (69) update_body -> NAME SET expression . condition
    (71) expression -> expression . COMMA field EQUAL tree_expression
    (82) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 68 (update_body -> NAME SET expression .)
    COMMA           shift and go to state 146
    WHERE           shift and go to state 81

    condition                      shift and go to state 145

state 106

    (70) expression -> field . EQUAL tree_expression

    EQUAL           shift and go to state 147


state 107

    (73) delete -> DELETE FROM NAME condition .

    ENDREQUEST      reduce using rule 73 (delete -> DELETE FROM NAME condition .)


state 108

    (52) select -> SELECT select_body condition FOR . SYSTEM TIME FROM date TO date

    SYSTEM          shift and go to state 148


state 109

    (53) select -> SELECT select_body FOR SYSTEM . TIME FROM date TO date

    TIME            shift and go to state 149


state 110

    (82) condition -> WHERE tree_condition .

    FOR             reduce using rule 82 (condition -> WHERE tree_condition .)
    UNION           reduce using rule 82 (condition -> WHERE tree_condition .)
    INTERSECT       reduce using rule 82 (condition -> WHERE tree_condition .)
    JOIN            reduce using rule 82 (condition -> WHERE tree_condition .)
    LEFT            reduce using rule 82 (condition -> WHERE tree_condition .)
    RIGHT           reduce using rule 82 (condition -> WHERE tree_condition .)
    ENDREQUEST      reduce using rule 82 (condition -> WHERE tree_condition .)
    RBRACKET        reduce using rule 82 (condition -> WHERE tree_condition .)
    ON              reduce using rule 82 (condition -> WHERE tree_condition .)
    USING           reduce using rule 82 (condition -> WHERE tree_condition .)


state 111

    (83) tree_condition -> tree_comparison . operator_condition tree_condition
    (84) tree_condition -> tree_comparison .
    (91) operator_condition -> . AND
    (92) operator_condition -> . OR

    FOR             reduce using rule 84 (tree_condition -> tree_comparison .)
    UNION           reduce using rule 84 (tree_condition -> tree_comparison .)
    INTERSECT       reduce using rule 84 (tree_condition -> tree_comparison .)
    JOIN            reduce using rule 84 (tree_condition -> tree_comparison .)
    LEFT            reduce using rule 84 (tree_condition -> tree_comparison .)
    RIGHT           reduce using rule 84 (tree_condition -> tree_comparison .)
    ENDREQUEST      reduce using rule 84 (tree_condition -> tree_comparison .)
    RBRACKET        reduce using rule 84 (tree_condition -> tree_comparison .)
    ON              reduce using rule 84 (tree_condition -> tree_comparison .)
    USING           reduce using rule 84 (tree_condition -> tree_comparison .)
    AND             shift and go to state 151
    OR              shift and go to state 152

    operator_condition             shift and go to state 150

state 112

    (85) tree_comparison -> tree_expression . operator_comparison tree_expression
    (90) tree_expression -> tree_expression . operator_expression tree_expression
    (93) operator_comparison -> . GREATER_THAN_OR_EQUAL
    (94) operator_comparison -> . LESS_THAN_OR_EQUAL
    (95) operator_comparison -> . NOT_EQUAL
    (96) operator_comparison -> . EQUAL
    (97) operator_comparison -> . GREATER_THAN
    (98) operator_comparison -> . LESS_THAN
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    GREATER_THAN_OR_EQUAL shift and go to state 155
    LESS_THAN_OR_EQUAL shift and go to state 156
    NOT_EQUAL       shift and go to state 157
    EQUAL           shift and go to state 158
    GREATER_THAN    shift and go to state 159
    LESS_THAN       shift and go to state 160
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    operator_comparison            shift and go to state 153
    operator_expression            shift and go to state 154

state 113

    (86) tree_expression -> value .
    (87) tree_expression -> value . operator_expression tree_expression
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    GREATER_THAN_OR_EQUAL reduce using rule 86 (tree_expression -> value .)
    LESS_THAN_OR_EQUAL reduce using rule 86 (tree_expression -> value .)
    NOT_EQUAL       reduce using rule 86 (tree_expression -> value .)
    EQUAL           reduce using rule 86 (tree_expression -> value .)
    GREATER_THAN    reduce using rule 86 (tree_expression -> value .)
    LESS_THAN       reduce using rule 86 (tree_expression -> value .)
    RBRACKET        reduce using rule 86 (tree_expression -> value .)
    COMMA           reduce using rule 86 (tree_expression -> value .)
    WHERE           reduce using rule 86 (tree_expression -> value .)
    ENDREQUEST      reduce using rule 86 (tree_expression -> value .)
    AND             reduce using rule 86 (tree_expression -> value .)
    OR              reduce using rule 86 (tree_expression -> value .)
    FOR             reduce using rule 86 (tree_expression -> value .)
    UNION           reduce using rule 86 (tree_expression -> value .)
    INTERSECT       reduce using rule 86 (tree_expression -> value .)
    JOIN            reduce using rule 86 (tree_expression -> value .)
    LEFT            reduce using rule 86 (tree_expression -> value .)
    RIGHT           reduce using rule 86 (tree_expression -> value .)
    ON              reduce using rule 86 (tree_expression -> value .)
    USING           reduce using rule 86 (tree_expression -> value .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

  ! PLUS            [ reduce using rule 86 (tree_expression -> value .) ]
  ! MINUS           [ reduce using rule 86 (tree_expression -> value .) ]
  ! STAR            [ reduce using rule 86 (tree_expression -> value .) ]
  ! DIVISION        [ reduce using rule 86 (tree_expression -> value .) ]

    operator_expression            shift and go to state 161

state 114

    (88) tree_expression -> operator_expression . tree_expression
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    operator_expression            shift and go to state 114
    tree_expression                shift and go to state 162
    value                          shift and go to state 113

state 115

    (89) tree_expression -> LBRACKET . tree_expression RBRACKET
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    tree_expression                shift and go to state 163
    value                          shift and go to state 113
    operator_expression            shift and go to state 114

state 116

    (76) value -> NAME .

    PLUS            reduce using rule 76 (value -> NAME .)
    MINUS           reduce using rule 76 (value -> NAME .)
    STAR            reduce using rule 76 (value -> NAME .)
    DIVISION        reduce using rule 76 (value -> NAME .)
    GREATER_THAN_OR_EQUAL reduce using rule 76 (value -> NAME .)
    LESS_THAN_OR_EQUAL reduce using rule 76 (value -> NAME .)
    NOT_EQUAL       reduce using rule 76 (value -> NAME .)
    EQUAL           reduce using rule 76 (value -> NAME .)
    GREATER_THAN    reduce using rule 76 (value -> NAME .)
    LESS_THAN       reduce using rule 76 (value -> NAME .)
    RBRACKET        reduce using rule 76 (value -> NAME .)
    COMMA           reduce using rule 76 (value -> NAME .)
    WHERE           reduce using rule 76 (value -> NAME .)
    ENDREQUEST      reduce using rule 76 (value -> NAME .)
    AND             reduce using rule 76 (value -> NAME .)
    OR              reduce using rule 76 (value -> NAME .)
    FOR             reduce using rule 76 (value -> NAME .)
    UNION           reduce using rule 76 (value -> NAME .)
    INTERSECT       reduce using rule 76 (value -> NAME .)
    JOIN            reduce using rule 76 (value -> NAME .)
    LEFT            reduce using rule 76 (value -> NAME .)
    RIGHT           reduce using rule 76 (value -> NAME .)
    ON              reduce using rule 76 (value -> NAME .)
    USING           reduce using rule 76 (value -> NAME .)


state 117

    (77) value -> QUOTE . NAME QUOTE

    NAME            shift and go to state 164


state 118

    (99) operator_expression -> PLUS .

    LBRACKET        reduce using rule 99 (operator_expression -> PLUS .)
    NAME            reduce using rule 99 (operator_expression -> PLUS .)
    QUOTE           reduce using rule 99 (operator_expression -> PLUS .)
    PLUS            reduce using rule 99 (operator_expression -> PLUS .)
    MINUS           reduce using rule 99 (operator_expression -> PLUS .)
    STAR            reduce using rule 99 (operator_expression -> PLUS .)
    DIVISION        reduce using rule 99 (operator_expression -> PLUS .)


state 119

    (100) operator_expression -> MINUS .

    LBRACKET        reduce using rule 100 (operator_expression -> MINUS .)
    NAME            reduce using rule 100 (operator_expression -> MINUS .)
    QUOTE           reduce using rule 100 (operator_expression -> MINUS .)
    PLUS            reduce using rule 100 (operator_expression -> MINUS .)
    MINUS           reduce using rule 100 (operator_expression -> MINUS .)
    STAR            reduce using rule 100 (operator_expression -> MINUS .)
    DIVISION        reduce using rule 100 (operator_expression -> MINUS .)


state 120

    (101) operator_expression -> STAR .

    LBRACKET        reduce using rule 101 (operator_expression -> STAR .)
    NAME            reduce using rule 101 (operator_expression -> STAR .)
    QUOTE           reduce using rule 101 (operator_expression -> STAR .)
    PLUS            reduce using rule 101 (operator_expression -> STAR .)
    MINUS           reduce using rule 101 (operator_expression -> STAR .)
    STAR            reduce using rule 101 (operator_expression -> STAR .)
    DIVISION        reduce using rule 101 (operator_expression -> STAR .)


state 121

    (102) operator_expression -> DIVISION .

    LBRACKET        reduce using rule 102 (operator_expression -> DIVISION .)
    NAME            reduce using rule 102 (operator_expression -> DIVISION .)
    QUOTE           reduce using rule 102 (operator_expression -> DIVISION .)
    PLUS            reduce using rule 102 (operator_expression -> DIVISION .)
    MINUS           reduce using rule 102 (operator_expression -> DIVISION .)
    STAR            reduce using rule 102 (operator_expression -> DIVISION .)
    DIVISION        reduce using rule 102 (operator_expression -> DIVISION .)


state 122

    (61) select_body -> fields FROM NAME .

    FOR             reduce using rule 61 (select_body -> fields FROM NAME .)
    WHERE           reduce using rule 61 (select_body -> fields FROM NAME .)
    UNION           reduce using rule 61 (select_body -> fields FROM NAME .)
    INTERSECT       reduce using rule 61 (select_body -> fields FROM NAME .)
    JOIN            reduce using rule 61 (select_body -> fields FROM NAME .)
    LEFT            reduce using rule 61 (select_body -> fields FROM NAME .)
    RIGHT           reduce using rule 61 (select_body -> fields FROM NAME .)
    ENDREQUEST      reduce using rule 61 (select_body -> fields FROM NAME .)
    RBRACKET        reduce using rule 61 (select_body -> fields FROM NAME .)
    ON              reduce using rule 61 (select_body -> fields FROM NAME .)
    USING           reduce using rule 61 (select_body -> fields FROM NAME .)


state 123

    (79) fields -> fields COMMA field .

    FROM            reduce using rule 79 (fields -> fields COMMA field .)
    COMMA           reduce using rule 79 (fields -> fields COMMA field .)
    RBRACKET        reduce using rule 79 (fields -> fields COMMA field .)


state 124

    (81) field -> NAME DOT NAME .

    FROM            reduce using rule 81 (field -> NAME DOT NAME .)
    COMMA           reduce using rule 81 (field -> NAME DOT NAME .)
    EQUAL           reduce using rule 81 (field -> NAME DOT NAME .)
    RBRACKET        reduce using rule 81 (field -> NAME DOT NAME .)
    ENDREQUEST      reduce using rule 81 (field -> NAME DOT NAME .)


state 125

    (62) select_body -> STAR COMMA fields . FROM NAME
    (79) fields -> fields . COMMA field

    FROM            shift and go to state 165
    COMMA           shift and go to state 83


state 126

    (63) select_body -> STAR FROM NAME .

    FOR             reduce using rule 63 (select_body -> STAR FROM NAME .)
    WHERE           reduce using rule 63 (select_body -> STAR FROM NAME .)
    UNION           reduce using rule 63 (select_body -> STAR FROM NAME .)
    INTERSECT       reduce using rule 63 (select_body -> STAR FROM NAME .)
    JOIN            reduce using rule 63 (select_body -> STAR FROM NAME .)
    LEFT            reduce using rule 63 (select_body -> STAR FROM NAME .)
    RIGHT           reduce using rule 63 (select_body -> STAR FROM NAME .)
    ENDREQUEST      reduce using rule 63 (select_body -> STAR FROM NAME .)
    RBRACKET        reduce using rule 63 (select_body -> STAR FROM NAME .)
    ON              reduce using rule 63 (select_body -> STAR FROM NAME .)
    USING           reduce using rule 63 (select_body -> STAR FROM NAME .)


state 127

    (12) create -> CREATE INDEX NAME ON NAME . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 166


state 128

    (16) variables -> NAME . type
    (103) type -> . int
    (104) type -> . str
    (105) type -> . bol
    (106) type -> . bool
    (107) type -> . float

    int             shift and go to state 168
    str             shift and go to state 169
    bol             shift and go to state 170
    bool            shift and go to state 171
    float           shift and go to state 172

    type                           shift and go to state 167

state 129

    (14) create_body -> TABLE NAME LBRACKET variables . RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET
    (15) create_body -> TABLE NAME LBRACKET variables . RBRACKET
    (17) variables -> variables . COMMA NAME type

    RBRACKET        shift and go to state 173
    COMMA           shift and go to state 174


state 130

    (28) tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET . tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (34) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (35) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (36) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (38) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> . select union select
    (43) tree_selects -> . select intersect select
    (44) tree_selects -> . select join select join_condition
    (45) tree_selects -> . select join select
    (46) tree_selects -> . select join name_table join_condition
    (47) tree_selects -> . select join name_table
    (48) tree_selects -> . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 11
    SELECT          shift and go to state 21

    tree_selects                   shift and go to state 175
    select                         shift and go to state 14

state 131

    (32) tree_selects -> LBRACKET tree_selects RBRACKET union select .

    ENDREQUEST      reduce using rule 32 (tree_selects -> LBRACKET tree_selects RBRACKET union select .)
    RBRACKET        reduce using rule 32 (tree_selects -> LBRACKET tree_selects RBRACKET union select .)


state 132

    (29) tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET . tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (34) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (35) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (36) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (38) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> . select union select
    (43) tree_selects -> . select intersect select
    (44) tree_selects -> . select join select join_condition
    (45) tree_selects -> . select join select
    (46) tree_selects -> . select join name_table join_condition
    (47) tree_selects -> . select join name_table
    (48) tree_selects -> . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 11
    SELECT          shift and go to state 21

    tree_selects                   shift and go to state 176
    select                         shift and go to state 14

state 133

    (33) tree_selects -> LBRACKET tree_selects RBRACKET intersect select .

    ENDREQUEST      reduce using rule 33 (tree_selects -> LBRACKET tree_selects RBRACKET intersect select .)
    RBRACKET        reduce using rule 33 (tree_selects -> LBRACKET tree_selects RBRACKET intersect select .)


state 134

    (30) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET . tree_selects RBRACKET join_condition
    (31) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET . tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (34) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (35) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (36) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (37) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (38) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (39) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (40) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (41) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (42) tree_selects -> . select union select
    (43) tree_selects -> . select intersect select
    (44) tree_selects -> . select join select join_condition
    (45) tree_selects -> . select join select
    (46) tree_selects -> . select join name_table join_condition
    (47) tree_selects -> . select join name_table
    (48) tree_selects -> . select
    (52) select -> . SELECT select_body condition FOR SYSTEM TIME FROM date TO date
    (53) select -> . SELECT select_body FOR SYSTEM TIME FROM date TO date
    (54) select -> . SELECT select_body condition
    (55) select -> . SELECT select_body

    LBRACKET        shift and go to state 11
    SELECT          shift and go to state 21

    tree_selects                   shift and go to state 177
    select                         shift and go to state 14

state 135

    (34) tree_selects -> LBRACKET tree_selects RBRACKET join select . join_condition
    (35) tree_selects -> LBRACKET tree_selects RBRACKET join select .
    (49) join_condition -> . ON field EQUAL field
    (50) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 35 (tree_selects -> LBRACKET tree_selects RBRACKET join select .)
    RBRACKET        reduce using rule 35 (tree_selects -> LBRACKET tree_selects RBRACKET join select .)
    ON              shift and go to state 97
    USING           shift and go to state 98

    join_condition                 shift and go to state 178

state 136

    (36) tree_selects -> LBRACKET tree_selects RBRACKET join name_table . join_condition
    (37) tree_selects -> LBRACKET tree_selects RBRACKET join name_table .
    (49) join_condition -> . ON field EQUAL field
    (50) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 37 (tree_selects -> LBRACKET tree_selects RBRACKET join name_table .)
    RBRACKET        reduce using rule 37 (tree_selects -> LBRACKET tree_selects RBRACKET join name_table .)
    ON              shift and go to state 97
    USING           shift and go to state 98

    join_condition                 shift and go to state 179

state 137

    (20) drop -> DROP INDEX NAME ON NAME .

    ENDREQUEST      reduce using rule 20 (drop -> DROP INDEX NAME ON NAME .)


state 138

    (38) tree_selects -> select union LBRACKET tree_selects RBRACKET .

    ENDREQUEST      reduce using rule 38 (tree_selects -> select union LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 38 (tree_selects -> select union LBRACKET tree_selects RBRACKET .)


state 139

    (39) tree_selects -> select intersect LBRACKET tree_selects RBRACKET .

    ENDREQUEST      reduce using rule 39 (tree_selects -> select intersect LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 39 (tree_selects -> select intersect LBRACKET tree_selects RBRACKET .)


state 140

    (49) join_condition -> ON field . EQUAL field

    EQUAL           shift and go to state 180


state 141

    (50) join_condition -> USING LBRACKET . fields RBRACKET
    (78) fields -> . field
    (79) fields -> . fields COMMA field
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    fields                         shift and go to state 181
    field                          shift and go to state 57

state 142

    (40) tree_selects -> select join LBRACKET tree_selects RBRACKET . AS name_table join_condition
    (41) tree_selects -> select join LBRACKET tree_selects RBRACKET . AS name_table

    AS              shift and go to state 182


state 143

    (65) insert_body -> INTO NAME VALUES LBRACKET . values RBRACKET
    (74) values -> . value
    (75) values -> . values COMMA value
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 116
    QUOTE           shift and go to state 117

    values                         shift and go to state 183
    value                          shift and go to state 184

state 144

    (66) insert_body -> INTO NAME LBRACKET fields . RBRACKET VALUES LBRACKET values RBRACKET
    (79) fields -> fields . COMMA field

    RBRACKET        shift and go to state 185
    COMMA           shift and go to state 83


state 145

    (69) update_body -> NAME SET expression condition .

    ENDREQUEST      reduce using rule 69 (update_body -> NAME SET expression condition .)


state 146

    (71) expression -> expression COMMA . field EQUAL tree_expression
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    field                          shift and go to state 186

state 147

    (70) expression -> field EQUAL . tree_expression
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    tree_expression                shift and go to state 187
    value                          shift and go to state 113
    operator_expression            shift and go to state 114

state 148

    (52) select -> SELECT select_body condition FOR SYSTEM . TIME FROM date TO date

    TIME            shift and go to state 188


state 149

    (53) select -> SELECT select_body FOR SYSTEM TIME . FROM date TO date

    FROM            shift and go to state 189


state 150

    (83) tree_condition -> tree_comparison operator_condition . tree_condition
    (83) tree_condition -> . tree_comparison operator_condition tree_condition
    (84) tree_condition -> . tree_comparison
    (85) tree_comparison -> . tree_expression operator_comparison tree_expression
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    tree_comparison                shift and go to state 111
    tree_condition                 shift and go to state 190
    tree_expression                shift and go to state 112
    value                          shift and go to state 113
    operator_expression            shift and go to state 114

state 151

    (91) operator_condition -> AND .

    LBRACKET        reduce using rule 91 (operator_condition -> AND .)
    NAME            reduce using rule 91 (operator_condition -> AND .)
    QUOTE           reduce using rule 91 (operator_condition -> AND .)
    PLUS            reduce using rule 91 (operator_condition -> AND .)
    MINUS           reduce using rule 91 (operator_condition -> AND .)
    STAR            reduce using rule 91 (operator_condition -> AND .)
    DIVISION        reduce using rule 91 (operator_condition -> AND .)


state 152

    (92) operator_condition -> OR .

    LBRACKET        reduce using rule 92 (operator_condition -> OR .)
    NAME            reduce using rule 92 (operator_condition -> OR .)
    QUOTE           reduce using rule 92 (operator_condition -> OR .)
    PLUS            reduce using rule 92 (operator_condition -> OR .)
    MINUS           reduce using rule 92 (operator_condition -> OR .)
    STAR            reduce using rule 92 (operator_condition -> OR .)
    DIVISION        reduce using rule 92 (operator_condition -> OR .)


state 153

    (85) tree_comparison -> tree_expression operator_comparison . tree_expression
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    tree_expression                shift and go to state 191
    value                          shift and go to state 113
    operator_expression            shift and go to state 114

state 154

    (90) tree_expression -> tree_expression operator_expression . tree_expression
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    tree_expression                shift and go to state 192
    operator_expression            shift and go to state 114
    value                          shift and go to state 113

state 155

    (93) operator_comparison -> GREATER_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 93 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    NAME            reduce using rule 93 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    QUOTE           reduce using rule 93 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    PLUS            reduce using rule 93 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    MINUS           reduce using rule 93 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    STAR            reduce using rule 93 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 93 (operator_comparison -> GREATER_THAN_OR_EQUAL .)


state 156

    (94) operator_comparison -> LESS_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 94 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    NAME            reduce using rule 94 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    QUOTE           reduce using rule 94 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    PLUS            reduce using rule 94 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    MINUS           reduce using rule 94 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    STAR            reduce using rule 94 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 94 (operator_comparison -> LESS_THAN_OR_EQUAL .)


state 157

    (95) operator_comparison -> NOT_EQUAL .

    LBRACKET        reduce using rule 95 (operator_comparison -> NOT_EQUAL .)
    NAME            reduce using rule 95 (operator_comparison -> NOT_EQUAL .)
    QUOTE           reduce using rule 95 (operator_comparison -> NOT_EQUAL .)
    PLUS            reduce using rule 95 (operator_comparison -> NOT_EQUAL .)
    MINUS           reduce using rule 95 (operator_comparison -> NOT_EQUAL .)
    STAR            reduce using rule 95 (operator_comparison -> NOT_EQUAL .)
    DIVISION        reduce using rule 95 (operator_comparison -> NOT_EQUAL .)


state 158

    (96) operator_comparison -> EQUAL .

    LBRACKET        reduce using rule 96 (operator_comparison -> EQUAL .)
    NAME            reduce using rule 96 (operator_comparison -> EQUAL .)
    QUOTE           reduce using rule 96 (operator_comparison -> EQUAL .)
    PLUS            reduce using rule 96 (operator_comparison -> EQUAL .)
    MINUS           reduce using rule 96 (operator_comparison -> EQUAL .)
    STAR            reduce using rule 96 (operator_comparison -> EQUAL .)
    DIVISION        reduce using rule 96 (operator_comparison -> EQUAL .)


state 159

    (97) operator_comparison -> GREATER_THAN .

    LBRACKET        reduce using rule 97 (operator_comparison -> GREATER_THAN .)
    NAME            reduce using rule 97 (operator_comparison -> GREATER_THAN .)
    QUOTE           reduce using rule 97 (operator_comparison -> GREATER_THAN .)
    PLUS            reduce using rule 97 (operator_comparison -> GREATER_THAN .)
    MINUS           reduce using rule 97 (operator_comparison -> GREATER_THAN .)
    STAR            reduce using rule 97 (operator_comparison -> GREATER_THAN .)
    DIVISION        reduce using rule 97 (operator_comparison -> GREATER_THAN .)


state 160

    (98) operator_comparison -> LESS_THAN .

    LBRACKET        reduce using rule 98 (operator_comparison -> LESS_THAN .)
    NAME            reduce using rule 98 (operator_comparison -> LESS_THAN .)
    QUOTE           reduce using rule 98 (operator_comparison -> LESS_THAN .)
    PLUS            reduce using rule 98 (operator_comparison -> LESS_THAN .)
    MINUS           reduce using rule 98 (operator_comparison -> LESS_THAN .)
    STAR            reduce using rule 98 (operator_comparison -> LESS_THAN .)
    DIVISION        reduce using rule 98 (operator_comparison -> LESS_THAN .)


state 161

    (87) tree_expression -> value operator_expression . tree_expression
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    value                          shift and go to state 113
    operator_expression            shift and go to state 114
    tree_expression                shift and go to state 193

state 162

    (88) tree_expression -> operator_expression tree_expression .
    (90) tree_expression -> tree_expression . operator_expression tree_expression
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    GREATER_THAN_OR_EQUAL reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    EQUAL           reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN       reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    RBRACKET        reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    COMMA           reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    WHERE           reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    AND             reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    OR              reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    FOR             reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    UNION           reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    INTERSECT       reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    JOIN            reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    LEFT            reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    RIGHT           reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    ON              reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    USING           reduce using rule 88 (tree_expression -> operator_expression tree_expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

  ! PLUS            [ reduce using rule 88 (tree_expression -> operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 88 (tree_expression -> operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 88 (tree_expression -> operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 88 (tree_expression -> operator_expression tree_expression .) ]

    operator_expression            shift and go to state 154

state 163

    (89) tree_expression -> LBRACKET tree_expression . RBRACKET
    (90) tree_expression -> tree_expression . operator_expression tree_expression
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    RBRACKET        shift and go to state 194
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    operator_expression            shift and go to state 154

state 164

    (77) value -> QUOTE NAME . QUOTE

    QUOTE           shift and go to state 195


state 165

    (62) select_body -> STAR COMMA fields FROM . NAME

    NAME            shift and go to state 196


state 166

    (12) create -> CREATE INDEX NAME ON NAME LBRACKET . fields RBRACKET
    (78) fields -> . field
    (79) fields -> . fields COMMA field
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    fields                         shift and go to state 197
    field                          shift and go to state 57

state 167

    (16) variables -> NAME type .

    RBRACKET        reduce using rule 16 (variables -> NAME type .)
    COMMA           reduce using rule 16 (variables -> NAME type .)


state 168

    (103) type -> int .

    RBRACKET        reduce using rule 103 (type -> int .)
    COMMA           reduce using rule 103 (type -> int .)


state 169

    (104) type -> str .

    RBRACKET        reduce using rule 104 (type -> str .)
    COMMA           reduce using rule 104 (type -> str .)


state 170

    (105) type -> bol .

    RBRACKET        reduce using rule 105 (type -> bol .)
    COMMA           reduce using rule 105 (type -> bol .)


state 171

    (106) type -> bool .

    RBRACKET        reduce using rule 106 (type -> bool .)
    COMMA           reduce using rule 106 (type -> bool .)


state 172

    (107) type -> float .

    RBRACKET        reduce using rule 107 (type -> float .)
    COMMA           reduce using rule 107 (type -> float .)


state 173

    (14) create_body -> TABLE NAME LBRACKET variables RBRACKET . WITH LBRACKET VERSIONING EQUAL ON RBRACKET
    (15) create_body -> TABLE NAME LBRACKET variables RBRACKET .

    WITH            shift and go to state 198
    ENDREQUEST      reduce using rule 15 (create_body -> TABLE NAME LBRACKET variables RBRACKET .)


state 174

    (17) variables -> variables COMMA . NAME type

    NAME            shift and go to state 199


state 175

    (28) tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 200


state 176

    (29) tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 201


state 177

    (30) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects . RBRACKET join_condition
    (31) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 202


state 178

    (34) tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition .

    ENDREQUEST      reduce using rule 34 (tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition .)
    RBRACKET        reduce using rule 34 (tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition .)


state 179

    (36) tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition .

    ENDREQUEST      reduce using rule 36 (tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition .)
    RBRACKET        reduce using rule 36 (tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition .)


state 180

    (49) join_condition -> ON field EQUAL . field
    (80) field -> . NAME
    (81) field -> . NAME DOT NAME

    NAME            shift and go to state 55

    field                          shift and go to state 203

state 181

    (50) join_condition -> USING LBRACKET fields . RBRACKET
    (79) fields -> fields . COMMA field

    RBRACKET        shift and go to state 204
    COMMA           shift and go to state 83


state 182

    (40) tree_selects -> select join LBRACKET tree_selects RBRACKET AS . name_table join_condition
    (41) tree_selects -> select join LBRACKET tree_selects RBRACKET AS . name_table
    (51) name_table -> . NAME

    NAME            shift and go to state 72

    name_table                     shift and go to state 205

state 183

    (65) insert_body -> INTO NAME VALUES LBRACKET values . RBRACKET
    (75) values -> values . COMMA value

    RBRACKET        shift and go to state 206
    COMMA           shift and go to state 207


state 184

    (74) values -> value .

    RBRACKET        reduce using rule 74 (values -> value .)
    COMMA           reduce using rule 74 (values -> value .)


state 185

    (66) insert_body -> INTO NAME LBRACKET fields RBRACKET . VALUES LBRACKET values RBRACKET

    VALUES          shift and go to state 208


state 186

    (71) expression -> expression COMMA field . EQUAL tree_expression

    EQUAL           shift and go to state 209


state 187

    (70) expression -> field EQUAL tree_expression .
    (90) tree_expression -> tree_expression . operator_expression tree_expression
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    COMMA           reduce using rule 70 (expression -> field EQUAL tree_expression .)
    WHERE           reduce using rule 70 (expression -> field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 70 (expression -> field EQUAL tree_expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    operator_expression            shift and go to state 154

state 188

    (52) select -> SELECT select_body condition FOR SYSTEM TIME . FROM date TO date

    FROM            shift and go to state 210


state 189

    (53) select -> SELECT select_body FOR SYSTEM TIME FROM . date TO date
    (56) date -> . NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME
    (57) date -> . NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME
    (58) date -> . NAME HYPHEN NAME HYPHEN NAME NAME
    (59) date -> . NAME HYPHEN NAME HYPHEN NAME
    (60) date -> . NAME HYPHEN NAME

    NAME            shift and go to state 212

    date                           shift and go to state 211

state 190

    (83) tree_condition -> tree_comparison operator_condition tree_condition .

    FOR             reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    UNION           reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    INTERSECT       reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    JOIN            reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    LEFT            reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    RIGHT           reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    ENDREQUEST      reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    RBRACKET        reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    ON              reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)
    USING           reduce using rule 83 (tree_condition -> tree_comparison operator_condition tree_condition .)


state 191

    (85) tree_comparison -> tree_expression operator_comparison tree_expression .
    (90) tree_expression -> tree_expression . operator_expression tree_expression
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    AND             reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    OR              reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    FOR             reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    UNION           reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    INTERSECT       reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    JOIN            reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    LEFT            reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    RIGHT           reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    ENDREQUEST      reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    RBRACKET        reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    ON              reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    USING           reduce using rule 85 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    operator_expression            shift and go to state 154

state 192

    (90) tree_expression -> tree_expression operator_expression tree_expression .
    (90) tree_expression -> tree_expression . operator_expression tree_expression
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    GREATER_THAN_OR_EQUAL reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    EQUAL           reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN       reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    RBRACKET        reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    COMMA           reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    WHERE           reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    AND             reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    OR              reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    FOR             reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    UNION           reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    INTERSECT       reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    JOIN            reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    LEFT            reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    RIGHT           reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    ON              reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    USING           reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

  ! PLUS            [ reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 90 (tree_expression -> tree_expression operator_expression tree_expression .) ]

    operator_expression            shift and go to state 154

state 193

    (87) tree_expression -> value operator_expression tree_expression .
    (90) tree_expression -> tree_expression . operator_expression tree_expression
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    GREATER_THAN_OR_EQUAL reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    EQUAL           reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    LESS_THAN       reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    RBRACKET        reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    COMMA           reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    WHERE           reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    AND             reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    OR              reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    FOR             reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    UNION           reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    INTERSECT       reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    JOIN            reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    LEFT            reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    RIGHT           reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    ON              reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    USING           reduce using rule 87 (tree_expression -> value operator_expression tree_expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

  ! PLUS            [ reduce using rule 87 (tree_expression -> value operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 87 (tree_expression -> value operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 87 (tree_expression -> value operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 87 (tree_expression -> value operator_expression tree_expression .) ]

    operator_expression            shift and go to state 154

state 194

    (89) tree_expression -> LBRACKET tree_expression RBRACKET .

    GREATER_THAN_OR_EQUAL reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    NOT_EQUAL       reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    EQUAL           reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN    reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN       reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    PLUS            reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    MINUS           reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    STAR            reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    DIVISION        reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RBRACKET        reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    COMMA           reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    WHERE           reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    ENDREQUEST      reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    AND             reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    OR              reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    FOR             reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    UNION           reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    INTERSECT       reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    JOIN            reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LEFT            reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RIGHT           reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    ON              reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    USING           reduce using rule 89 (tree_expression -> LBRACKET tree_expression RBRACKET .)


state 195

    (77) value -> QUOTE NAME QUOTE .

    PLUS            reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    MINUS           reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    STAR            reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    DIVISION        reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    GREATER_THAN_OR_EQUAL reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    NOT_EQUAL       reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    EQUAL           reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    GREATER_THAN    reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    LESS_THAN       reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    RBRACKET        reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    COMMA           reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    WHERE           reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    ENDREQUEST      reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    AND             reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    OR              reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    FOR             reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    UNION           reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    INTERSECT       reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    JOIN            reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    LEFT            reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    RIGHT           reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    ON              reduce using rule 77 (value -> QUOTE NAME QUOTE .)
    USING           reduce using rule 77 (value -> QUOTE NAME QUOTE .)


state 196

    (62) select_body -> STAR COMMA fields FROM NAME .

    FOR             reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    WHERE           reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    UNION           reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    INTERSECT       reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    JOIN            reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    LEFT            reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    RIGHT           reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    ENDREQUEST      reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    RBRACKET        reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    ON              reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)
    USING           reduce using rule 62 (select_body -> STAR COMMA fields FROM NAME .)


state 197

    (12) create -> CREATE INDEX NAME ON NAME LBRACKET fields . RBRACKET
    (79) fields -> fields . COMMA field

    RBRACKET        shift and go to state 213
    COMMA           shift and go to state 83


state 198

    (14) create_body -> TABLE NAME LBRACKET variables RBRACKET WITH . LBRACKET VERSIONING EQUAL ON RBRACKET

    LBRACKET        shift and go to state 214


state 199

    (17) variables -> variables COMMA NAME . type
    (103) type -> . int
    (104) type -> . str
    (105) type -> . bol
    (106) type -> . bool
    (107) type -> . float

    int             shift and go to state 168
    str             shift and go to state 169
    bol             shift and go to state 170
    bool            shift and go to state 171
    float           shift and go to state 172

    type                           shift and go to state 215

state 200

    (28) tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET .

    ENDREQUEST      reduce using rule 28 (tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 28 (tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET .)


state 201

    (29) tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET .

    ENDREQUEST      reduce using rule 29 (tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 29 (tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET .)


state 202

    (30) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET . join_condition
    (31) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET .
    (49) join_condition -> . ON field EQUAL field
    (50) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 31 (tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 31 (tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET .)
    ON              shift and go to state 97
    USING           shift and go to state 98

    join_condition                 shift and go to state 216

state 203

    (49) join_condition -> ON field EQUAL field .

    ENDREQUEST      reduce using rule 49 (join_condition -> ON field EQUAL field .)
    RBRACKET        reduce using rule 49 (join_condition -> ON field EQUAL field .)


state 204

    (50) join_condition -> USING LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 50 (join_condition -> USING LBRACKET fields RBRACKET .)
    RBRACKET        reduce using rule 50 (join_condition -> USING LBRACKET fields RBRACKET .)


state 205

    (40) tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table . join_condition
    (41) tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table .
    (49) join_condition -> . ON field EQUAL field
    (50) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 41 (tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table .)
    RBRACKET        reduce using rule 41 (tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table .)
    ON              shift and go to state 97
    USING           shift and go to state 98

    join_condition                 shift and go to state 217

state 206

    (65) insert_body -> INTO NAME VALUES LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 65 (insert_body -> INTO NAME VALUES LBRACKET values RBRACKET .)


state 207

    (75) values -> values COMMA . value
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 116
    QUOTE           shift and go to state 117

    value                          shift and go to state 218

state 208

    (66) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 219


state 209

    (71) expression -> expression COMMA field EQUAL . tree_expression
    (86) tree_expression -> . value
    (87) tree_expression -> . value operator_expression tree_expression
    (88) tree_expression -> . operator_expression tree_expression
    (89) tree_expression -> . LBRACKET tree_expression RBRACKET
    (90) tree_expression -> . tree_expression operator_expression tree_expression
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 115
    NAME            shift and go to state 116
    QUOTE           shift and go to state 117
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    tree_expression                shift and go to state 220
    value                          shift and go to state 113
    operator_expression            shift and go to state 114

state 210

    (52) select -> SELECT select_body condition FOR SYSTEM TIME FROM . date TO date
    (56) date -> . NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME
    (57) date -> . NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME
    (58) date -> . NAME HYPHEN NAME HYPHEN NAME NAME
    (59) date -> . NAME HYPHEN NAME HYPHEN NAME
    (60) date -> . NAME HYPHEN NAME

    NAME            shift and go to state 212

    date                           shift and go to state 221

state 211

    (53) select -> SELECT select_body FOR SYSTEM TIME FROM date . TO date

    TO              shift and go to state 222


state 212

    (56) date -> NAME . HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME
    (57) date -> NAME . HYPHEN NAME HYPHEN NAME NAME COLON NAME
    (58) date -> NAME . HYPHEN NAME HYPHEN NAME NAME
    (59) date -> NAME . HYPHEN NAME HYPHEN NAME
    (60) date -> NAME . HYPHEN NAME

    HYPHEN          shift and go to state 223


state 213

    (12) create -> CREATE INDEX NAME ON NAME LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 12 (create -> CREATE INDEX NAME ON NAME LBRACKET fields RBRACKET .)


state 214

    (14) create_body -> TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET . VERSIONING EQUAL ON RBRACKET

    VERSIONING      shift and go to state 224


state 215

    (17) variables -> variables COMMA NAME type .

    RBRACKET        reduce using rule 17 (variables -> variables COMMA NAME type .)
    COMMA           reduce using rule 17 (variables -> variables COMMA NAME type .)


state 216

    (30) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition .

    ENDREQUEST      reduce using rule 30 (tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition .)
    RBRACKET        reduce using rule 30 (tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition .)


state 217

    (40) tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition .

    ENDREQUEST      reduce using rule 40 (tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition .)
    RBRACKET        reduce using rule 40 (tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition .)


state 218

    (75) values -> values COMMA value .

    RBRACKET        reduce using rule 75 (values -> values COMMA value .)
    COMMA           reduce using rule 75 (values -> values COMMA value .)


state 219

    (66) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET . values RBRACKET
    (74) values -> . value
    (75) values -> . values COMMA value
    (76) value -> . NAME
    (77) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 116
    QUOTE           shift and go to state 117

    values                         shift and go to state 225
    value                          shift and go to state 184

state 220

    (71) expression -> expression COMMA field EQUAL tree_expression .
    (90) tree_expression -> tree_expression . operator_expression tree_expression
    (99) operator_expression -> . PLUS
    (100) operator_expression -> . MINUS
    (101) operator_expression -> . STAR
    (102) operator_expression -> . DIVISION

    COMMA           reduce using rule 71 (expression -> expression COMMA field EQUAL tree_expression .)
    WHERE           reduce using rule 71 (expression -> expression COMMA field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 71 (expression -> expression COMMA field EQUAL tree_expression .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    STAR            shift and go to state 120
    DIVISION        shift and go to state 121

    operator_expression            shift and go to state 154

state 221

    (52) select -> SELECT select_body condition FOR SYSTEM TIME FROM date . TO date

    TO              shift and go to state 226


state 222

    (53) select -> SELECT select_body FOR SYSTEM TIME FROM date TO . date
    (56) date -> . NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME
    (57) date -> . NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME
    (58) date -> . NAME HYPHEN NAME HYPHEN NAME NAME
    (59) date -> . NAME HYPHEN NAME HYPHEN NAME
    (60) date -> . NAME HYPHEN NAME

    NAME            shift and go to state 212

    date                           shift and go to state 227

state 223

    (56) date -> NAME HYPHEN . NAME HYPHEN NAME NAME COLON NAME COLON NAME
    (57) date -> NAME HYPHEN . NAME HYPHEN NAME NAME COLON NAME
    (58) date -> NAME HYPHEN . NAME HYPHEN NAME NAME
    (59) date -> NAME HYPHEN . NAME HYPHEN NAME
    (60) date -> NAME HYPHEN . NAME

    NAME            shift and go to state 228


state 224

    (14) create_body -> TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING . EQUAL ON RBRACKET

    EQUAL           shift and go to state 229


state 225

    (66) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values . RBRACKET
    (75) values -> values . COMMA value

    RBRACKET        shift and go to state 230
    COMMA           shift and go to state 207


state 226

    (52) select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO . date
    (56) date -> . NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME
    (57) date -> . NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME
    (58) date -> . NAME HYPHEN NAME HYPHEN NAME NAME
    (59) date -> . NAME HYPHEN NAME HYPHEN NAME
    (60) date -> . NAME HYPHEN NAME

    NAME            shift and go to state 212

    date                           shift and go to state 231

state 227

    (53) select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .

    UNION           reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)
    INTERSECT       reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)
    JOIN            reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)
    LEFT            reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)
    RIGHT           reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)
    ENDREQUEST      reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)
    RBRACKET        reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)
    ON              reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)
    USING           reduce using rule 53 (select -> SELECT select_body FOR SYSTEM TIME FROM date TO date .)


state 228

    (56) date -> NAME HYPHEN NAME . HYPHEN NAME NAME COLON NAME COLON NAME
    (57) date -> NAME HYPHEN NAME . HYPHEN NAME NAME COLON NAME
    (58) date -> NAME HYPHEN NAME . HYPHEN NAME NAME
    (59) date -> NAME HYPHEN NAME . HYPHEN NAME
    (60) date -> NAME HYPHEN NAME .

    HYPHEN          shift and go to state 232
    TO              reduce using rule 60 (date -> NAME HYPHEN NAME .)
    UNION           reduce using rule 60 (date -> NAME HYPHEN NAME .)
    INTERSECT       reduce using rule 60 (date -> NAME HYPHEN NAME .)
    JOIN            reduce using rule 60 (date -> NAME HYPHEN NAME .)
    LEFT            reduce using rule 60 (date -> NAME HYPHEN NAME .)
    RIGHT           reduce using rule 60 (date -> NAME HYPHEN NAME .)
    ENDREQUEST      reduce using rule 60 (date -> NAME HYPHEN NAME .)
    RBRACKET        reduce using rule 60 (date -> NAME HYPHEN NAME .)
    ON              reduce using rule 60 (date -> NAME HYPHEN NAME .)
    USING           reduce using rule 60 (date -> NAME HYPHEN NAME .)


state 229

    (14) create_body -> TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL . ON RBRACKET

    ON              shift and go to state 233


state 230

    (66) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 66 (insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET .)


state 231

    (52) select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .

    UNION           reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)
    INTERSECT       reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)
    JOIN            reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)
    LEFT            reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)
    RIGHT           reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)
    ENDREQUEST      reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)
    RBRACKET        reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)
    ON              reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)
    USING           reduce using rule 52 (select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date .)


state 232

    (56) date -> NAME HYPHEN NAME HYPHEN . NAME NAME COLON NAME COLON NAME
    (57) date -> NAME HYPHEN NAME HYPHEN . NAME NAME COLON NAME
    (58) date -> NAME HYPHEN NAME HYPHEN . NAME NAME
    (59) date -> NAME HYPHEN NAME HYPHEN . NAME

    NAME            shift and go to state 234


state 233

    (14) create_body -> TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON . RBRACKET

    RBRACKET        shift and go to state 235


state 234

    (56) date -> NAME HYPHEN NAME HYPHEN NAME . NAME COLON NAME COLON NAME
    (57) date -> NAME HYPHEN NAME HYPHEN NAME . NAME COLON NAME
    (58) date -> NAME HYPHEN NAME HYPHEN NAME . NAME
    (59) date -> NAME HYPHEN NAME HYPHEN NAME .

    NAME            shift and go to state 236
    TO              reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    UNION           reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    INTERSECT       reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    JOIN            reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    LEFT            reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    RIGHT           reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    ENDREQUEST      reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    RBRACKET        reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    ON              reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)
    USING           reduce using rule 59 (date -> NAME HYPHEN NAME HYPHEN NAME .)


state 235

    (14) create_body -> TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET .

    ENDREQUEST      reduce using rule 14 (create_body -> TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET .)


state 236

    (56) date -> NAME HYPHEN NAME HYPHEN NAME NAME . COLON NAME COLON NAME
    (57) date -> NAME HYPHEN NAME HYPHEN NAME NAME . COLON NAME
    (58) date -> NAME HYPHEN NAME HYPHEN NAME NAME .

    COLON           shift and go to state 237
    TO              reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    UNION           reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    INTERSECT       reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    JOIN            reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    LEFT            reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    RIGHT           reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    ENDREQUEST      reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    RBRACKET        reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    ON              reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)
    USING           reduce using rule 58 (date -> NAME HYPHEN NAME HYPHEN NAME NAME .)


state 237

    (56) date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON . NAME COLON NAME
    (57) date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON . NAME

    NAME            shift and go to state 238


state 238

    (56) date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME . COLON NAME
    (57) date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .

    COLON           shift and go to state 239
    TO              reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    UNION           reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    INTERSECT       reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    JOIN            reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    LEFT            reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    RIGHT           reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    ENDREQUEST      reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    RBRACKET        reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    ON              reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)
    USING           reduce using rule 57 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME .)


state 239

    (56) date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON . NAME

    NAME            shift and go to state 240


state 240

    (56) date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .

    TO              reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    UNION           reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    INTERSECT       reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    JOIN            reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    LEFT            reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    RIGHT           reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    ENDREQUEST      reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    RBRACKET        reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    ON              reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)
    USING           reduce using rule 56 (date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for STAR in state 113 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 162 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 162 resolved as shift
WARNING: shift/reduce conflict for STAR in state 162 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 162 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 192 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 192 resolved as shift
WARNING: shift/reduce conflict for STAR in state 192 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 192 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 193 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 193 resolved as shift
WARNING: shift/reduce conflict for STAR in state 193 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 193 resolved as shift
