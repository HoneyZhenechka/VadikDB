Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT
    ON
    USING

Grammar

Rule 0     S' -> start
Rule 1     start -> create ENDREQUEST
Rule 2     start -> show ENDREQUEST
Rule 3     start -> drop ENDREQUEST
Rule 4     start -> tree_selects ENDREQUEST
Rule 5     start -> insert ENDREQUEST
Rule 6     start -> update ENDREQUEST
Rule 7     start -> delete ENDREQUEST
Rule 8     create -> CREATE create_body
Rule 9     create_body -> TABLE NAME LBRACKET values RBRACKET
Rule 10    values -> NAME type
Rule 11    values -> values COMMA NAME type
Rule 12    show -> SHOW CREATE TABLE NAME
Rule 13    drop -> DROP TABLE NAME
Rule 14    tree_selects -> nested_selects
Rule 15    nested_selects -> select join nested_selects
Rule 16    nested_selects -> select union nested_selects
Rule 17    nested_selects -> select intersect nested_selects
Rule 18    nested_selects -> select
Rule 19    join -> JOIN
Rule 20    join -> LEFT JOIN
Rule 21    join -> RIGHT JOIN
Rule 22    join -> OUTER JOIN
Rule 23    join -> LEFT OUTER JOIN
Rule 24    join -> RIGHT OUTER JOIN
Rule 25    union -> UNION
Rule 26    intersect -> INTERSECT
Rule 27    select -> SELECT select_body
Rule 28    select -> SELECT select_body condition
Rule 29    select_body -> fields FROM NAME
Rule 30    select_body -> STAR COMMA fields FROM NAME
Rule 31    select_body -> STAR FROM NAME
Rule 32    insert -> INSERT insert_body
Rule 33    insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET
Rule 34    insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET
Rule 35    update -> UPDATE update_body
Rule 36    update_body -> NAME SET expression
Rule 37    update_body -> NAME SET expression condition
Rule 38    expression -> field EQUAL tree_expression
Rule 39    expression -> expression COMMA field EQUAL tree_expression
Rule 40    delete -> DELETE FROM NAME
Rule 41    delete -> DELETE FROM NAME condition
Rule 42    fields -> NAME
Rule 43    fields -> fields COMMA NAME
Rule 44    field -> NAME
Rule 45    condition -> WHERE tree_condition
Rule 46    tree_condition -> tree_comparison operator_condition tree_condition
Rule 47    tree_condition -> tree_comparison
Rule 48    tree_comparison -> tree_expression operator_comparison tree_expression
Rule 49    tree_expression -> field
Rule 50    tree_expression -> field operator_expression tree_expression
Rule 51    tree_expression -> operator_expression tree_expression
Rule 52    tree_expression -> LBRACKET tree_expression RBRACKET
Rule 53    tree_expression -> tree_expression operator_expression tree_expression
Rule 54    operator_condition -> AND
Rule 55    operator_condition -> OR
Rule 56    operator_comparison -> EQUAL
Rule 57    operator_comparison -> NOT_EQUAL
Rule 58    operator_comparison -> GREATER_THAN
Rule 59    operator_comparison -> LESS_THAN
Rule 60    operator_comparison -> GREATER_THAN_OR_EQUAL
Rule 61    operator_comparison -> LESS_THAN_OR_EQUAL
Rule 62    operator_expression -> PLUS
Rule 63    operator_expression -> MINUS
Rule 64    operator_expression -> STAR
Rule 65    operator_expression -> DIVISION
Rule 66    type -> int
Rule 67    type -> str
Rule 68    type -> bol
Rule 69    type -> bool
Rule 70    type -> float

Terminals, with rules where they appear

AND                  : 54
COMMA                : 11 30 39 43
CREATE               : 8 12
DELETE               : 40 41
DIVISION             : 65
DROP                 : 13
ENDREQUEST           : 1 2 3 4 5 6 7
EQUAL                : 38 39 56
FROM                 : 29 30 31 40 41
GREATER_THAN         : 58
GREATER_THAN_OR_EQUAL : 60
INSERT               : 32
INTERSECT            : 26
INTO                 : 33 34
JOIN                 : 19 20 21 22 23 24
LBRACKET             : 9 33 34 34 52
LEFT                 : 20 23
LESS_THAN            : 59
LESS_THAN_OR_EQUAL   : 61
MINUS                : 63
NAME                 : 9 10 11 12 13 29 30 31 33 34 36 37 40 41 42 43 44
NOT                  : 
NOT_EQUAL            : 57
ON                   : 
OR                   : 55
OUTER                : 22 23 24
PLUS                 : 62
RBRACKET             : 9 33 34 34 52
RIGHT                : 21 24
SELECT               : 27 28
SET                  : 36 37
SHOW                 : 12
STAR                 : 30 31 64
TABLE                : 9 12 13
UNION                : 25
UPDATE               : 35
USING                : 
VALUES               : 33 34
WHERE                : 45
bol                  : 68
bool                 : 69
error                : 
float                : 70
int                  : 66
str                  : 67

Nonterminals, with rules where they appear

condition            : 28 37 41
create               : 1
create_body          : 8
delete               : 7
drop                 : 3
expression           : 36 37 39
field                : 38 39 49 50
fields               : 29 30 33 34 34 43
insert               : 5
insert_body          : 32
intersect            : 17
join                 : 15
nested_selects       : 14 15 16 17
operator_comparison  : 48
operator_condition   : 46
operator_expression  : 50 51 53
select               : 15 16 17 18
select_body          : 27 28
show                 : 2
start                : 0
tree_comparison      : 46 47
tree_condition       : 45 46
tree_expression      : 38 39 48 48 50 51 52 53 53
tree_selects         : 4
type                 : 10 11
union                : 16
update               : 6
update_body          : 35
values               : 9 11

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . create ENDREQUEST
    (2) start -> . show ENDREQUEST
    (3) start -> . drop ENDREQUEST
    (4) start -> . tree_selects ENDREQUEST
    (5) start -> . insert ENDREQUEST
    (6) start -> . update ENDREQUEST
    (7) start -> . delete ENDREQUEST
    (8) create -> . CREATE create_body
    (12) show -> . SHOW CREATE TABLE NAME
    (13) drop -> . DROP TABLE NAME
    (14) tree_selects -> . nested_selects
    (32) insert -> . INSERT insert_body
    (35) update -> . UPDATE update_body
    (40) delete -> . DELETE FROM NAME
    (41) delete -> . DELETE FROM NAME condition
    (15) nested_selects -> . select join nested_selects
    (16) nested_selects -> . select union nested_selects
    (17) nested_selects -> . select intersect nested_selects
    (18) nested_selects -> . select
    (27) select -> . SELECT select_body
    (28) select -> . SELECT select_body condition

    CREATE          shift and go to state 9
    SHOW            shift and go to state 10
    DROP            shift and go to state 11
    INSERT          shift and go to state 13
    UPDATE          shift and go to state 14
    DELETE          shift and go to state 15
    SELECT          shift and go to state 17

    start                          shift and go to state 1
    create                         shift and go to state 2
    show                           shift and go to state 3
    drop                           shift and go to state 4
    tree_selects                   shift and go to state 5
    insert                         shift and go to state 6
    update                         shift and go to state 7
    delete                         shift and go to state 8
    nested_selects                 shift and go to state 12
    select                         shift and go to state 16

state 1

    (0) S' -> start .



state 2

    (1) start -> create . ENDREQUEST

    ENDREQUEST      shift and go to state 18


state 3

    (2) start -> show . ENDREQUEST

    ENDREQUEST      shift and go to state 19


state 4

    (3) start -> drop . ENDREQUEST

    ENDREQUEST      shift and go to state 20


state 5

    (4) start -> tree_selects . ENDREQUEST

    ENDREQUEST      shift and go to state 21


state 6

    (5) start -> insert . ENDREQUEST

    ENDREQUEST      shift and go to state 22


state 7

    (6) start -> update . ENDREQUEST

    ENDREQUEST      shift and go to state 23


state 8

    (7) start -> delete . ENDREQUEST

    ENDREQUEST      shift and go to state 24


state 9

    (8) create -> CREATE . create_body
    (9) create_body -> . TABLE NAME LBRACKET values RBRACKET

    TABLE           shift and go to state 26

    create_body                    shift and go to state 25

state 10

    (12) show -> SHOW . CREATE TABLE NAME

    CREATE          shift and go to state 27


state 11

    (13) drop -> DROP . TABLE NAME

    TABLE           shift and go to state 28


state 12

    (14) tree_selects -> nested_selects .

    ENDREQUEST      reduce using rule 14 (tree_selects -> nested_selects .)


state 13

    (32) insert -> INSERT . insert_body
    (33) insert_body -> . INTO NAME VALUES LBRACKET fields RBRACKET
    (34) insert_body -> . INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    INTO            shift and go to state 30

    insert_body                    shift and go to state 29

state 14

    (35) update -> UPDATE . update_body
    (36) update_body -> . NAME SET expression
    (37) update_body -> . NAME SET expression condition

    NAME            shift and go to state 32

    update_body                    shift and go to state 31

state 15

    (40) delete -> DELETE . FROM NAME
    (41) delete -> DELETE . FROM NAME condition

    FROM            shift and go to state 33


state 16

    (15) nested_selects -> select . join nested_selects
    (16) nested_selects -> select . union nested_selects
    (17) nested_selects -> select . intersect nested_selects
    (18) nested_selects -> select .
    (19) join -> . JOIN
    (20) join -> . LEFT JOIN
    (21) join -> . RIGHT JOIN
    (22) join -> . OUTER JOIN
    (23) join -> . LEFT OUTER JOIN
    (24) join -> . RIGHT OUTER JOIN
    (25) union -> . UNION
    (26) intersect -> . INTERSECT

    ENDREQUEST      reduce using rule 18 (nested_selects -> select .)
    JOIN            shift and go to state 37
    LEFT            shift and go to state 38
    RIGHT           shift and go to state 39
    OUTER           shift and go to state 40
    UNION           shift and go to state 41
    INTERSECT       shift and go to state 42

    join                           shift and go to state 34
    union                          shift and go to state 35
    intersect                      shift and go to state 36

state 17

    (27) select -> SELECT . select_body
    (28) select -> SELECT . select_body condition
    (29) select_body -> . fields FROM NAME
    (30) select_body -> . STAR COMMA fields FROM NAME
    (31) select_body -> . STAR FROM NAME
    (42) fields -> . NAME
    (43) fields -> . fields COMMA NAME

    STAR            shift and go to state 46
    NAME            shift and go to state 45

    select_body                    shift and go to state 43
    fields                         shift and go to state 44

state 18

    (1) start -> create ENDREQUEST .

    $end            reduce using rule 1 (start -> create ENDREQUEST .)


state 19

    (2) start -> show ENDREQUEST .

    $end            reduce using rule 2 (start -> show ENDREQUEST .)


state 20

    (3) start -> drop ENDREQUEST .

    $end            reduce using rule 3 (start -> drop ENDREQUEST .)


state 21

    (4) start -> tree_selects ENDREQUEST .

    $end            reduce using rule 4 (start -> tree_selects ENDREQUEST .)


state 22

    (5) start -> insert ENDREQUEST .

    $end            reduce using rule 5 (start -> insert ENDREQUEST .)


state 23

    (6) start -> update ENDREQUEST .

    $end            reduce using rule 6 (start -> update ENDREQUEST .)


state 24

    (7) start -> delete ENDREQUEST .

    $end            reduce using rule 7 (start -> delete ENDREQUEST .)


state 25

    (8) create -> CREATE create_body .

    ENDREQUEST      reduce using rule 8 (create -> CREATE create_body .)


state 26

    (9) create_body -> TABLE . NAME LBRACKET values RBRACKET

    NAME            shift and go to state 47


state 27

    (12) show -> SHOW CREATE . TABLE NAME

    TABLE           shift and go to state 48


state 28

    (13) drop -> DROP TABLE . NAME

    NAME            shift and go to state 49


state 29

    (32) insert -> INSERT insert_body .

    ENDREQUEST      reduce using rule 32 (insert -> INSERT insert_body .)


state 30

    (33) insert_body -> INTO . NAME VALUES LBRACKET fields RBRACKET
    (34) insert_body -> INTO . NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    NAME            shift and go to state 50


state 31

    (35) update -> UPDATE update_body .

    ENDREQUEST      reduce using rule 35 (update -> UPDATE update_body .)


state 32

    (36) update_body -> NAME . SET expression
    (37) update_body -> NAME . SET expression condition

    SET             shift and go to state 51


state 33

    (40) delete -> DELETE FROM . NAME
    (41) delete -> DELETE FROM . NAME condition

    NAME            shift and go to state 52


state 34

    (15) nested_selects -> select join . nested_selects
    (15) nested_selects -> . select join nested_selects
    (16) nested_selects -> . select union nested_selects
    (17) nested_selects -> . select intersect nested_selects
    (18) nested_selects -> . select
    (27) select -> . SELECT select_body
    (28) select -> . SELECT select_body condition

    SELECT          shift and go to state 17

    select                         shift and go to state 16
    nested_selects                 shift and go to state 53

state 35

    (16) nested_selects -> select union . nested_selects
    (15) nested_selects -> . select join nested_selects
    (16) nested_selects -> . select union nested_selects
    (17) nested_selects -> . select intersect nested_selects
    (18) nested_selects -> . select
    (27) select -> . SELECT select_body
    (28) select -> . SELECT select_body condition

    SELECT          shift and go to state 17

    select                         shift and go to state 16
    nested_selects                 shift and go to state 54

state 36

    (17) nested_selects -> select intersect . nested_selects
    (15) nested_selects -> . select join nested_selects
    (16) nested_selects -> . select union nested_selects
    (17) nested_selects -> . select intersect nested_selects
    (18) nested_selects -> . select
    (27) select -> . SELECT select_body
    (28) select -> . SELECT select_body condition

    SELECT          shift and go to state 17

    select                         shift and go to state 16
    nested_selects                 shift and go to state 55

state 37

    (19) join -> JOIN .

    SELECT          reduce using rule 19 (join -> JOIN .)


state 38

    (20) join -> LEFT . JOIN
    (23) join -> LEFT . OUTER JOIN

    JOIN            shift and go to state 56
    OUTER           shift and go to state 57


state 39

    (21) join -> RIGHT . JOIN
    (24) join -> RIGHT . OUTER JOIN

    JOIN            shift and go to state 58
    OUTER           shift and go to state 59


state 40

    (22) join -> OUTER . JOIN

    JOIN            shift and go to state 60


state 41

    (25) union -> UNION .

    SELECT          reduce using rule 25 (union -> UNION .)


state 42

    (26) intersect -> INTERSECT .

    SELECT          reduce using rule 26 (intersect -> INTERSECT .)


state 43

    (27) select -> SELECT select_body .
    (28) select -> SELECT select_body . condition
    (45) condition -> . WHERE tree_condition

    JOIN            reduce using rule 27 (select -> SELECT select_body .)
    LEFT            reduce using rule 27 (select -> SELECT select_body .)
    RIGHT           reduce using rule 27 (select -> SELECT select_body .)
    OUTER           reduce using rule 27 (select -> SELECT select_body .)
    UNION           reduce using rule 27 (select -> SELECT select_body .)
    INTERSECT       reduce using rule 27 (select -> SELECT select_body .)
    ENDREQUEST      reduce using rule 27 (select -> SELECT select_body .)
    WHERE           shift and go to state 62

    condition                      shift and go to state 61

state 44

    (29) select_body -> fields . FROM NAME
    (43) fields -> fields . COMMA NAME

    FROM            shift and go to state 63
    COMMA           shift and go to state 64


state 45

    (42) fields -> NAME .

    FROM            reduce using rule 42 (fields -> NAME .)
    COMMA           reduce using rule 42 (fields -> NAME .)
    RBRACKET        reduce using rule 42 (fields -> NAME .)


state 46

    (30) select_body -> STAR . COMMA fields FROM NAME
    (31) select_body -> STAR . FROM NAME

    COMMA           shift and go to state 65
    FROM            shift and go to state 66


state 47

    (9) create_body -> TABLE NAME . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 67


state 48

    (12) show -> SHOW CREATE TABLE . NAME

    NAME            shift and go to state 68


state 49

    (13) drop -> DROP TABLE NAME .

    ENDREQUEST      reduce using rule 13 (drop -> DROP TABLE NAME .)


state 50

    (33) insert_body -> INTO NAME . VALUES LBRACKET fields RBRACKET
    (34) insert_body -> INTO NAME . LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    VALUES          shift and go to state 69
    LBRACKET        shift and go to state 70


state 51

    (36) update_body -> NAME SET . expression
    (37) update_body -> NAME SET . expression condition
    (38) expression -> . field EQUAL tree_expression
    (39) expression -> . expression COMMA field EQUAL tree_expression
    (44) field -> . NAME

    NAME            shift and go to state 71

    expression                     shift and go to state 72
    field                          shift and go to state 73

state 52

    (40) delete -> DELETE FROM NAME .
    (41) delete -> DELETE FROM NAME . condition
    (45) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 40 (delete -> DELETE FROM NAME .)
    WHERE           shift and go to state 62

    condition                      shift and go to state 74

state 53

    (15) nested_selects -> select join nested_selects .

    ENDREQUEST      reduce using rule 15 (nested_selects -> select join nested_selects .)


state 54

    (16) nested_selects -> select union nested_selects .

    ENDREQUEST      reduce using rule 16 (nested_selects -> select union nested_selects .)


state 55

    (17) nested_selects -> select intersect nested_selects .

    ENDREQUEST      reduce using rule 17 (nested_selects -> select intersect nested_selects .)


state 56

    (20) join -> LEFT JOIN .

    SELECT          reduce using rule 20 (join -> LEFT JOIN .)


state 57

    (23) join -> LEFT OUTER . JOIN

    JOIN            shift and go to state 75


state 58

    (21) join -> RIGHT JOIN .

    SELECT          reduce using rule 21 (join -> RIGHT JOIN .)


state 59

    (24) join -> RIGHT OUTER . JOIN

    JOIN            shift and go to state 76


state 60

    (22) join -> OUTER JOIN .

    SELECT          reduce using rule 22 (join -> OUTER JOIN .)


state 61

    (28) select -> SELECT select_body condition .

    JOIN            reduce using rule 28 (select -> SELECT select_body condition .)
    LEFT            reduce using rule 28 (select -> SELECT select_body condition .)
    RIGHT           reduce using rule 28 (select -> SELECT select_body condition .)
    OUTER           reduce using rule 28 (select -> SELECT select_body condition .)
    UNION           reduce using rule 28 (select -> SELECT select_body condition .)
    INTERSECT       reduce using rule 28 (select -> SELECT select_body condition .)
    ENDREQUEST      reduce using rule 28 (select -> SELECT select_body condition .)


state 62

    (45) condition -> WHERE . tree_condition
    (46) tree_condition -> . tree_comparison operator_condition tree_condition
    (47) tree_condition -> . tree_comparison
    (48) tree_comparison -> . tree_expression operator_comparison tree_expression
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    tree_condition                 shift and go to state 77
    tree_comparison                shift and go to state 78
    tree_expression                shift and go to state 79
    field                          shift and go to state 80
    operator_expression            shift and go to state 81

state 63

    (29) select_body -> fields FROM . NAME

    NAME            shift and go to state 87


state 64

    (43) fields -> fields COMMA . NAME

    NAME            shift and go to state 88


state 65

    (30) select_body -> STAR COMMA . fields FROM NAME
    (42) fields -> . NAME
    (43) fields -> . fields COMMA NAME

    NAME            shift and go to state 45

    fields                         shift and go to state 89

state 66

    (31) select_body -> STAR FROM . NAME

    NAME            shift and go to state 90


state 67

    (9) create_body -> TABLE NAME LBRACKET . values RBRACKET
    (10) values -> . NAME type
    (11) values -> . values COMMA NAME type

    NAME            shift and go to state 91

    values                         shift and go to state 92

state 68

    (12) show -> SHOW CREATE TABLE NAME .

    ENDREQUEST      reduce using rule 12 (show -> SHOW CREATE TABLE NAME .)


state 69

    (33) insert_body -> INTO NAME VALUES . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 93


state 70

    (34) insert_body -> INTO NAME LBRACKET . fields RBRACKET VALUES LBRACKET fields RBRACKET
    (42) fields -> . NAME
    (43) fields -> . fields COMMA NAME

    NAME            shift and go to state 45

    fields                         shift and go to state 94

state 71

    (44) field -> NAME .

    EQUAL           reduce using rule 44 (field -> NAME .)
    PLUS            reduce using rule 44 (field -> NAME .)
    MINUS           reduce using rule 44 (field -> NAME .)
    STAR            reduce using rule 44 (field -> NAME .)
    DIVISION        reduce using rule 44 (field -> NAME .)
    NOT_EQUAL       reduce using rule 44 (field -> NAME .)
    GREATER_THAN    reduce using rule 44 (field -> NAME .)
    LESS_THAN       reduce using rule 44 (field -> NAME .)
    GREATER_THAN_OR_EQUAL reduce using rule 44 (field -> NAME .)
    LESS_THAN_OR_EQUAL reduce using rule 44 (field -> NAME .)
    RBRACKET        reduce using rule 44 (field -> NAME .)
    COMMA           reduce using rule 44 (field -> NAME .)
    WHERE           reduce using rule 44 (field -> NAME .)
    ENDREQUEST      reduce using rule 44 (field -> NAME .)
    AND             reduce using rule 44 (field -> NAME .)
    OR              reduce using rule 44 (field -> NAME .)
    JOIN            reduce using rule 44 (field -> NAME .)
    LEFT            reduce using rule 44 (field -> NAME .)
    RIGHT           reduce using rule 44 (field -> NAME .)
    OUTER           reduce using rule 44 (field -> NAME .)
    UNION           reduce using rule 44 (field -> NAME .)
    INTERSECT       reduce using rule 44 (field -> NAME .)


state 72

    (36) update_body -> NAME SET expression .
    (37) update_body -> NAME SET expression . condition
    (39) expression -> expression . COMMA field EQUAL tree_expression
    (45) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 36 (update_body -> NAME SET expression .)
    COMMA           shift and go to state 96
    WHERE           shift and go to state 62

    condition                      shift and go to state 95

state 73

    (38) expression -> field . EQUAL tree_expression

    EQUAL           shift and go to state 97


state 74

    (41) delete -> DELETE FROM NAME condition .

    ENDREQUEST      reduce using rule 41 (delete -> DELETE FROM NAME condition .)


state 75

    (23) join -> LEFT OUTER JOIN .

    SELECT          reduce using rule 23 (join -> LEFT OUTER JOIN .)


state 76

    (24) join -> RIGHT OUTER JOIN .

    SELECT          reduce using rule 24 (join -> RIGHT OUTER JOIN .)


state 77

    (45) condition -> WHERE tree_condition .

    JOIN            reduce using rule 45 (condition -> WHERE tree_condition .)
    LEFT            reduce using rule 45 (condition -> WHERE tree_condition .)
    RIGHT           reduce using rule 45 (condition -> WHERE tree_condition .)
    OUTER           reduce using rule 45 (condition -> WHERE tree_condition .)
    UNION           reduce using rule 45 (condition -> WHERE tree_condition .)
    INTERSECT       reduce using rule 45 (condition -> WHERE tree_condition .)
    ENDREQUEST      reduce using rule 45 (condition -> WHERE tree_condition .)


state 78

    (46) tree_condition -> tree_comparison . operator_condition tree_condition
    (47) tree_condition -> tree_comparison .
    (54) operator_condition -> . AND
    (55) operator_condition -> . OR

    JOIN            reduce using rule 47 (tree_condition -> tree_comparison .)
    LEFT            reduce using rule 47 (tree_condition -> tree_comparison .)
    RIGHT           reduce using rule 47 (tree_condition -> tree_comparison .)
    OUTER           reduce using rule 47 (tree_condition -> tree_comparison .)
    UNION           reduce using rule 47 (tree_condition -> tree_comparison .)
    INTERSECT       reduce using rule 47 (tree_condition -> tree_comparison .)
    ENDREQUEST      reduce using rule 47 (tree_condition -> tree_comparison .)
    AND             shift and go to state 99
    OR              shift and go to state 100

    operator_condition             shift and go to state 98

state 79

    (48) tree_comparison -> tree_expression . operator_comparison tree_expression
    (53) tree_expression -> tree_expression . operator_expression tree_expression
    (56) operator_comparison -> . EQUAL
    (57) operator_comparison -> . NOT_EQUAL
    (58) operator_comparison -> . GREATER_THAN
    (59) operator_comparison -> . LESS_THAN
    (60) operator_comparison -> . GREATER_THAN_OR_EQUAL
    (61) operator_comparison -> . LESS_THAN_OR_EQUAL
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    EQUAL           shift and go to state 103
    NOT_EQUAL       shift and go to state 104
    GREATER_THAN    shift and go to state 105
    LESS_THAN       shift and go to state 106
    GREATER_THAN_OR_EQUAL shift and go to state 107
    LESS_THAN_OR_EQUAL shift and go to state 108
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    operator_comparison            shift and go to state 101
    operator_expression            shift and go to state 102

state 80

    (49) tree_expression -> field .
    (50) tree_expression -> field . operator_expression tree_expression
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 49 (tree_expression -> field .)
    NOT_EQUAL       reduce using rule 49 (tree_expression -> field .)
    GREATER_THAN    reduce using rule 49 (tree_expression -> field .)
    LESS_THAN       reduce using rule 49 (tree_expression -> field .)
    GREATER_THAN_OR_EQUAL reduce using rule 49 (tree_expression -> field .)
    LESS_THAN_OR_EQUAL reduce using rule 49 (tree_expression -> field .)
    RBRACKET        reduce using rule 49 (tree_expression -> field .)
    COMMA           reduce using rule 49 (tree_expression -> field .)
    WHERE           reduce using rule 49 (tree_expression -> field .)
    ENDREQUEST      reduce using rule 49 (tree_expression -> field .)
    AND             reduce using rule 49 (tree_expression -> field .)
    OR              reduce using rule 49 (tree_expression -> field .)
    JOIN            reduce using rule 49 (tree_expression -> field .)
    LEFT            reduce using rule 49 (tree_expression -> field .)
    RIGHT           reduce using rule 49 (tree_expression -> field .)
    OUTER           reduce using rule 49 (tree_expression -> field .)
    UNION           reduce using rule 49 (tree_expression -> field .)
    INTERSECT       reduce using rule 49 (tree_expression -> field .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

  ! PLUS            [ reduce using rule 49 (tree_expression -> field .) ]
  ! MINUS           [ reduce using rule 49 (tree_expression -> field .) ]
  ! STAR            [ reduce using rule 49 (tree_expression -> field .) ]
  ! DIVISION        [ reduce using rule 49 (tree_expression -> field .) ]

    operator_expression            shift and go to state 109

state 81

    (51) tree_expression -> operator_expression . tree_expression
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    operator_expression            shift and go to state 81
    tree_expression                shift and go to state 110
    field                          shift and go to state 80

state 82

    (52) tree_expression -> LBRACKET . tree_expression RBRACKET
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    tree_expression                shift and go to state 111
    field                          shift and go to state 80
    operator_expression            shift and go to state 81

state 83

    (62) operator_expression -> PLUS .

    LBRACKET        reduce using rule 62 (operator_expression -> PLUS .)
    NAME            reduce using rule 62 (operator_expression -> PLUS .)
    PLUS            reduce using rule 62 (operator_expression -> PLUS .)
    MINUS           reduce using rule 62 (operator_expression -> PLUS .)
    STAR            reduce using rule 62 (operator_expression -> PLUS .)
    DIVISION        reduce using rule 62 (operator_expression -> PLUS .)


state 84

    (63) operator_expression -> MINUS .

    LBRACKET        reduce using rule 63 (operator_expression -> MINUS .)
    NAME            reduce using rule 63 (operator_expression -> MINUS .)
    PLUS            reduce using rule 63 (operator_expression -> MINUS .)
    MINUS           reduce using rule 63 (operator_expression -> MINUS .)
    STAR            reduce using rule 63 (operator_expression -> MINUS .)
    DIVISION        reduce using rule 63 (operator_expression -> MINUS .)


state 85

    (64) operator_expression -> STAR .

    LBRACKET        reduce using rule 64 (operator_expression -> STAR .)
    NAME            reduce using rule 64 (operator_expression -> STAR .)
    PLUS            reduce using rule 64 (operator_expression -> STAR .)
    MINUS           reduce using rule 64 (operator_expression -> STAR .)
    STAR            reduce using rule 64 (operator_expression -> STAR .)
    DIVISION        reduce using rule 64 (operator_expression -> STAR .)


state 86

    (65) operator_expression -> DIVISION .

    LBRACKET        reduce using rule 65 (operator_expression -> DIVISION .)
    NAME            reduce using rule 65 (operator_expression -> DIVISION .)
    PLUS            reduce using rule 65 (operator_expression -> DIVISION .)
    MINUS           reduce using rule 65 (operator_expression -> DIVISION .)
    STAR            reduce using rule 65 (operator_expression -> DIVISION .)
    DIVISION        reduce using rule 65 (operator_expression -> DIVISION .)


state 87

    (29) select_body -> fields FROM NAME .

    WHERE           reduce using rule 29 (select_body -> fields FROM NAME .)
    JOIN            reduce using rule 29 (select_body -> fields FROM NAME .)
    LEFT            reduce using rule 29 (select_body -> fields FROM NAME .)
    RIGHT           reduce using rule 29 (select_body -> fields FROM NAME .)
    OUTER           reduce using rule 29 (select_body -> fields FROM NAME .)
    UNION           reduce using rule 29 (select_body -> fields FROM NAME .)
    INTERSECT       reduce using rule 29 (select_body -> fields FROM NAME .)
    ENDREQUEST      reduce using rule 29 (select_body -> fields FROM NAME .)


state 88

    (43) fields -> fields COMMA NAME .

    FROM            reduce using rule 43 (fields -> fields COMMA NAME .)
    COMMA           reduce using rule 43 (fields -> fields COMMA NAME .)
    RBRACKET        reduce using rule 43 (fields -> fields COMMA NAME .)


state 89

    (30) select_body -> STAR COMMA fields . FROM NAME
    (43) fields -> fields . COMMA NAME

    FROM            shift and go to state 112
    COMMA           shift and go to state 64


state 90

    (31) select_body -> STAR FROM NAME .

    WHERE           reduce using rule 31 (select_body -> STAR FROM NAME .)
    JOIN            reduce using rule 31 (select_body -> STAR FROM NAME .)
    LEFT            reduce using rule 31 (select_body -> STAR FROM NAME .)
    RIGHT           reduce using rule 31 (select_body -> STAR FROM NAME .)
    OUTER           reduce using rule 31 (select_body -> STAR FROM NAME .)
    UNION           reduce using rule 31 (select_body -> STAR FROM NAME .)
    INTERSECT       reduce using rule 31 (select_body -> STAR FROM NAME .)
    ENDREQUEST      reduce using rule 31 (select_body -> STAR FROM NAME .)


state 91

    (10) values -> NAME . type
    (66) type -> . int
    (67) type -> . str
    (68) type -> . bol
    (69) type -> . bool
    (70) type -> . float

    int             shift and go to state 114
    str             shift and go to state 115
    bol             shift and go to state 116
    bool            shift and go to state 117
    float           shift and go to state 118

    type                           shift and go to state 113

state 92

    (9) create_body -> TABLE NAME LBRACKET values . RBRACKET
    (11) values -> values . COMMA NAME type

    RBRACKET        shift and go to state 119
    COMMA           shift and go to state 120


state 93

    (33) insert_body -> INTO NAME VALUES LBRACKET . fields RBRACKET
    (42) fields -> . NAME
    (43) fields -> . fields COMMA NAME

    NAME            shift and go to state 45

    fields                         shift and go to state 121

state 94

    (34) insert_body -> INTO NAME LBRACKET fields . RBRACKET VALUES LBRACKET fields RBRACKET
    (43) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 122
    COMMA           shift and go to state 64


state 95

    (37) update_body -> NAME SET expression condition .

    ENDREQUEST      reduce using rule 37 (update_body -> NAME SET expression condition .)


state 96

    (39) expression -> expression COMMA . field EQUAL tree_expression
    (44) field -> . NAME

    NAME            shift and go to state 71

    field                          shift and go to state 123

state 97

    (38) expression -> field EQUAL . tree_expression
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    field                          shift and go to state 80
    tree_expression                shift and go to state 124
    operator_expression            shift and go to state 81

state 98

    (46) tree_condition -> tree_comparison operator_condition . tree_condition
    (46) tree_condition -> . tree_comparison operator_condition tree_condition
    (47) tree_condition -> . tree_comparison
    (48) tree_comparison -> . tree_expression operator_comparison tree_expression
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    tree_comparison                shift and go to state 78
    tree_condition                 shift and go to state 125
    tree_expression                shift and go to state 79
    field                          shift and go to state 80
    operator_expression            shift and go to state 81

state 99

    (54) operator_condition -> AND .

    LBRACKET        reduce using rule 54 (operator_condition -> AND .)
    NAME            reduce using rule 54 (operator_condition -> AND .)
    PLUS            reduce using rule 54 (operator_condition -> AND .)
    MINUS           reduce using rule 54 (operator_condition -> AND .)
    STAR            reduce using rule 54 (operator_condition -> AND .)
    DIVISION        reduce using rule 54 (operator_condition -> AND .)


state 100

    (55) operator_condition -> OR .

    LBRACKET        reduce using rule 55 (operator_condition -> OR .)
    NAME            reduce using rule 55 (operator_condition -> OR .)
    PLUS            reduce using rule 55 (operator_condition -> OR .)
    MINUS           reduce using rule 55 (operator_condition -> OR .)
    STAR            reduce using rule 55 (operator_condition -> OR .)
    DIVISION        reduce using rule 55 (operator_condition -> OR .)


state 101

    (48) tree_comparison -> tree_expression operator_comparison . tree_expression
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    tree_expression                shift and go to state 126
    field                          shift and go to state 80
    operator_expression            shift and go to state 81

state 102

    (53) tree_expression -> tree_expression operator_expression . tree_expression
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    tree_expression                shift and go to state 127
    operator_expression            shift and go to state 81
    field                          shift and go to state 80

state 103

    (56) operator_comparison -> EQUAL .

    LBRACKET        reduce using rule 56 (operator_comparison -> EQUAL .)
    NAME            reduce using rule 56 (operator_comparison -> EQUAL .)
    PLUS            reduce using rule 56 (operator_comparison -> EQUAL .)
    MINUS           reduce using rule 56 (operator_comparison -> EQUAL .)
    STAR            reduce using rule 56 (operator_comparison -> EQUAL .)
    DIVISION        reduce using rule 56 (operator_comparison -> EQUAL .)


state 104

    (57) operator_comparison -> NOT_EQUAL .

    LBRACKET        reduce using rule 57 (operator_comparison -> NOT_EQUAL .)
    NAME            reduce using rule 57 (operator_comparison -> NOT_EQUAL .)
    PLUS            reduce using rule 57 (operator_comparison -> NOT_EQUAL .)
    MINUS           reduce using rule 57 (operator_comparison -> NOT_EQUAL .)
    STAR            reduce using rule 57 (operator_comparison -> NOT_EQUAL .)
    DIVISION        reduce using rule 57 (operator_comparison -> NOT_EQUAL .)


state 105

    (58) operator_comparison -> GREATER_THAN .

    LBRACKET        reduce using rule 58 (operator_comparison -> GREATER_THAN .)
    NAME            reduce using rule 58 (operator_comparison -> GREATER_THAN .)
    PLUS            reduce using rule 58 (operator_comparison -> GREATER_THAN .)
    MINUS           reduce using rule 58 (operator_comparison -> GREATER_THAN .)
    STAR            reduce using rule 58 (operator_comparison -> GREATER_THAN .)
    DIVISION        reduce using rule 58 (operator_comparison -> GREATER_THAN .)


state 106

    (59) operator_comparison -> LESS_THAN .

    LBRACKET        reduce using rule 59 (operator_comparison -> LESS_THAN .)
    NAME            reduce using rule 59 (operator_comparison -> LESS_THAN .)
    PLUS            reduce using rule 59 (operator_comparison -> LESS_THAN .)
    MINUS           reduce using rule 59 (operator_comparison -> LESS_THAN .)
    STAR            reduce using rule 59 (operator_comparison -> LESS_THAN .)
    DIVISION        reduce using rule 59 (operator_comparison -> LESS_THAN .)


state 107

    (60) operator_comparison -> GREATER_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 60 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    NAME            reduce using rule 60 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    PLUS            reduce using rule 60 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    MINUS           reduce using rule 60 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    STAR            reduce using rule 60 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 60 (operator_comparison -> GREATER_THAN_OR_EQUAL .)


state 108

    (61) operator_comparison -> LESS_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 61 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    NAME            reduce using rule 61 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    PLUS            reduce using rule 61 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    MINUS           reduce using rule 61 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    STAR            reduce using rule 61 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 61 (operator_comparison -> LESS_THAN_OR_EQUAL .)


state 109

    (50) tree_expression -> field operator_expression . tree_expression
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    field                          shift and go to state 80
    operator_expression            shift and go to state 81
    tree_expression                shift and go to state 128

state 110

    (51) tree_expression -> operator_expression tree_expression .
    (53) tree_expression -> tree_expression . operator_expression tree_expression
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN       reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    RBRACKET        reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    COMMA           reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    WHERE           reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    AND             reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    OR              reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    JOIN            reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    LEFT            reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    RIGHT           reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    OUTER           reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    UNION           reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    INTERSECT       reduce using rule 51 (tree_expression -> operator_expression tree_expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

  ! PLUS            [ reduce using rule 51 (tree_expression -> operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 51 (tree_expression -> operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 51 (tree_expression -> operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 51 (tree_expression -> operator_expression tree_expression .) ]

    operator_expression            shift and go to state 102

state 111

    (52) tree_expression -> LBRACKET tree_expression . RBRACKET
    (53) tree_expression -> tree_expression . operator_expression tree_expression
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    RBRACKET        shift and go to state 129
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    operator_expression            shift and go to state 102

state 112

    (30) select_body -> STAR COMMA fields FROM . NAME

    NAME            shift and go to state 130


state 113

    (10) values -> NAME type .

    RBRACKET        reduce using rule 10 (values -> NAME type .)
    COMMA           reduce using rule 10 (values -> NAME type .)


state 114

    (66) type -> int .

    RBRACKET        reduce using rule 66 (type -> int .)
    COMMA           reduce using rule 66 (type -> int .)


state 115

    (67) type -> str .

    RBRACKET        reduce using rule 67 (type -> str .)
    COMMA           reduce using rule 67 (type -> str .)


state 116

    (68) type -> bol .

    RBRACKET        reduce using rule 68 (type -> bol .)
    COMMA           reduce using rule 68 (type -> bol .)


state 117

    (69) type -> bool .

    RBRACKET        reduce using rule 69 (type -> bool .)
    COMMA           reduce using rule 69 (type -> bool .)


state 118

    (70) type -> float .

    RBRACKET        reduce using rule 70 (type -> float .)
    COMMA           reduce using rule 70 (type -> float .)


state 119

    (9) create_body -> TABLE NAME LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 9 (create_body -> TABLE NAME LBRACKET values RBRACKET .)


state 120

    (11) values -> values COMMA . NAME type

    NAME            shift and go to state 131


state 121

    (33) insert_body -> INTO NAME VALUES LBRACKET fields . RBRACKET
    (43) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 132
    COMMA           shift and go to state 64


state 122

    (34) insert_body -> INTO NAME LBRACKET fields RBRACKET . VALUES LBRACKET fields RBRACKET

    VALUES          shift and go to state 133


state 123

    (39) expression -> expression COMMA field . EQUAL tree_expression

    EQUAL           shift and go to state 134


state 124

    (38) expression -> field EQUAL tree_expression .
    (53) tree_expression -> tree_expression . operator_expression tree_expression
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    COMMA           reduce using rule 38 (expression -> field EQUAL tree_expression .)
    WHERE           reduce using rule 38 (expression -> field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 38 (expression -> field EQUAL tree_expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    operator_expression            shift and go to state 102

state 125

    (46) tree_condition -> tree_comparison operator_condition tree_condition .

    JOIN            reduce using rule 46 (tree_condition -> tree_comparison operator_condition tree_condition .)
    LEFT            reduce using rule 46 (tree_condition -> tree_comparison operator_condition tree_condition .)
    RIGHT           reduce using rule 46 (tree_condition -> tree_comparison operator_condition tree_condition .)
    OUTER           reduce using rule 46 (tree_condition -> tree_comparison operator_condition tree_condition .)
    UNION           reduce using rule 46 (tree_condition -> tree_comparison operator_condition tree_condition .)
    INTERSECT       reduce using rule 46 (tree_condition -> tree_comparison operator_condition tree_condition .)
    ENDREQUEST      reduce using rule 46 (tree_condition -> tree_comparison operator_condition tree_condition .)


state 126

    (48) tree_comparison -> tree_expression operator_comparison tree_expression .
    (53) tree_expression -> tree_expression . operator_expression tree_expression
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    AND             reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    OR              reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    JOIN            reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    LEFT            reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    RIGHT           reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    OUTER           reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    UNION           reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    INTERSECT       reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    ENDREQUEST      reduce using rule 48 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    operator_expression            shift and go to state 102

state 127

    (53) tree_expression -> tree_expression operator_expression tree_expression .
    (53) tree_expression -> tree_expression . operator_expression tree_expression
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN       reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    RBRACKET        reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    COMMA           reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    WHERE           reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    AND             reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    OR              reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    JOIN            reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    LEFT            reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    RIGHT           reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    OUTER           reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    UNION           reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    INTERSECT       reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

  ! PLUS            [ reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 53 (tree_expression -> tree_expression operator_expression tree_expression .) ]

    operator_expression            shift and go to state 102

state 128

    (50) tree_expression -> field operator_expression tree_expression .
    (53) tree_expression -> tree_expression . operator_expression tree_expression
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    LESS_THAN       reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    RBRACKET        reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    COMMA           reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    WHERE           reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    AND             reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    OR              reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    JOIN            reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    LEFT            reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    RIGHT           reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    OUTER           reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    UNION           reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    INTERSECT       reduce using rule 50 (tree_expression -> field operator_expression tree_expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

  ! PLUS            [ reduce using rule 50 (tree_expression -> field operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 50 (tree_expression -> field operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 50 (tree_expression -> field operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 50 (tree_expression -> field operator_expression tree_expression .) ]

    operator_expression            shift and go to state 102

state 129

    (52) tree_expression -> LBRACKET tree_expression RBRACKET .

    EQUAL           reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    NOT_EQUAL       reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN    reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN       reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN_OR_EQUAL reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    PLUS            reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    MINUS           reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    STAR            reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    DIVISION        reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RBRACKET        reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    COMMA           reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    WHERE           reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    ENDREQUEST      reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    AND             reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    OR              reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    JOIN            reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LEFT            reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RIGHT           reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    OUTER           reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    UNION           reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    INTERSECT       reduce using rule 52 (tree_expression -> LBRACKET tree_expression RBRACKET .)


state 130

    (30) select_body -> STAR COMMA fields FROM NAME .

    WHERE           reduce using rule 30 (select_body -> STAR COMMA fields FROM NAME .)
    JOIN            reduce using rule 30 (select_body -> STAR COMMA fields FROM NAME .)
    LEFT            reduce using rule 30 (select_body -> STAR COMMA fields FROM NAME .)
    RIGHT           reduce using rule 30 (select_body -> STAR COMMA fields FROM NAME .)
    OUTER           reduce using rule 30 (select_body -> STAR COMMA fields FROM NAME .)
    UNION           reduce using rule 30 (select_body -> STAR COMMA fields FROM NAME .)
    INTERSECT       reduce using rule 30 (select_body -> STAR COMMA fields FROM NAME .)
    ENDREQUEST      reduce using rule 30 (select_body -> STAR COMMA fields FROM NAME .)


state 131

    (11) values -> values COMMA NAME . type
    (66) type -> . int
    (67) type -> . str
    (68) type -> . bol
    (69) type -> . bool
    (70) type -> . float

    int             shift and go to state 114
    str             shift and go to state 115
    bol             shift and go to state 116
    bool            shift and go to state 117
    float           shift and go to state 118

    type                           shift and go to state 135

state 132

    (33) insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 33 (insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET .)


state 133

    (34) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 136


state 134

    (39) expression -> expression COMMA field EQUAL . tree_expression
    (49) tree_expression -> . field
    (50) tree_expression -> . field operator_expression tree_expression
    (51) tree_expression -> . operator_expression tree_expression
    (52) tree_expression -> . LBRACKET tree_expression RBRACKET
    (53) tree_expression -> . tree_expression operator_expression tree_expression
    (44) field -> . NAME
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 82
    NAME            shift and go to state 71
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    field                          shift and go to state 80
    tree_expression                shift and go to state 137
    operator_expression            shift and go to state 81

state 135

    (11) values -> values COMMA NAME type .

    RBRACKET        reduce using rule 11 (values -> values COMMA NAME type .)
    COMMA           reduce using rule 11 (values -> values COMMA NAME type .)


state 136

    (34) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET . fields RBRACKET
    (42) fields -> . NAME
    (43) fields -> . fields COMMA NAME

    NAME            shift and go to state 45

    fields                         shift and go to state 138

state 137

    (39) expression -> expression COMMA field EQUAL tree_expression .
    (53) tree_expression -> tree_expression . operator_expression tree_expression
    (62) operator_expression -> . PLUS
    (63) operator_expression -> . MINUS
    (64) operator_expression -> . STAR
    (65) operator_expression -> . DIVISION

    COMMA           reduce using rule 39 (expression -> expression COMMA field EQUAL tree_expression .)
    WHERE           reduce using rule 39 (expression -> expression COMMA field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 39 (expression -> expression COMMA field EQUAL tree_expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    STAR            shift and go to state 85
    DIVISION        shift and go to state 86

    operator_expression            shift and go to state 102

state 138

    (34) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields . RBRACKET
    (43) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 139
    COMMA           shift and go to state 64


state 139

    (34) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 34 (insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for STAR in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for STAR in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for STAR in state 127 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 128 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 128 resolved as shift
WARNING: shift/reduce conflict for STAR in state 128 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 128 resolved as shift
