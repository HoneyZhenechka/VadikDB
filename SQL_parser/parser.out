Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT
    ON
    USING

Grammar

Rule 0     S' -> start
Rule 1     start -> create ENDREQUEST
Rule 2     start -> show ENDREQUEST
Rule 3     start -> drop ENDREQUEST
Rule 4     start -> tree_selects ENDREQUEST
Rule 5     start -> insert ENDREQUEST
Rule 6     start -> update ENDREQUEST
Rule 7     start -> delete ENDREQUEST
Rule 8     create -> CREATE create_body
Rule 9     create_body -> TABLE NAME LBRACKET values RBRACKET
Rule 10    values -> NAME type
Rule 11    values -> values COMMA NAME type
Rule 12    show -> SHOW CREATE TABLE NAME
Rule 13    drop -> DROP TABLE NAME
Rule 14    tree_selects -> nested_selects
Rule 15    nested_selects -> select join nested_selects
Rule 16    nested_selects -> select UNION nested_selects
Rule 17    nested_selects -> select INTERSECT nested_selects
Rule 18    nested_selects -> select
Rule 19    join -> JOIN
Rule 20    join -> LEFT JOIN
Rule 21    join -> RIGHT JOIN
Rule 22    join -> OUTER JOIN
Rule 23    join -> LEFT OUTER JOIN
Rule 24    join -> RIGHT OUTER JOIN
Rule 25    select -> SELECT select_body
Rule 26    select -> SELECT select_body condition
Rule 27    select_body -> fields FROM NAME
Rule 28    select_body -> STAR COMMA fields FROM NAME
Rule 29    select_body -> STAR FROM NAME
Rule 30    insert -> INSERT insert_body
Rule 31    insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET
Rule 32    insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET
Rule 33    update -> UPDATE update_body
Rule 34    update_body -> NAME SET expression
Rule 35    update_body -> NAME SET expression condition
Rule 36    expression -> field EQUAL tree_expression
Rule 37    expression -> expression COMMA field EQUAL tree_expression
Rule 38    delete -> DELETE FROM NAME
Rule 39    delete -> DELETE FROM NAME condition
Rule 40    fields -> NAME
Rule 41    fields -> fields COMMA NAME
Rule 42    field -> NAME
Rule 43    condition -> WHERE tree_condition
Rule 44    tree_condition -> tree_comparison operator_condition tree_condition
Rule 45    tree_condition -> tree_comparison
Rule 46    tree_comparison -> tree_expression operator_comparison tree_expression
Rule 47    tree_expression -> field
Rule 48    tree_expression -> field operator_expression tree_expression
Rule 49    tree_expression -> operator_expression tree_expression
Rule 50    tree_expression -> LBRACKET tree_expression RBRACKET
Rule 51    tree_expression -> tree_expression operator_expression tree_expression
Rule 52    operator_condition -> AND
Rule 53    operator_condition -> OR
Rule 54    operator_comparison -> EQUAL
Rule 55    operator_comparison -> NOT_EQUAL
Rule 56    operator_comparison -> GREATER_THAN
Rule 57    operator_comparison -> LESS_THAN
Rule 58    operator_comparison -> GREATER_THAN_OR_EQUAL
Rule 59    operator_comparison -> LESS_THAN_OR_EQUAL
Rule 60    operator_expression -> PLUS
Rule 61    operator_expression -> MINUS
Rule 62    operator_expression -> STAR
Rule 63    operator_expression -> DIVISION
Rule 64    type -> int
Rule 65    type -> str
Rule 66    type -> bol
Rule 67    type -> bool
Rule 68    type -> float

Terminals, with rules where they appear

AND                  : 52
COMMA                : 11 28 37 41
CREATE               : 8 12
DELETE               : 38 39
DIVISION             : 63
DROP                 : 13
ENDREQUEST           : 1 2 3 4 5 6 7
EQUAL                : 36 37 54
FROM                 : 27 28 29 38 39
GREATER_THAN         : 56
GREATER_THAN_OR_EQUAL : 58
INSERT               : 30
INTERSECT            : 17
INTO                 : 31 32
JOIN                 : 19 20 21 22 23 24
LBRACKET             : 9 31 32 32 50
LEFT                 : 20 23
LESS_THAN            : 57
LESS_THAN_OR_EQUAL   : 59
MINUS                : 61
NAME                 : 9 10 11 12 13 27 28 29 31 32 34 35 38 39 40 41 42
NOT                  : 
NOT_EQUAL            : 55
ON                   : 
OR                   : 53
OUTER                : 22 23 24
PLUS                 : 60
RBRACKET             : 9 31 32 32 50
RIGHT                : 21 24
SELECT               : 25 26
SET                  : 34 35
SHOW                 : 12
STAR                 : 28 29 62
TABLE                : 9 12 13
UNION                : 16
UPDATE               : 33
USING                : 
VALUES               : 31 32
WHERE                : 43
bol                  : 66
bool                 : 67
error                : 
float                : 68
int                  : 64
str                  : 65

Nonterminals, with rules where they appear

condition            : 26 35 39
create               : 1
create_body          : 8
delete               : 7
drop                 : 3
expression           : 34 35 37
field                : 36 37 47 48
fields               : 27 28 31 32 32 41
insert               : 5
insert_body          : 30
join                 : 15
nested_selects       : 14 15 16 17
operator_comparison  : 46
operator_condition   : 44
operator_expression  : 48 49 51
select               : 15 16 17 18
select_body          : 25 26
show                 : 2
start                : 0
tree_comparison      : 44 45
tree_condition       : 43 44
tree_expression      : 36 37 46 46 48 49 50 51 51
tree_selects         : 4
type                 : 10 11
update               : 6
update_body          : 33
values               : 9 11

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . create ENDREQUEST
    (2) start -> . show ENDREQUEST
    (3) start -> . drop ENDREQUEST
    (4) start -> . tree_selects ENDREQUEST
    (5) start -> . insert ENDREQUEST
    (6) start -> . update ENDREQUEST
    (7) start -> . delete ENDREQUEST
    (8) create -> . CREATE create_body
    (12) show -> . SHOW CREATE TABLE NAME
    (13) drop -> . DROP TABLE NAME
    (14) tree_selects -> . nested_selects
    (30) insert -> . INSERT insert_body
    (33) update -> . UPDATE update_body
    (38) delete -> . DELETE FROM NAME
    (39) delete -> . DELETE FROM NAME condition
    (15) nested_selects -> . select join nested_selects
    (16) nested_selects -> . select UNION nested_selects
    (17) nested_selects -> . select INTERSECT nested_selects
    (18) nested_selects -> . select
    (25) select -> . SELECT select_body
    (26) select -> . SELECT select_body condition

    CREATE          shift and go to state 9
    SHOW            shift and go to state 10
    DROP            shift and go to state 11
    INSERT          shift and go to state 13
    UPDATE          shift and go to state 14
    DELETE          shift and go to state 15
    SELECT          shift and go to state 17

    start                          shift and go to state 1
    create                         shift and go to state 2
    show                           shift and go to state 3
    drop                           shift and go to state 4
    tree_selects                   shift and go to state 5
    insert                         shift and go to state 6
    update                         shift and go to state 7
    delete                         shift and go to state 8
    nested_selects                 shift and go to state 12
    select                         shift and go to state 16

state 1

    (0) S' -> start .



state 2

    (1) start -> create . ENDREQUEST

    ENDREQUEST      shift and go to state 18


state 3

    (2) start -> show . ENDREQUEST

    ENDREQUEST      shift and go to state 19


state 4

    (3) start -> drop . ENDREQUEST

    ENDREQUEST      shift and go to state 20


state 5

    (4) start -> tree_selects . ENDREQUEST

    ENDREQUEST      shift and go to state 21


state 6

    (5) start -> insert . ENDREQUEST

    ENDREQUEST      shift and go to state 22


state 7

    (6) start -> update . ENDREQUEST

    ENDREQUEST      shift and go to state 23


state 8

    (7) start -> delete . ENDREQUEST

    ENDREQUEST      shift and go to state 24


state 9

    (8) create -> CREATE . create_body
    (9) create_body -> . TABLE NAME LBRACKET values RBRACKET

    TABLE           shift and go to state 26

    create_body                    shift and go to state 25

state 10

    (12) show -> SHOW . CREATE TABLE NAME

    CREATE          shift and go to state 27


state 11

    (13) drop -> DROP . TABLE NAME

    TABLE           shift and go to state 28


state 12

    (14) tree_selects -> nested_selects .

    ENDREQUEST      reduce using rule 14 (tree_selects -> nested_selects .)


state 13

    (30) insert -> INSERT . insert_body
    (31) insert_body -> . INTO NAME VALUES LBRACKET fields RBRACKET
    (32) insert_body -> . INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    INTO            shift and go to state 30

    insert_body                    shift and go to state 29

state 14

    (33) update -> UPDATE . update_body
    (34) update_body -> . NAME SET expression
    (35) update_body -> . NAME SET expression condition

    NAME            shift and go to state 32

    update_body                    shift and go to state 31

state 15

    (38) delete -> DELETE . FROM NAME
    (39) delete -> DELETE . FROM NAME condition

    FROM            shift and go to state 33


state 16

    (15) nested_selects -> select . join nested_selects
    (16) nested_selects -> select . UNION nested_selects
    (17) nested_selects -> select . INTERSECT nested_selects
    (18) nested_selects -> select .
    (19) join -> . JOIN
    (20) join -> . LEFT JOIN
    (21) join -> . RIGHT JOIN
    (22) join -> . OUTER JOIN
    (23) join -> . LEFT OUTER JOIN
    (24) join -> . RIGHT OUTER JOIN

    UNION           shift and go to state 35
    INTERSECT       shift and go to state 36
    ENDREQUEST      reduce using rule 18 (nested_selects -> select .)
    JOIN            shift and go to state 37
    LEFT            shift and go to state 38
    RIGHT           shift and go to state 39
    OUTER           shift and go to state 40

    join                           shift and go to state 34

state 17

    (25) select -> SELECT . select_body
    (26) select -> SELECT . select_body condition
    (27) select_body -> . fields FROM NAME
    (28) select_body -> . STAR COMMA fields FROM NAME
    (29) select_body -> . STAR FROM NAME
    (40) fields -> . NAME
    (41) fields -> . fields COMMA NAME

    STAR            shift and go to state 44
    NAME            shift and go to state 43

    select_body                    shift and go to state 41
    fields                         shift and go to state 42

state 18

    (1) start -> create ENDREQUEST .

    $end            reduce using rule 1 (start -> create ENDREQUEST .)


state 19

    (2) start -> show ENDREQUEST .

    $end            reduce using rule 2 (start -> show ENDREQUEST .)


state 20

    (3) start -> drop ENDREQUEST .

    $end            reduce using rule 3 (start -> drop ENDREQUEST .)


state 21

    (4) start -> tree_selects ENDREQUEST .

    $end            reduce using rule 4 (start -> tree_selects ENDREQUEST .)


state 22

    (5) start -> insert ENDREQUEST .

    $end            reduce using rule 5 (start -> insert ENDREQUEST .)


state 23

    (6) start -> update ENDREQUEST .

    $end            reduce using rule 6 (start -> update ENDREQUEST .)


state 24

    (7) start -> delete ENDREQUEST .

    $end            reduce using rule 7 (start -> delete ENDREQUEST .)


state 25

    (8) create -> CREATE create_body .

    ENDREQUEST      reduce using rule 8 (create -> CREATE create_body .)


state 26

    (9) create_body -> TABLE . NAME LBRACKET values RBRACKET

    NAME            shift and go to state 45


state 27

    (12) show -> SHOW CREATE . TABLE NAME

    TABLE           shift and go to state 46


state 28

    (13) drop -> DROP TABLE . NAME

    NAME            shift and go to state 47


state 29

    (30) insert -> INSERT insert_body .

    ENDREQUEST      reduce using rule 30 (insert -> INSERT insert_body .)


state 30

    (31) insert_body -> INTO . NAME VALUES LBRACKET fields RBRACKET
    (32) insert_body -> INTO . NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    NAME            shift and go to state 48


state 31

    (33) update -> UPDATE update_body .

    ENDREQUEST      reduce using rule 33 (update -> UPDATE update_body .)


state 32

    (34) update_body -> NAME . SET expression
    (35) update_body -> NAME . SET expression condition

    SET             shift and go to state 49


state 33

    (38) delete -> DELETE FROM . NAME
    (39) delete -> DELETE FROM . NAME condition

    NAME            shift and go to state 50


state 34

    (15) nested_selects -> select join . nested_selects
    (15) nested_selects -> . select join nested_selects
    (16) nested_selects -> . select UNION nested_selects
    (17) nested_selects -> . select INTERSECT nested_selects
    (18) nested_selects -> . select
    (25) select -> . SELECT select_body
    (26) select -> . SELECT select_body condition

    SELECT          shift and go to state 17

    select                         shift and go to state 16
    nested_selects                 shift and go to state 51

state 35

    (16) nested_selects -> select UNION . nested_selects
    (15) nested_selects -> . select join nested_selects
    (16) nested_selects -> . select UNION nested_selects
    (17) nested_selects -> . select INTERSECT nested_selects
    (18) nested_selects -> . select
    (25) select -> . SELECT select_body
    (26) select -> . SELECT select_body condition

    SELECT          shift and go to state 17

    select                         shift and go to state 16
    nested_selects                 shift and go to state 52

state 36

    (17) nested_selects -> select INTERSECT . nested_selects
    (15) nested_selects -> . select join nested_selects
    (16) nested_selects -> . select UNION nested_selects
    (17) nested_selects -> . select INTERSECT nested_selects
    (18) nested_selects -> . select
    (25) select -> . SELECT select_body
    (26) select -> . SELECT select_body condition

    SELECT          shift and go to state 17

    select                         shift and go to state 16
    nested_selects                 shift and go to state 53

state 37

    (19) join -> JOIN .

    SELECT          reduce using rule 19 (join -> JOIN .)


state 38

    (20) join -> LEFT . JOIN
    (23) join -> LEFT . OUTER JOIN

    JOIN            shift and go to state 54
    OUTER           shift and go to state 55


state 39

    (21) join -> RIGHT . JOIN
    (24) join -> RIGHT . OUTER JOIN

    JOIN            shift and go to state 56
    OUTER           shift and go to state 57


state 40

    (22) join -> OUTER . JOIN

    JOIN            shift and go to state 58


state 41

    (25) select -> SELECT select_body .
    (26) select -> SELECT select_body . condition
    (43) condition -> . WHERE tree_condition

    UNION           reduce using rule 25 (select -> SELECT select_body .)
    INTERSECT       reduce using rule 25 (select -> SELECT select_body .)
    JOIN            reduce using rule 25 (select -> SELECT select_body .)
    LEFT            reduce using rule 25 (select -> SELECT select_body .)
    RIGHT           reduce using rule 25 (select -> SELECT select_body .)
    OUTER           reduce using rule 25 (select -> SELECT select_body .)
    ENDREQUEST      reduce using rule 25 (select -> SELECT select_body .)
    WHERE           shift and go to state 60

    condition                      shift and go to state 59

state 42

    (27) select_body -> fields . FROM NAME
    (41) fields -> fields . COMMA NAME

    FROM            shift and go to state 61
    COMMA           shift and go to state 62


state 43

    (40) fields -> NAME .

    FROM            reduce using rule 40 (fields -> NAME .)
    COMMA           reduce using rule 40 (fields -> NAME .)
    RBRACKET        reduce using rule 40 (fields -> NAME .)


state 44

    (28) select_body -> STAR . COMMA fields FROM NAME
    (29) select_body -> STAR . FROM NAME

    COMMA           shift and go to state 63
    FROM            shift and go to state 64


state 45

    (9) create_body -> TABLE NAME . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 65


state 46

    (12) show -> SHOW CREATE TABLE . NAME

    NAME            shift and go to state 66


state 47

    (13) drop -> DROP TABLE NAME .

    ENDREQUEST      reduce using rule 13 (drop -> DROP TABLE NAME .)


state 48

    (31) insert_body -> INTO NAME . VALUES LBRACKET fields RBRACKET
    (32) insert_body -> INTO NAME . LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    VALUES          shift and go to state 67
    LBRACKET        shift and go to state 68


state 49

    (34) update_body -> NAME SET . expression
    (35) update_body -> NAME SET . expression condition
    (36) expression -> . field EQUAL tree_expression
    (37) expression -> . expression COMMA field EQUAL tree_expression
    (42) field -> . NAME

    NAME            shift and go to state 69

    expression                     shift and go to state 70
    field                          shift and go to state 71

state 50

    (38) delete -> DELETE FROM NAME .
    (39) delete -> DELETE FROM NAME . condition
    (43) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 38 (delete -> DELETE FROM NAME .)
    WHERE           shift and go to state 60

    condition                      shift and go to state 72

state 51

    (15) nested_selects -> select join nested_selects .

    ENDREQUEST      reduce using rule 15 (nested_selects -> select join nested_selects .)


state 52

    (16) nested_selects -> select UNION nested_selects .

    ENDREQUEST      reduce using rule 16 (nested_selects -> select UNION nested_selects .)


state 53

    (17) nested_selects -> select INTERSECT nested_selects .

    ENDREQUEST      reduce using rule 17 (nested_selects -> select INTERSECT nested_selects .)


state 54

    (20) join -> LEFT JOIN .

    SELECT          reduce using rule 20 (join -> LEFT JOIN .)


state 55

    (23) join -> LEFT OUTER . JOIN

    JOIN            shift and go to state 73


state 56

    (21) join -> RIGHT JOIN .

    SELECT          reduce using rule 21 (join -> RIGHT JOIN .)


state 57

    (24) join -> RIGHT OUTER . JOIN

    JOIN            shift and go to state 74


state 58

    (22) join -> OUTER JOIN .

    SELECT          reduce using rule 22 (join -> OUTER JOIN .)


state 59

    (26) select -> SELECT select_body condition .

    UNION           reduce using rule 26 (select -> SELECT select_body condition .)
    INTERSECT       reduce using rule 26 (select -> SELECT select_body condition .)
    JOIN            reduce using rule 26 (select -> SELECT select_body condition .)
    LEFT            reduce using rule 26 (select -> SELECT select_body condition .)
    RIGHT           reduce using rule 26 (select -> SELECT select_body condition .)
    OUTER           reduce using rule 26 (select -> SELECT select_body condition .)
    ENDREQUEST      reduce using rule 26 (select -> SELECT select_body condition .)


state 60

    (43) condition -> WHERE . tree_condition
    (44) tree_condition -> . tree_comparison operator_condition tree_condition
    (45) tree_condition -> . tree_comparison
    (46) tree_comparison -> . tree_expression operator_comparison tree_expression
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    tree_condition                 shift and go to state 75
    tree_comparison                shift and go to state 76
    tree_expression                shift and go to state 77
    field                          shift and go to state 78
    operator_expression            shift and go to state 79

state 61

    (27) select_body -> fields FROM . NAME

    NAME            shift and go to state 85


state 62

    (41) fields -> fields COMMA . NAME

    NAME            shift and go to state 86


state 63

    (28) select_body -> STAR COMMA . fields FROM NAME
    (40) fields -> . NAME
    (41) fields -> . fields COMMA NAME

    NAME            shift and go to state 43

    fields                         shift and go to state 87

state 64

    (29) select_body -> STAR FROM . NAME

    NAME            shift and go to state 88


state 65

    (9) create_body -> TABLE NAME LBRACKET . values RBRACKET
    (10) values -> . NAME type
    (11) values -> . values COMMA NAME type

    NAME            shift and go to state 89

    values                         shift and go to state 90

state 66

    (12) show -> SHOW CREATE TABLE NAME .

    ENDREQUEST      reduce using rule 12 (show -> SHOW CREATE TABLE NAME .)


state 67

    (31) insert_body -> INTO NAME VALUES . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 91


state 68

    (32) insert_body -> INTO NAME LBRACKET . fields RBRACKET VALUES LBRACKET fields RBRACKET
    (40) fields -> . NAME
    (41) fields -> . fields COMMA NAME

    NAME            shift and go to state 43

    fields                         shift and go to state 92

state 69

    (42) field -> NAME .

    EQUAL           reduce using rule 42 (field -> NAME .)
    PLUS            reduce using rule 42 (field -> NAME .)
    MINUS           reduce using rule 42 (field -> NAME .)
    STAR            reduce using rule 42 (field -> NAME .)
    DIVISION        reduce using rule 42 (field -> NAME .)
    NOT_EQUAL       reduce using rule 42 (field -> NAME .)
    GREATER_THAN    reduce using rule 42 (field -> NAME .)
    LESS_THAN       reduce using rule 42 (field -> NAME .)
    GREATER_THAN_OR_EQUAL reduce using rule 42 (field -> NAME .)
    LESS_THAN_OR_EQUAL reduce using rule 42 (field -> NAME .)
    RBRACKET        reduce using rule 42 (field -> NAME .)
    COMMA           reduce using rule 42 (field -> NAME .)
    WHERE           reduce using rule 42 (field -> NAME .)
    ENDREQUEST      reduce using rule 42 (field -> NAME .)
    AND             reduce using rule 42 (field -> NAME .)
    OR              reduce using rule 42 (field -> NAME .)
    UNION           reduce using rule 42 (field -> NAME .)
    INTERSECT       reduce using rule 42 (field -> NAME .)
    JOIN            reduce using rule 42 (field -> NAME .)
    LEFT            reduce using rule 42 (field -> NAME .)
    RIGHT           reduce using rule 42 (field -> NAME .)
    OUTER           reduce using rule 42 (field -> NAME .)


state 70

    (34) update_body -> NAME SET expression .
    (35) update_body -> NAME SET expression . condition
    (37) expression -> expression . COMMA field EQUAL tree_expression
    (43) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 34 (update_body -> NAME SET expression .)
    COMMA           shift and go to state 94
    WHERE           shift and go to state 60

    condition                      shift and go to state 93

state 71

    (36) expression -> field . EQUAL tree_expression

    EQUAL           shift and go to state 95


state 72

    (39) delete -> DELETE FROM NAME condition .

    ENDREQUEST      reduce using rule 39 (delete -> DELETE FROM NAME condition .)


state 73

    (23) join -> LEFT OUTER JOIN .

    SELECT          reduce using rule 23 (join -> LEFT OUTER JOIN .)


state 74

    (24) join -> RIGHT OUTER JOIN .

    SELECT          reduce using rule 24 (join -> RIGHT OUTER JOIN .)


state 75

    (43) condition -> WHERE tree_condition .

    UNION           reduce using rule 43 (condition -> WHERE tree_condition .)
    INTERSECT       reduce using rule 43 (condition -> WHERE tree_condition .)
    JOIN            reduce using rule 43 (condition -> WHERE tree_condition .)
    LEFT            reduce using rule 43 (condition -> WHERE tree_condition .)
    RIGHT           reduce using rule 43 (condition -> WHERE tree_condition .)
    OUTER           reduce using rule 43 (condition -> WHERE tree_condition .)
    ENDREQUEST      reduce using rule 43 (condition -> WHERE tree_condition .)


state 76

    (44) tree_condition -> tree_comparison . operator_condition tree_condition
    (45) tree_condition -> tree_comparison .
    (52) operator_condition -> . AND
    (53) operator_condition -> . OR

    UNION           reduce using rule 45 (tree_condition -> tree_comparison .)
    INTERSECT       reduce using rule 45 (tree_condition -> tree_comparison .)
    JOIN            reduce using rule 45 (tree_condition -> tree_comparison .)
    LEFT            reduce using rule 45 (tree_condition -> tree_comparison .)
    RIGHT           reduce using rule 45 (tree_condition -> tree_comparison .)
    OUTER           reduce using rule 45 (tree_condition -> tree_comparison .)
    ENDREQUEST      reduce using rule 45 (tree_condition -> tree_comparison .)
    AND             shift and go to state 97
    OR              shift and go to state 98

    operator_condition             shift and go to state 96

state 77

    (46) tree_comparison -> tree_expression . operator_comparison tree_expression
    (51) tree_expression -> tree_expression . operator_expression tree_expression
    (54) operator_comparison -> . EQUAL
    (55) operator_comparison -> . NOT_EQUAL
    (56) operator_comparison -> . GREATER_THAN
    (57) operator_comparison -> . LESS_THAN
    (58) operator_comparison -> . GREATER_THAN_OR_EQUAL
    (59) operator_comparison -> . LESS_THAN_OR_EQUAL
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    EQUAL           shift and go to state 101
    NOT_EQUAL       shift and go to state 102
    GREATER_THAN    shift and go to state 103
    LESS_THAN       shift and go to state 104
    GREATER_THAN_OR_EQUAL shift and go to state 105
    LESS_THAN_OR_EQUAL shift and go to state 106
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    operator_comparison            shift and go to state 99
    operator_expression            shift and go to state 100

state 78

    (47) tree_expression -> field .
    (48) tree_expression -> field . operator_expression tree_expression
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 47 (tree_expression -> field .)
    NOT_EQUAL       reduce using rule 47 (tree_expression -> field .)
    GREATER_THAN    reduce using rule 47 (tree_expression -> field .)
    LESS_THAN       reduce using rule 47 (tree_expression -> field .)
    GREATER_THAN_OR_EQUAL reduce using rule 47 (tree_expression -> field .)
    LESS_THAN_OR_EQUAL reduce using rule 47 (tree_expression -> field .)
    RBRACKET        reduce using rule 47 (tree_expression -> field .)
    COMMA           reduce using rule 47 (tree_expression -> field .)
    WHERE           reduce using rule 47 (tree_expression -> field .)
    ENDREQUEST      reduce using rule 47 (tree_expression -> field .)
    AND             reduce using rule 47 (tree_expression -> field .)
    OR              reduce using rule 47 (tree_expression -> field .)
    UNION           reduce using rule 47 (tree_expression -> field .)
    INTERSECT       reduce using rule 47 (tree_expression -> field .)
    JOIN            reduce using rule 47 (tree_expression -> field .)
    LEFT            reduce using rule 47 (tree_expression -> field .)
    RIGHT           reduce using rule 47 (tree_expression -> field .)
    OUTER           reduce using rule 47 (tree_expression -> field .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

  ! PLUS            [ reduce using rule 47 (tree_expression -> field .) ]
  ! MINUS           [ reduce using rule 47 (tree_expression -> field .) ]
  ! STAR            [ reduce using rule 47 (tree_expression -> field .) ]
  ! DIVISION        [ reduce using rule 47 (tree_expression -> field .) ]

    operator_expression            shift and go to state 107

state 79

    (49) tree_expression -> operator_expression . tree_expression
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    operator_expression            shift and go to state 79
    tree_expression                shift and go to state 108
    field                          shift and go to state 78

state 80

    (50) tree_expression -> LBRACKET . tree_expression RBRACKET
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    tree_expression                shift and go to state 109
    field                          shift and go to state 78
    operator_expression            shift and go to state 79

state 81

    (60) operator_expression -> PLUS .

    LBRACKET        reduce using rule 60 (operator_expression -> PLUS .)
    NAME            reduce using rule 60 (operator_expression -> PLUS .)
    PLUS            reduce using rule 60 (operator_expression -> PLUS .)
    MINUS           reduce using rule 60 (operator_expression -> PLUS .)
    STAR            reduce using rule 60 (operator_expression -> PLUS .)
    DIVISION        reduce using rule 60 (operator_expression -> PLUS .)


state 82

    (61) operator_expression -> MINUS .

    LBRACKET        reduce using rule 61 (operator_expression -> MINUS .)
    NAME            reduce using rule 61 (operator_expression -> MINUS .)
    PLUS            reduce using rule 61 (operator_expression -> MINUS .)
    MINUS           reduce using rule 61 (operator_expression -> MINUS .)
    STAR            reduce using rule 61 (operator_expression -> MINUS .)
    DIVISION        reduce using rule 61 (operator_expression -> MINUS .)


state 83

    (62) operator_expression -> STAR .

    LBRACKET        reduce using rule 62 (operator_expression -> STAR .)
    NAME            reduce using rule 62 (operator_expression -> STAR .)
    PLUS            reduce using rule 62 (operator_expression -> STAR .)
    MINUS           reduce using rule 62 (operator_expression -> STAR .)
    STAR            reduce using rule 62 (operator_expression -> STAR .)
    DIVISION        reduce using rule 62 (operator_expression -> STAR .)


state 84

    (63) operator_expression -> DIVISION .

    LBRACKET        reduce using rule 63 (operator_expression -> DIVISION .)
    NAME            reduce using rule 63 (operator_expression -> DIVISION .)
    PLUS            reduce using rule 63 (operator_expression -> DIVISION .)
    MINUS           reduce using rule 63 (operator_expression -> DIVISION .)
    STAR            reduce using rule 63 (operator_expression -> DIVISION .)
    DIVISION        reduce using rule 63 (operator_expression -> DIVISION .)


state 85

    (27) select_body -> fields FROM NAME .

    WHERE           reduce using rule 27 (select_body -> fields FROM NAME .)
    UNION           reduce using rule 27 (select_body -> fields FROM NAME .)
    INTERSECT       reduce using rule 27 (select_body -> fields FROM NAME .)
    JOIN            reduce using rule 27 (select_body -> fields FROM NAME .)
    LEFT            reduce using rule 27 (select_body -> fields FROM NAME .)
    RIGHT           reduce using rule 27 (select_body -> fields FROM NAME .)
    OUTER           reduce using rule 27 (select_body -> fields FROM NAME .)
    ENDREQUEST      reduce using rule 27 (select_body -> fields FROM NAME .)


state 86

    (41) fields -> fields COMMA NAME .

    FROM            reduce using rule 41 (fields -> fields COMMA NAME .)
    COMMA           reduce using rule 41 (fields -> fields COMMA NAME .)
    RBRACKET        reduce using rule 41 (fields -> fields COMMA NAME .)


state 87

    (28) select_body -> STAR COMMA fields . FROM NAME
    (41) fields -> fields . COMMA NAME

    FROM            shift and go to state 110
    COMMA           shift and go to state 62


state 88

    (29) select_body -> STAR FROM NAME .

    WHERE           reduce using rule 29 (select_body -> STAR FROM NAME .)
    UNION           reduce using rule 29 (select_body -> STAR FROM NAME .)
    INTERSECT       reduce using rule 29 (select_body -> STAR FROM NAME .)
    JOIN            reduce using rule 29 (select_body -> STAR FROM NAME .)
    LEFT            reduce using rule 29 (select_body -> STAR FROM NAME .)
    RIGHT           reduce using rule 29 (select_body -> STAR FROM NAME .)
    OUTER           reduce using rule 29 (select_body -> STAR FROM NAME .)
    ENDREQUEST      reduce using rule 29 (select_body -> STAR FROM NAME .)


state 89

    (10) values -> NAME . type
    (64) type -> . int
    (65) type -> . str
    (66) type -> . bol
    (67) type -> . bool
    (68) type -> . float

    int             shift and go to state 112
    str             shift and go to state 113
    bol             shift and go to state 114
    bool            shift and go to state 115
    float           shift and go to state 116

    type                           shift and go to state 111

state 90

    (9) create_body -> TABLE NAME LBRACKET values . RBRACKET
    (11) values -> values . COMMA NAME type

    RBRACKET        shift and go to state 117
    COMMA           shift and go to state 118


state 91

    (31) insert_body -> INTO NAME VALUES LBRACKET . fields RBRACKET
    (40) fields -> . NAME
    (41) fields -> . fields COMMA NAME

    NAME            shift and go to state 43

    fields                         shift and go to state 119

state 92

    (32) insert_body -> INTO NAME LBRACKET fields . RBRACKET VALUES LBRACKET fields RBRACKET
    (41) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 120
    COMMA           shift and go to state 62


state 93

    (35) update_body -> NAME SET expression condition .

    ENDREQUEST      reduce using rule 35 (update_body -> NAME SET expression condition .)


state 94

    (37) expression -> expression COMMA . field EQUAL tree_expression
    (42) field -> . NAME

    NAME            shift and go to state 69

    field                          shift and go to state 121

state 95

    (36) expression -> field EQUAL . tree_expression
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    field                          shift and go to state 78
    tree_expression                shift and go to state 122
    operator_expression            shift and go to state 79

state 96

    (44) tree_condition -> tree_comparison operator_condition . tree_condition
    (44) tree_condition -> . tree_comparison operator_condition tree_condition
    (45) tree_condition -> . tree_comparison
    (46) tree_comparison -> . tree_expression operator_comparison tree_expression
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    tree_comparison                shift and go to state 76
    tree_condition                 shift and go to state 123
    tree_expression                shift and go to state 77
    field                          shift and go to state 78
    operator_expression            shift and go to state 79

state 97

    (52) operator_condition -> AND .

    LBRACKET        reduce using rule 52 (operator_condition -> AND .)
    NAME            reduce using rule 52 (operator_condition -> AND .)
    PLUS            reduce using rule 52 (operator_condition -> AND .)
    MINUS           reduce using rule 52 (operator_condition -> AND .)
    STAR            reduce using rule 52 (operator_condition -> AND .)
    DIVISION        reduce using rule 52 (operator_condition -> AND .)


state 98

    (53) operator_condition -> OR .

    LBRACKET        reduce using rule 53 (operator_condition -> OR .)
    NAME            reduce using rule 53 (operator_condition -> OR .)
    PLUS            reduce using rule 53 (operator_condition -> OR .)
    MINUS           reduce using rule 53 (operator_condition -> OR .)
    STAR            reduce using rule 53 (operator_condition -> OR .)
    DIVISION        reduce using rule 53 (operator_condition -> OR .)


state 99

    (46) tree_comparison -> tree_expression operator_comparison . tree_expression
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    tree_expression                shift and go to state 124
    field                          shift and go to state 78
    operator_expression            shift and go to state 79

state 100

    (51) tree_expression -> tree_expression operator_expression . tree_expression
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    tree_expression                shift and go to state 125
    operator_expression            shift and go to state 79
    field                          shift and go to state 78

state 101

    (54) operator_comparison -> EQUAL .

    LBRACKET        reduce using rule 54 (operator_comparison -> EQUAL .)
    NAME            reduce using rule 54 (operator_comparison -> EQUAL .)
    PLUS            reduce using rule 54 (operator_comparison -> EQUAL .)
    MINUS           reduce using rule 54 (operator_comparison -> EQUAL .)
    STAR            reduce using rule 54 (operator_comparison -> EQUAL .)
    DIVISION        reduce using rule 54 (operator_comparison -> EQUAL .)


state 102

    (55) operator_comparison -> NOT_EQUAL .

    LBRACKET        reduce using rule 55 (operator_comparison -> NOT_EQUAL .)
    NAME            reduce using rule 55 (operator_comparison -> NOT_EQUAL .)
    PLUS            reduce using rule 55 (operator_comparison -> NOT_EQUAL .)
    MINUS           reduce using rule 55 (operator_comparison -> NOT_EQUAL .)
    STAR            reduce using rule 55 (operator_comparison -> NOT_EQUAL .)
    DIVISION        reduce using rule 55 (operator_comparison -> NOT_EQUAL .)


state 103

    (56) operator_comparison -> GREATER_THAN .

    LBRACKET        reduce using rule 56 (operator_comparison -> GREATER_THAN .)
    NAME            reduce using rule 56 (operator_comparison -> GREATER_THAN .)
    PLUS            reduce using rule 56 (operator_comparison -> GREATER_THAN .)
    MINUS           reduce using rule 56 (operator_comparison -> GREATER_THAN .)
    STAR            reduce using rule 56 (operator_comparison -> GREATER_THAN .)
    DIVISION        reduce using rule 56 (operator_comparison -> GREATER_THAN .)


state 104

    (57) operator_comparison -> LESS_THAN .

    LBRACKET        reduce using rule 57 (operator_comparison -> LESS_THAN .)
    NAME            reduce using rule 57 (operator_comparison -> LESS_THAN .)
    PLUS            reduce using rule 57 (operator_comparison -> LESS_THAN .)
    MINUS           reduce using rule 57 (operator_comparison -> LESS_THAN .)
    STAR            reduce using rule 57 (operator_comparison -> LESS_THAN .)
    DIVISION        reduce using rule 57 (operator_comparison -> LESS_THAN .)


state 105

    (58) operator_comparison -> GREATER_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 58 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    NAME            reduce using rule 58 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    PLUS            reduce using rule 58 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    MINUS           reduce using rule 58 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    STAR            reduce using rule 58 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 58 (operator_comparison -> GREATER_THAN_OR_EQUAL .)


state 106

    (59) operator_comparison -> LESS_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 59 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    NAME            reduce using rule 59 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    PLUS            reduce using rule 59 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    MINUS           reduce using rule 59 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    STAR            reduce using rule 59 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 59 (operator_comparison -> LESS_THAN_OR_EQUAL .)


state 107

    (48) tree_expression -> field operator_expression . tree_expression
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    field                          shift and go to state 78
    operator_expression            shift and go to state 79
    tree_expression                shift and go to state 126

state 108

    (49) tree_expression -> operator_expression tree_expression .
    (51) tree_expression -> tree_expression . operator_expression tree_expression
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN       reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    RBRACKET        reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    COMMA           reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    WHERE           reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    AND             reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    OR              reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    UNION           reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    INTERSECT       reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    JOIN            reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    LEFT            reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    RIGHT           reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    OUTER           reduce using rule 49 (tree_expression -> operator_expression tree_expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

  ! PLUS            [ reduce using rule 49 (tree_expression -> operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 49 (tree_expression -> operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 49 (tree_expression -> operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 49 (tree_expression -> operator_expression tree_expression .) ]

    operator_expression            shift and go to state 100

state 109

    (50) tree_expression -> LBRACKET tree_expression . RBRACKET
    (51) tree_expression -> tree_expression . operator_expression tree_expression
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    RBRACKET        shift and go to state 127
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    operator_expression            shift and go to state 100

state 110

    (28) select_body -> STAR COMMA fields FROM . NAME

    NAME            shift and go to state 128


state 111

    (10) values -> NAME type .

    RBRACKET        reduce using rule 10 (values -> NAME type .)
    COMMA           reduce using rule 10 (values -> NAME type .)


state 112

    (64) type -> int .

    RBRACKET        reduce using rule 64 (type -> int .)
    COMMA           reduce using rule 64 (type -> int .)


state 113

    (65) type -> str .

    RBRACKET        reduce using rule 65 (type -> str .)
    COMMA           reduce using rule 65 (type -> str .)


state 114

    (66) type -> bol .

    RBRACKET        reduce using rule 66 (type -> bol .)
    COMMA           reduce using rule 66 (type -> bol .)


state 115

    (67) type -> bool .

    RBRACKET        reduce using rule 67 (type -> bool .)
    COMMA           reduce using rule 67 (type -> bool .)


state 116

    (68) type -> float .

    RBRACKET        reduce using rule 68 (type -> float .)
    COMMA           reduce using rule 68 (type -> float .)


state 117

    (9) create_body -> TABLE NAME LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 9 (create_body -> TABLE NAME LBRACKET values RBRACKET .)


state 118

    (11) values -> values COMMA . NAME type

    NAME            shift and go to state 129


state 119

    (31) insert_body -> INTO NAME VALUES LBRACKET fields . RBRACKET
    (41) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 130
    COMMA           shift and go to state 62


state 120

    (32) insert_body -> INTO NAME LBRACKET fields RBRACKET . VALUES LBRACKET fields RBRACKET

    VALUES          shift and go to state 131


state 121

    (37) expression -> expression COMMA field . EQUAL tree_expression

    EQUAL           shift and go to state 132


state 122

    (36) expression -> field EQUAL tree_expression .
    (51) tree_expression -> tree_expression . operator_expression tree_expression
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    COMMA           reduce using rule 36 (expression -> field EQUAL tree_expression .)
    WHERE           reduce using rule 36 (expression -> field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 36 (expression -> field EQUAL tree_expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    operator_expression            shift and go to state 100

state 123

    (44) tree_condition -> tree_comparison operator_condition tree_condition .

    UNION           reduce using rule 44 (tree_condition -> tree_comparison operator_condition tree_condition .)
    INTERSECT       reduce using rule 44 (tree_condition -> tree_comparison operator_condition tree_condition .)
    JOIN            reduce using rule 44 (tree_condition -> tree_comparison operator_condition tree_condition .)
    LEFT            reduce using rule 44 (tree_condition -> tree_comparison operator_condition tree_condition .)
    RIGHT           reduce using rule 44 (tree_condition -> tree_comparison operator_condition tree_condition .)
    OUTER           reduce using rule 44 (tree_condition -> tree_comparison operator_condition tree_condition .)
    ENDREQUEST      reduce using rule 44 (tree_condition -> tree_comparison operator_condition tree_condition .)


state 124

    (46) tree_comparison -> tree_expression operator_comparison tree_expression .
    (51) tree_expression -> tree_expression . operator_expression tree_expression
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    AND             reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    OR              reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    UNION           reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    INTERSECT       reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    JOIN            reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    LEFT            reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    RIGHT           reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    OUTER           reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    ENDREQUEST      reduce using rule 46 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    operator_expression            shift and go to state 100

state 125

    (51) tree_expression -> tree_expression operator_expression tree_expression .
    (51) tree_expression -> tree_expression . operator_expression tree_expression
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN       reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    RBRACKET        reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    COMMA           reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    WHERE           reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    AND             reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    OR              reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    UNION           reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    INTERSECT       reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    JOIN            reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    LEFT            reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    RIGHT           reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    OUTER           reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

  ! PLUS            [ reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 51 (tree_expression -> tree_expression operator_expression tree_expression .) ]

    operator_expression            shift and go to state 100

state 126

    (48) tree_expression -> field operator_expression tree_expression .
    (51) tree_expression -> tree_expression . operator_expression tree_expression
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    LESS_THAN       reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    RBRACKET        reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    COMMA           reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    WHERE           reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    AND             reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    OR              reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    UNION           reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    INTERSECT       reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    JOIN            reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    LEFT            reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    RIGHT           reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    OUTER           reduce using rule 48 (tree_expression -> field operator_expression tree_expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

  ! PLUS            [ reduce using rule 48 (tree_expression -> field operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 48 (tree_expression -> field operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 48 (tree_expression -> field operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 48 (tree_expression -> field operator_expression tree_expression .) ]

    operator_expression            shift and go to state 100

state 127

    (50) tree_expression -> LBRACKET tree_expression RBRACKET .

    EQUAL           reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    NOT_EQUAL       reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN    reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN       reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN_OR_EQUAL reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    PLUS            reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    MINUS           reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    STAR            reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    DIVISION        reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RBRACKET        reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    COMMA           reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    WHERE           reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    ENDREQUEST      reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    AND             reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    OR              reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    UNION           reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    INTERSECT       reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    JOIN            reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LEFT            reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RIGHT           reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    OUTER           reduce using rule 50 (tree_expression -> LBRACKET tree_expression RBRACKET .)


state 128

    (28) select_body -> STAR COMMA fields FROM NAME .

    WHERE           reduce using rule 28 (select_body -> STAR COMMA fields FROM NAME .)
    UNION           reduce using rule 28 (select_body -> STAR COMMA fields FROM NAME .)
    INTERSECT       reduce using rule 28 (select_body -> STAR COMMA fields FROM NAME .)
    JOIN            reduce using rule 28 (select_body -> STAR COMMA fields FROM NAME .)
    LEFT            reduce using rule 28 (select_body -> STAR COMMA fields FROM NAME .)
    RIGHT           reduce using rule 28 (select_body -> STAR COMMA fields FROM NAME .)
    OUTER           reduce using rule 28 (select_body -> STAR COMMA fields FROM NAME .)
    ENDREQUEST      reduce using rule 28 (select_body -> STAR COMMA fields FROM NAME .)


state 129

    (11) values -> values COMMA NAME . type
    (64) type -> . int
    (65) type -> . str
    (66) type -> . bol
    (67) type -> . bool
    (68) type -> . float

    int             shift and go to state 112
    str             shift and go to state 113
    bol             shift and go to state 114
    bool            shift and go to state 115
    float           shift and go to state 116

    type                           shift and go to state 133

state 130

    (31) insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 31 (insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET .)


state 131

    (32) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 134


state 132

    (37) expression -> expression COMMA field EQUAL . tree_expression
    (47) tree_expression -> . field
    (48) tree_expression -> . field operator_expression tree_expression
    (49) tree_expression -> . operator_expression tree_expression
    (50) tree_expression -> . LBRACKET tree_expression RBRACKET
    (51) tree_expression -> . tree_expression operator_expression tree_expression
    (42) field -> . NAME
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 80
    NAME            shift and go to state 69
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    field                          shift and go to state 78
    tree_expression                shift and go to state 135
    operator_expression            shift and go to state 79

state 133

    (11) values -> values COMMA NAME type .

    RBRACKET        reduce using rule 11 (values -> values COMMA NAME type .)
    COMMA           reduce using rule 11 (values -> values COMMA NAME type .)


state 134

    (32) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET . fields RBRACKET
    (40) fields -> . NAME
    (41) fields -> . fields COMMA NAME

    NAME            shift and go to state 43

    fields                         shift and go to state 136

state 135

    (37) expression -> expression COMMA field EQUAL tree_expression .
    (51) tree_expression -> tree_expression . operator_expression tree_expression
    (60) operator_expression -> . PLUS
    (61) operator_expression -> . MINUS
    (62) operator_expression -> . STAR
    (63) operator_expression -> . DIVISION

    COMMA           reduce using rule 37 (expression -> expression COMMA field EQUAL tree_expression .)
    WHERE           reduce using rule 37 (expression -> expression COMMA field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 37 (expression -> expression COMMA field EQUAL tree_expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    STAR            shift and go to state 83
    DIVISION        shift and go to state 84

    operator_expression            shift and go to state 100

state 136

    (32) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields . RBRACKET
    (41) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 137
    COMMA           shift and go to state 62


state 137

    (32) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 32 (insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for STAR in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for STAR in state 108 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 108 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 125 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for STAR in state 125 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 126 resolved as shift
WARNING: shift/reduce conflict for STAR in state 126 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 126 resolved as shift
