Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    INTERSECT
    JOIN
    LEFT
    NOT
    ON
    OUTER
    RIGHT
    UNION
    USING

Grammar

Rule 0     S' -> start
Rule 1     start -> create ENDREQUEST
Rule 2     start -> show ENDREQUEST
Rule 3     start -> drop ENDREQUEST
Rule 4     start -> select ENDREQUEST
Rule 5     start -> insert ENDREQUEST
Rule 6     start -> update ENDREQUEST
Rule 7     start -> delete ENDREQUEST
Rule 8     create -> CREATE create_body
Rule 9     create_body -> TABLE NAME LBRACKET values RBRACKET
Rule 10    values -> NAME type
Rule 11    values -> values COMMA NAME type
Rule 12    show -> SHOW CREATE TABLE NAME
Rule 13    drop -> DROP TABLE NAME
Rule 14    select -> SELECT select_body
Rule 15    select -> SELECT select_body condition
Rule 16    select_body -> fields FROM NAME
Rule 17    select_body -> STAR COMMA fields FROM NAME
Rule 18    select_body -> STAR FROM NAME
Rule 19    insert -> INSERT insert_body
Rule 20    insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET
Rule 21    insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET
Rule 22    update -> UPDATE update_body
Rule 23    update_body -> NAME SET expression
Rule 24    update_body -> NAME SET expression condition
Rule 25    expression -> field EQUAL tree_expression
Rule 26    expression -> expression COMMA field EQUAL tree_expression
Rule 27    delete -> DELETE FROM NAME
Rule 28    delete -> DELETE FROM NAME condition
Rule 29    fields -> NAME
Rule 30    fields -> fields COMMA NAME
Rule 31    field -> NAME
Rule 32    condition -> WHERE tree_condition
Rule 33    tree_condition -> tree_comparison operator_condition tree_condition
Rule 34    tree_condition -> tree_comparison
Rule 35    tree_condition -> tree_comparison operator_condition tree_comparison
Rule 36    tree_comparison -> tree_expression operator_comparison tree_expression
Rule 37    tree_expression -> field
Rule 38    tree_expression -> field operator_expression tree_expression
Rule 39    tree_expression -> operator_expression tree_expression
Rule 40    tree_expression -> LBRACKET tree_expression RBRACKET
Rule 41    tree_expression -> tree_expression operator_expression tree_expression
Rule 42    operator_condition -> AND
Rule 43    operator_condition -> OR
Rule 44    operator_comparison -> EQUAL
Rule 45    operator_comparison -> NOT_EQUAL
Rule 46    operator_comparison -> GREATER_THAN
Rule 47    operator_comparison -> LESS_THAN
Rule 48    operator_comparison -> GREATER_THAN_OR_EQUAL
Rule 49    operator_comparison -> LESS_THAN_OR_EQUAL
Rule 50    operator_expression -> PLUS
Rule 51    operator_expression -> MINUS
Rule 52    operator_expression -> STAR
Rule 53    operator_expression -> DIVISION
Rule 54    type -> int
Rule 55    type -> str
Rule 56    type -> bol
Rule 57    type -> bool
Rule 58    type -> float

Terminals, with rules where they appear

AND                  : 42
COMMA                : 11 17 26 30
CREATE               : 8 12
DELETE               : 27 28
DIVISION             : 53
DROP                 : 13
ENDREQUEST           : 1 2 3 4 5 6 7
EQUAL                : 25 26 44
FROM                 : 16 17 18 27 28
GREATER_THAN         : 46
GREATER_THAN_OR_EQUAL : 48
INSERT               : 19
INTERSECT            : 
INTO                 : 20 21
JOIN                 : 
LBRACKET             : 9 20 21 21 40
LEFT                 : 
LESS_THAN            : 47
LESS_THAN_OR_EQUAL   : 49
MINUS                : 51
NAME                 : 9 10 11 12 13 16 17 18 20 21 23 24 27 28 29 30 31
NOT                  : 
NOT_EQUAL            : 45
ON                   : 
OR                   : 43
OUTER                : 
PLUS                 : 50
RBRACKET             : 9 20 21 21 40
RIGHT                : 
SELECT               : 14 15
SET                  : 23 24
SHOW                 : 12
STAR                 : 17 18 52
TABLE                : 9 12 13
UNION                : 
UPDATE               : 22
USING                : 
VALUES               : 20 21
WHERE                : 32
bol                  : 56
bool                 : 57
error                : 
float                : 58
int                  : 54
str                  : 55

Nonterminals, with rules where they appear

condition            : 15 24 28
create               : 1
create_body          : 8
delete               : 7
drop                 : 3
expression           : 23 24 26
field                : 25 26 37 38
fields               : 16 17 20 21 21 30
insert               : 5
insert_body          : 19
operator_comparison  : 36
operator_condition   : 33 35
operator_expression  : 38 39 41
select               : 4
select_body          : 14 15
show                 : 2
start                : 0
tree_comparison      : 33 34 35 35
tree_condition       : 32 33
tree_expression      : 25 26 36 36 38 39 40 41 41
type                 : 10 11
update               : 6
update_body          : 22
values               : 9 11

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . create ENDREQUEST
    (2) start -> . show ENDREQUEST
    (3) start -> . drop ENDREQUEST
    (4) start -> . select ENDREQUEST
    (5) start -> . insert ENDREQUEST
    (6) start -> . update ENDREQUEST
    (7) start -> . delete ENDREQUEST
    (8) create -> . CREATE create_body
    (12) show -> . SHOW CREATE TABLE NAME
    (13) drop -> . DROP TABLE NAME
    (14) select -> . SELECT select_body
    (15) select -> . SELECT select_body condition
    (19) insert -> . INSERT insert_body
    (22) update -> . UPDATE update_body
    (27) delete -> . DELETE FROM NAME
    (28) delete -> . DELETE FROM NAME condition

    CREATE          shift and go to state 9
    SHOW            shift and go to state 10
    DROP            shift and go to state 11
    SELECT          shift and go to state 12
    INSERT          shift and go to state 13
    UPDATE          shift and go to state 14
    DELETE          shift and go to state 15

    start                          shift and go to state 1
    create                         shift and go to state 2
    show                           shift and go to state 3
    drop                           shift and go to state 4
    select                         shift and go to state 5
    insert                         shift and go to state 6
    update                         shift and go to state 7
    delete                         shift and go to state 8

state 1

    (0) S' -> start .



state 2

    (1) start -> create . ENDREQUEST

    ENDREQUEST      shift and go to state 16


state 3

    (2) start -> show . ENDREQUEST

    ENDREQUEST      shift and go to state 17


state 4

    (3) start -> drop . ENDREQUEST

    ENDREQUEST      shift and go to state 18


state 5

    (4) start -> select . ENDREQUEST

    ENDREQUEST      shift and go to state 19


state 6

    (5) start -> insert . ENDREQUEST

    ENDREQUEST      shift and go to state 20


state 7

    (6) start -> update . ENDREQUEST

    ENDREQUEST      shift and go to state 21


state 8

    (7) start -> delete . ENDREQUEST

    ENDREQUEST      shift and go to state 22


state 9

    (8) create -> CREATE . create_body
    (9) create_body -> . TABLE NAME LBRACKET values RBRACKET

    TABLE           shift and go to state 24

    create_body                    shift and go to state 23

state 10

    (12) show -> SHOW . CREATE TABLE NAME

    CREATE          shift and go to state 25


state 11

    (13) drop -> DROP . TABLE NAME

    TABLE           shift and go to state 26


state 12

    (14) select -> SELECT . select_body
    (15) select -> SELECT . select_body condition
    (16) select_body -> . fields FROM NAME
    (17) select_body -> . STAR COMMA fields FROM NAME
    (18) select_body -> . STAR FROM NAME
    (29) fields -> . NAME
    (30) fields -> . fields COMMA NAME

    STAR            shift and go to state 30
    NAME            shift and go to state 29

    select_body                    shift and go to state 27
    fields                         shift and go to state 28

state 13

    (19) insert -> INSERT . insert_body
    (20) insert_body -> . INTO NAME VALUES LBRACKET fields RBRACKET
    (21) insert_body -> . INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    INTO            shift and go to state 32

    insert_body                    shift and go to state 31

state 14

    (22) update -> UPDATE . update_body
    (23) update_body -> . NAME SET expression
    (24) update_body -> . NAME SET expression condition

    NAME            shift and go to state 34

    update_body                    shift and go to state 33

state 15

    (27) delete -> DELETE . FROM NAME
    (28) delete -> DELETE . FROM NAME condition

    FROM            shift and go to state 35


state 16

    (1) start -> create ENDREQUEST .

    $end            reduce using rule 1 (start -> create ENDREQUEST .)


state 17

    (2) start -> show ENDREQUEST .

    $end            reduce using rule 2 (start -> show ENDREQUEST .)


state 18

    (3) start -> drop ENDREQUEST .

    $end            reduce using rule 3 (start -> drop ENDREQUEST .)


state 19

    (4) start -> select ENDREQUEST .

    $end            reduce using rule 4 (start -> select ENDREQUEST .)


state 20

    (5) start -> insert ENDREQUEST .

    $end            reduce using rule 5 (start -> insert ENDREQUEST .)


state 21

    (6) start -> update ENDREQUEST .

    $end            reduce using rule 6 (start -> update ENDREQUEST .)


state 22

    (7) start -> delete ENDREQUEST .

    $end            reduce using rule 7 (start -> delete ENDREQUEST .)


state 23

    (8) create -> CREATE create_body .

    ENDREQUEST      reduce using rule 8 (create -> CREATE create_body .)


state 24

    (9) create_body -> TABLE . NAME LBRACKET values RBRACKET

    NAME            shift and go to state 36


state 25

    (12) show -> SHOW CREATE . TABLE NAME

    TABLE           shift and go to state 37


state 26

    (13) drop -> DROP TABLE . NAME

    NAME            shift and go to state 38


state 27

    (14) select -> SELECT select_body .
    (15) select -> SELECT select_body . condition
    (32) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 14 (select -> SELECT select_body .)
    WHERE           shift and go to state 40

    condition                      shift and go to state 39

state 28

    (16) select_body -> fields . FROM NAME
    (30) fields -> fields . COMMA NAME

    FROM            shift and go to state 41
    COMMA           shift and go to state 42


state 29

    (29) fields -> NAME .

    FROM            reduce using rule 29 (fields -> NAME .)
    COMMA           reduce using rule 29 (fields -> NAME .)
    RBRACKET        reduce using rule 29 (fields -> NAME .)


state 30

    (17) select_body -> STAR . COMMA fields FROM NAME
    (18) select_body -> STAR . FROM NAME

    COMMA           shift and go to state 43
    FROM            shift and go to state 44


state 31

    (19) insert -> INSERT insert_body .

    ENDREQUEST      reduce using rule 19 (insert -> INSERT insert_body .)


state 32

    (20) insert_body -> INTO . NAME VALUES LBRACKET fields RBRACKET
    (21) insert_body -> INTO . NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    NAME            shift and go to state 45


state 33

    (22) update -> UPDATE update_body .

    ENDREQUEST      reduce using rule 22 (update -> UPDATE update_body .)


state 34

    (23) update_body -> NAME . SET expression
    (24) update_body -> NAME . SET expression condition

    SET             shift and go to state 46


state 35

    (27) delete -> DELETE FROM . NAME
    (28) delete -> DELETE FROM . NAME condition

    NAME            shift and go to state 47


state 36

    (9) create_body -> TABLE NAME . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 48


state 37

    (12) show -> SHOW CREATE TABLE . NAME

    NAME            shift and go to state 49


state 38

    (13) drop -> DROP TABLE NAME .

    ENDREQUEST      reduce using rule 13 (drop -> DROP TABLE NAME .)


state 39

    (15) select -> SELECT select_body condition .

    ENDREQUEST      reduce using rule 15 (select -> SELECT select_body condition .)


state 40

    (32) condition -> WHERE . tree_condition
    (33) tree_condition -> . tree_comparison operator_condition tree_condition
    (34) tree_condition -> . tree_comparison
    (35) tree_condition -> . tree_comparison operator_condition tree_comparison
    (36) tree_comparison -> . tree_expression operator_comparison tree_expression
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    tree_condition                 shift and go to state 50
    tree_comparison                shift and go to state 51
    tree_expression                shift and go to state 52
    field                          shift and go to state 53
    operator_expression            shift and go to state 54

state 41

    (16) select_body -> fields FROM . NAME

    NAME            shift and go to state 61


state 42

    (30) fields -> fields COMMA . NAME

    NAME            shift and go to state 62


state 43

    (17) select_body -> STAR COMMA . fields FROM NAME
    (29) fields -> . NAME
    (30) fields -> . fields COMMA NAME

    NAME            shift and go to state 29

    fields                         shift and go to state 63

state 44

    (18) select_body -> STAR FROM . NAME

    NAME            shift and go to state 64


state 45

    (20) insert_body -> INTO NAME . VALUES LBRACKET fields RBRACKET
    (21) insert_body -> INTO NAME . LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET

    VALUES          shift and go to state 65
    LBRACKET        shift and go to state 66


state 46

    (23) update_body -> NAME SET . expression
    (24) update_body -> NAME SET . expression condition
    (25) expression -> . field EQUAL tree_expression
    (26) expression -> . expression COMMA field EQUAL tree_expression
    (31) field -> . NAME

    NAME            shift and go to state 56

    expression                     shift and go to state 67
    field                          shift and go to state 68

state 47

    (27) delete -> DELETE FROM NAME .
    (28) delete -> DELETE FROM NAME . condition
    (32) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 27 (delete -> DELETE FROM NAME .)
    WHERE           shift and go to state 40

    condition                      shift and go to state 69

state 48

    (9) create_body -> TABLE NAME LBRACKET . values RBRACKET
    (10) values -> . NAME type
    (11) values -> . values COMMA NAME type

    NAME            shift and go to state 70

    values                         shift and go to state 71

state 49

    (12) show -> SHOW CREATE TABLE NAME .

    ENDREQUEST      reduce using rule 12 (show -> SHOW CREATE TABLE NAME .)


state 50

    (32) condition -> WHERE tree_condition .

    ENDREQUEST      reduce using rule 32 (condition -> WHERE tree_condition .)


state 51

    (33) tree_condition -> tree_comparison . operator_condition tree_condition
    (34) tree_condition -> tree_comparison .
    (35) tree_condition -> tree_comparison . operator_condition tree_comparison
    (42) operator_condition -> . AND
    (43) operator_condition -> . OR

    ENDREQUEST      reduce using rule 34 (tree_condition -> tree_comparison .)
    AND             shift and go to state 73
    OR              shift and go to state 74

    operator_condition             shift and go to state 72

state 52

    (36) tree_comparison -> tree_expression . operator_comparison tree_expression
    (41) tree_expression -> tree_expression . operator_expression tree_expression
    (44) operator_comparison -> . EQUAL
    (45) operator_comparison -> . NOT_EQUAL
    (46) operator_comparison -> . GREATER_THAN
    (47) operator_comparison -> . LESS_THAN
    (48) operator_comparison -> . GREATER_THAN_OR_EQUAL
    (49) operator_comparison -> . LESS_THAN_OR_EQUAL
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    EQUAL           shift and go to state 77
    NOT_EQUAL       shift and go to state 78
    GREATER_THAN    shift and go to state 79
    LESS_THAN       shift and go to state 80
    GREATER_THAN_OR_EQUAL shift and go to state 81
    LESS_THAN_OR_EQUAL shift and go to state 82
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    operator_comparison            shift and go to state 75
    operator_expression            shift and go to state 76

state 53

    (37) tree_expression -> field .
    (38) tree_expression -> field . operator_expression tree_expression
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 37 (tree_expression -> field .)
    NOT_EQUAL       reduce using rule 37 (tree_expression -> field .)
    GREATER_THAN    reduce using rule 37 (tree_expression -> field .)
    LESS_THAN       reduce using rule 37 (tree_expression -> field .)
    GREATER_THAN_OR_EQUAL reduce using rule 37 (tree_expression -> field .)
    LESS_THAN_OR_EQUAL reduce using rule 37 (tree_expression -> field .)
    RBRACKET        reduce using rule 37 (tree_expression -> field .)
    AND             reduce using rule 37 (tree_expression -> field .)
    OR              reduce using rule 37 (tree_expression -> field .)
    ENDREQUEST      reduce using rule 37 (tree_expression -> field .)
    COMMA           reduce using rule 37 (tree_expression -> field .)
    WHERE           reduce using rule 37 (tree_expression -> field .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

  ! PLUS            [ reduce using rule 37 (tree_expression -> field .) ]
  ! MINUS           [ reduce using rule 37 (tree_expression -> field .) ]
  ! STAR            [ reduce using rule 37 (tree_expression -> field .) ]
  ! DIVISION        [ reduce using rule 37 (tree_expression -> field .) ]

    operator_expression            shift and go to state 83

state 54

    (39) tree_expression -> operator_expression . tree_expression
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    operator_expression            shift and go to state 54
    tree_expression                shift and go to state 84
    field                          shift and go to state 53

state 55

    (40) tree_expression -> LBRACKET . tree_expression RBRACKET
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    tree_expression                shift and go to state 85
    field                          shift and go to state 53
    operator_expression            shift and go to state 54

state 56

    (31) field -> NAME .

    PLUS            reduce using rule 31 (field -> NAME .)
    MINUS           reduce using rule 31 (field -> NAME .)
    STAR            reduce using rule 31 (field -> NAME .)
    DIVISION        reduce using rule 31 (field -> NAME .)
    EQUAL           reduce using rule 31 (field -> NAME .)
    NOT_EQUAL       reduce using rule 31 (field -> NAME .)
    GREATER_THAN    reduce using rule 31 (field -> NAME .)
    LESS_THAN       reduce using rule 31 (field -> NAME .)
    GREATER_THAN_OR_EQUAL reduce using rule 31 (field -> NAME .)
    LESS_THAN_OR_EQUAL reduce using rule 31 (field -> NAME .)
    RBRACKET        reduce using rule 31 (field -> NAME .)
    AND             reduce using rule 31 (field -> NAME .)
    OR              reduce using rule 31 (field -> NAME .)
    ENDREQUEST      reduce using rule 31 (field -> NAME .)
    COMMA           reduce using rule 31 (field -> NAME .)
    WHERE           reduce using rule 31 (field -> NAME .)


state 57

    (50) operator_expression -> PLUS .

    LBRACKET        reduce using rule 50 (operator_expression -> PLUS .)
    NAME            reduce using rule 50 (operator_expression -> PLUS .)
    PLUS            reduce using rule 50 (operator_expression -> PLUS .)
    MINUS           reduce using rule 50 (operator_expression -> PLUS .)
    STAR            reduce using rule 50 (operator_expression -> PLUS .)
    DIVISION        reduce using rule 50 (operator_expression -> PLUS .)


state 58

    (51) operator_expression -> MINUS .

    LBRACKET        reduce using rule 51 (operator_expression -> MINUS .)
    NAME            reduce using rule 51 (operator_expression -> MINUS .)
    PLUS            reduce using rule 51 (operator_expression -> MINUS .)
    MINUS           reduce using rule 51 (operator_expression -> MINUS .)
    STAR            reduce using rule 51 (operator_expression -> MINUS .)
    DIVISION        reduce using rule 51 (operator_expression -> MINUS .)


state 59

    (52) operator_expression -> STAR .

    LBRACKET        reduce using rule 52 (operator_expression -> STAR .)
    NAME            reduce using rule 52 (operator_expression -> STAR .)
    PLUS            reduce using rule 52 (operator_expression -> STAR .)
    MINUS           reduce using rule 52 (operator_expression -> STAR .)
    STAR            reduce using rule 52 (operator_expression -> STAR .)
    DIVISION        reduce using rule 52 (operator_expression -> STAR .)


state 60

    (53) operator_expression -> DIVISION .

    LBRACKET        reduce using rule 53 (operator_expression -> DIVISION .)
    NAME            reduce using rule 53 (operator_expression -> DIVISION .)
    PLUS            reduce using rule 53 (operator_expression -> DIVISION .)
    MINUS           reduce using rule 53 (operator_expression -> DIVISION .)
    STAR            reduce using rule 53 (operator_expression -> DIVISION .)
    DIVISION        reduce using rule 53 (operator_expression -> DIVISION .)


state 61

    (16) select_body -> fields FROM NAME .

    WHERE           reduce using rule 16 (select_body -> fields FROM NAME .)
    ENDREQUEST      reduce using rule 16 (select_body -> fields FROM NAME .)


state 62

    (30) fields -> fields COMMA NAME .

    FROM            reduce using rule 30 (fields -> fields COMMA NAME .)
    COMMA           reduce using rule 30 (fields -> fields COMMA NAME .)
    RBRACKET        reduce using rule 30 (fields -> fields COMMA NAME .)


state 63

    (17) select_body -> STAR COMMA fields . FROM NAME
    (30) fields -> fields . COMMA NAME

    FROM            shift and go to state 86
    COMMA           shift and go to state 42


state 64

    (18) select_body -> STAR FROM NAME .

    WHERE           reduce using rule 18 (select_body -> STAR FROM NAME .)
    ENDREQUEST      reduce using rule 18 (select_body -> STAR FROM NAME .)


state 65

    (20) insert_body -> INTO NAME VALUES . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 87


state 66

    (21) insert_body -> INTO NAME LBRACKET . fields RBRACKET VALUES LBRACKET fields RBRACKET
    (29) fields -> . NAME
    (30) fields -> . fields COMMA NAME

    NAME            shift and go to state 29

    fields                         shift and go to state 88

state 67

    (23) update_body -> NAME SET expression .
    (24) update_body -> NAME SET expression . condition
    (26) expression -> expression . COMMA field EQUAL tree_expression
    (32) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 23 (update_body -> NAME SET expression .)
    COMMA           shift and go to state 90
    WHERE           shift and go to state 40

    condition                      shift and go to state 89

state 68

    (25) expression -> field . EQUAL tree_expression

    EQUAL           shift and go to state 91


state 69

    (28) delete -> DELETE FROM NAME condition .

    ENDREQUEST      reduce using rule 28 (delete -> DELETE FROM NAME condition .)


state 70

    (10) values -> NAME . type
    (54) type -> . int
    (55) type -> . str
    (56) type -> . bol
    (57) type -> . bool
    (58) type -> . float

    int             shift and go to state 93
    str             shift and go to state 94
    bol             shift and go to state 95
    bool            shift and go to state 96
    float           shift and go to state 97

    type                           shift and go to state 92

state 71

    (9) create_body -> TABLE NAME LBRACKET values . RBRACKET
    (11) values -> values . COMMA NAME type

    RBRACKET        shift and go to state 98
    COMMA           shift and go to state 99


state 72

    (33) tree_condition -> tree_comparison operator_condition . tree_condition
    (35) tree_condition -> tree_comparison operator_condition . tree_comparison
    (33) tree_condition -> . tree_comparison operator_condition tree_condition
    (34) tree_condition -> . tree_comparison
    (35) tree_condition -> . tree_comparison operator_condition tree_comparison
    (36) tree_comparison -> . tree_expression operator_comparison tree_expression
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    tree_comparison                shift and go to state 100
    tree_condition                 shift and go to state 101
    tree_expression                shift and go to state 52
    field                          shift and go to state 53
    operator_expression            shift and go to state 54

state 73

    (42) operator_condition -> AND .

    LBRACKET        reduce using rule 42 (operator_condition -> AND .)
    NAME            reduce using rule 42 (operator_condition -> AND .)
    PLUS            reduce using rule 42 (operator_condition -> AND .)
    MINUS           reduce using rule 42 (operator_condition -> AND .)
    STAR            reduce using rule 42 (operator_condition -> AND .)
    DIVISION        reduce using rule 42 (operator_condition -> AND .)


state 74

    (43) operator_condition -> OR .

    LBRACKET        reduce using rule 43 (operator_condition -> OR .)
    NAME            reduce using rule 43 (operator_condition -> OR .)
    PLUS            reduce using rule 43 (operator_condition -> OR .)
    MINUS           reduce using rule 43 (operator_condition -> OR .)
    STAR            reduce using rule 43 (operator_condition -> OR .)
    DIVISION        reduce using rule 43 (operator_condition -> OR .)


state 75

    (36) tree_comparison -> tree_expression operator_comparison . tree_expression
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    tree_expression                shift and go to state 102
    field                          shift and go to state 53
    operator_expression            shift and go to state 54

state 76

    (41) tree_expression -> tree_expression operator_expression . tree_expression
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    tree_expression                shift and go to state 103
    operator_expression            shift and go to state 54
    field                          shift and go to state 53

state 77

    (44) operator_comparison -> EQUAL .

    LBRACKET        reduce using rule 44 (operator_comparison -> EQUAL .)
    NAME            reduce using rule 44 (operator_comparison -> EQUAL .)
    PLUS            reduce using rule 44 (operator_comparison -> EQUAL .)
    MINUS           reduce using rule 44 (operator_comparison -> EQUAL .)
    STAR            reduce using rule 44 (operator_comparison -> EQUAL .)
    DIVISION        reduce using rule 44 (operator_comparison -> EQUAL .)


state 78

    (45) operator_comparison -> NOT_EQUAL .

    LBRACKET        reduce using rule 45 (operator_comparison -> NOT_EQUAL .)
    NAME            reduce using rule 45 (operator_comparison -> NOT_EQUAL .)
    PLUS            reduce using rule 45 (operator_comparison -> NOT_EQUAL .)
    MINUS           reduce using rule 45 (operator_comparison -> NOT_EQUAL .)
    STAR            reduce using rule 45 (operator_comparison -> NOT_EQUAL .)
    DIVISION        reduce using rule 45 (operator_comparison -> NOT_EQUAL .)


state 79

    (46) operator_comparison -> GREATER_THAN .

    LBRACKET        reduce using rule 46 (operator_comparison -> GREATER_THAN .)
    NAME            reduce using rule 46 (operator_comparison -> GREATER_THAN .)
    PLUS            reduce using rule 46 (operator_comparison -> GREATER_THAN .)
    MINUS           reduce using rule 46 (operator_comparison -> GREATER_THAN .)
    STAR            reduce using rule 46 (operator_comparison -> GREATER_THAN .)
    DIVISION        reduce using rule 46 (operator_comparison -> GREATER_THAN .)


state 80

    (47) operator_comparison -> LESS_THAN .

    LBRACKET        reduce using rule 47 (operator_comparison -> LESS_THAN .)
    NAME            reduce using rule 47 (operator_comparison -> LESS_THAN .)
    PLUS            reduce using rule 47 (operator_comparison -> LESS_THAN .)
    MINUS           reduce using rule 47 (operator_comparison -> LESS_THAN .)
    STAR            reduce using rule 47 (operator_comparison -> LESS_THAN .)
    DIVISION        reduce using rule 47 (operator_comparison -> LESS_THAN .)


state 81

    (48) operator_comparison -> GREATER_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 48 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    NAME            reduce using rule 48 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    PLUS            reduce using rule 48 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    MINUS           reduce using rule 48 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    STAR            reduce using rule 48 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 48 (operator_comparison -> GREATER_THAN_OR_EQUAL .)


state 82

    (49) operator_comparison -> LESS_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 49 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    NAME            reduce using rule 49 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    PLUS            reduce using rule 49 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    MINUS           reduce using rule 49 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    STAR            reduce using rule 49 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 49 (operator_comparison -> LESS_THAN_OR_EQUAL .)


state 83

    (38) tree_expression -> field operator_expression . tree_expression
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    field                          shift and go to state 53
    operator_expression            shift and go to state 54
    tree_expression                shift and go to state 104

state 84

    (39) tree_expression -> operator_expression tree_expression .
    (41) tree_expression -> tree_expression . operator_expression tree_expression
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN       reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    RBRACKET        reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    AND             reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    OR              reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    COMMA           reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    WHERE           reduce using rule 39 (tree_expression -> operator_expression tree_expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

  ! PLUS            [ reduce using rule 39 (tree_expression -> operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 39 (tree_expression -> operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 39 (tree_expression -> operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 39 (tree_expression -> operator_expression tree_expression .) ]

    operator_expression            shift and go to state 76

state 85

    (40) tree_expression -> LBRACKET tree_expression . RBRACKET
    (41) tree_expression -> tree_expression . operator_expression tree_expression
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    RBRACKET        shift and go to state 105
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    operator_expression            shift and go to state 76

state 86

    (17) select_body -> STAR COMMA fields FROM . NAME

    NAME            shift and go to state 106


state 87

    (20) insert_body -> INTO NAME VALUES LBRACKET . fields RBRACKET
    (29) fields -> . NAME
    (30) fields -> . fields COMMA NAME

    NAME            shift and go to state 29

    fields                         shift and go to state 107

state 88

    (21) insert_body -> INTO NAME LBRACKET fields . RBRACKET VALUES LBRACKET fields RBRACKET
    (30) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 108
    COMMA           shift and go to state 42


state 89

    (24) update_body -> NAME SET expression condition .

    ENDREQUEST      reduce using rule 24 (update_body -> NAME SET expression condition .)


state 90

    (26) expression -> expression COMMA . field EQUAL tree_expression
    (31) field -> . NAME

    NAME            shift and go to state 56

    field                          shift and go to state 109

state 91

    (25) expression -> field EQUAL . tree_expression
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    field                          shift and go to state 53
    tree_expression                shift and go to state 110
    operator_expression            shift and go to state 54

state 92

    (10) values -> NAME type .

    RBRACKET        reduce using rule 10 (values -> NAME type .)
    COMMA           reduce using rule 10 (values -> NAME type .)


state 93

    (54) type -> int .

    RBRACKET        reduce using rule 54 (type -> int .)
    COMMA           reduce using rule 54 (type -> int .)


state 94

    (55) type -> str .

    RBRACKET        reduce using rule 55 (type -> str .)
    COMMA           reduce using rule 55 (type -> str .)


state 95

    (56) type -> bol .

    RBRACKET        reduce using rule 56 (type -> bol .)
    COMMA           reduce using rule 56 (type -> bol .)


state 96

    (57) type -> bool .

    RBRACKET        reduce using rule 57 (type -> bool .)
    COMMA           reduce using rule 57 (type -> bool .)


state 97

    (58) type -> float .

    RBRACKET        reduce using rule 58 (type -> float .)
    COMMA           reduce using rule 58 (type -> float .)


state 98

    (9) create_body -> TABLE NAME LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 9 (create_body -> TABLE NAME LBRACKET values RBRACKET .)


state 99

    (11) values -> values COMMA . NAME type

    NAME            shift and go to state 111


state 100

    (35) tree_condition -> tree_comparison operator_condition tree_comparison .
    (33) tree_condition -> tree_comparison . operator_condition tree_condition
    (34) tree_condition -> tree_comparison .
    (35) tree_condition -> tree_comparison . operator_condition tree_comparison
    (42) operator_condition -> . AND
    (43) operator_condition -> . OR

  ! reduce/reduce conflict for ENDREQUEST resolved using rule 34 (tree_condition -> tree_comparison .)
    ENDREQUEST      reduce using rule 34 (tree_condition -> tree_comparison .)
    AND             shift and go to state 73
    OR              shift and go to state 74

  ! ENDREQUEST      [ reduce using rule 35 (tree_condition -> tree_comparison operator_condition tree_comparison .) ]

    operator_condition             shift and go to state 72

state 101

    (33) tree_condition -> tree_comparison operator_condition tree_condition .

    ENDREQUEST      reduce using rule 33 (tree_condition -> tree_comparison operator_condition tree_condition .)


state 102

    (36) tree_comparison -> tree_expression operator_comparison tree_expression .
    (41) tree_expression -> tree_expression . operator_expression tree_expression
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    AND             reduce using rule 36 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    OR              reduce using rule 36 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    ENDREQUEST      reduce using rule 36 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    operator_expression            shift and go to state 76

state 103

    (41) tree_expression -> tree_expression operator_expression tree_expression .
    (41) tree_expression -> tree_expression . operator_expression tree_expression
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN       reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    RBRACKET        reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    AND             reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    OR              reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    COMMA           reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    WHERE           reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

  ! PLUS            [ reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 41 (tree_expression -> tree_expression operator_expression tree_expression .) ]

    operator_expression            shift and go to state 76

state 104

    (38) tree_expression -> field operator_expression tree_expression .
    (41) tree_expression -> tree_expression . operator_expression tree_expression
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    LESS_THAN       reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    RBRACKET        reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    AND             reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    OR              reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    COMMA           reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    WHERE           reduce using rule 38 (tree_expression -> field operator_expression tree_expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

  ! PLUS            [ reduce using rule 38 (tree_expression -> field operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 38 (tree_expression -> field operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 38 (tree_expression -> field operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 38 (tree_expression -> field operator_expression tree_expression .) ]

    operator_expression            shift and go to state 76

state 105

    (40) tree_expression -> LBRACKET tree_expression RBRACKET .

    EQUAL           reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    NOT_EQUAL       reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN    reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN       reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN_OR_EQUAL reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    PLUS            reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    MINUS           reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    STAR            reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    DIVISION        reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RBRACKET        reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    AND             reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    OR              reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    ENDREQUEST      reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    COMMA           reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    WHERE           reduce using rule 40 (tree_expression -> LBRACKET tree_expression RBRACKET .)


state 106

    (17) select_body -> STAR COMMA fields FROM NAME .

    WHERE           reduce using rule 17 (select_body -> STAR COMMA fields FROM NAME .)
    ENDREQUEST      reduce using rule 17 (select_body -> STAR COMMA fields FROM NAME .)


state 107

    (20) insert_body -> INTO NAME VALUES LBRACKET fields . RBRACKET
    (30) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 112
    COMMA           shift and go to state 42


state 108

    (21) insert_body -> INTO NAME LBRACKET fields RBRACKET . VALUES LBRACKET fields RBRACKET

    VALUES          shift and go to state 113


state 109

    (26) expression -> expression COMMA field . EQUAL tree_expression

    EQUAL           shift and go to state 114


state 110

    (25) expression -> field EQUAL tree_expression .
    (41) tree_expression -> tree_expression . operator_expression tree_expression
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    COMMA           reduce using rule 25 (expression -> field EQUAL tree_expression .)
    WHERE           reduce using rule 25 (expression -> field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 25 (expression -> field EQUAL tree_expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    operator_expression            shift and go to state 76

state 111

    (11) values -> values COMMA NAME . type
    (54) type -> . int
    (55) type -> . str
    (56) type -> . bol
    (57) type -> . bool
    (58) type -> . float

    int             shift and go to state 93
    str             shift and go to state 94
    bol             shift and go to state 95
    bool            shift and go to state 96
    float           shift and go to state 97

    type                           shift and go to state 115

state 112

    (20) insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 20 (insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET .)


state 113

    (21) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 116


state 114

    (26) expression -> expression COMMA field EQUAL . tree_expression
    (37) tree_expression -> . field
    (38) tree_expression -> . field operator_expression tree_expression
    (39) tree_expression -> . operator_expression tree_expression
    (40) tree_expression -> . LBRACKET tree_expression RBRACKET
    (41) tree_expression -> . tree_expression operator_expression tree_expression
    (31) field -> . NAME
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 55
    NAME            shift and go to state 56
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    field                          shift and go to state 53
    tree_expression                shift and go to state 117
    operator_expression            shift and go to state 54

state 115

    (11) values -> values COMMA NAME type .

    RBRACKET        reduce using rule 11 (values -> values COMMA NAME type .)
    COMMA           reduce using rule 11 (values -> values COMMA NAME type .)


state 116

    (21) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET . fields RBRACKET
    (29) fields -> . NAME
    (30) fields -> . fields COMMA NAME

    NAME            shift and go to state 29

    fields                         shift and go to state 118

state 117

    (26) expression -> expression COMMA field EQUAL tree_expression .
    (41) tree_expression -> tree_expression . operator_expression tree_expression
    (50) operator_expression -> . PLUS
    (51) operator_expression -> . MINUS
    (52) operator_expression -> . STAR
    (53) operator_expression -> . DIVISION

    COMMA           reduce using rule 26 (expression -> expression COMMA field EQUAL tree_expression .)
    WHERE           reduce using rule 26 (expression -> expression COMMA field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 26 (expression -> expression COMMA field EQUAL tree_expression .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    STAR            shift and go to state 59
    DIVISION        shift and go to state 60

    operator_expression            shift and go to state 76

state 118

    (21) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields . RBRACKET
    (30) fields -> fields . COMMA NAME

    RBRACKET        shift and go to state 119
    COMMA           shift and go to state 42


state 119

    (21) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 21 (insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 53 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 53 resolved as shift
WARNING: shift/reduce conflict for STAR in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 53 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for STAR in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for STAR in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for STAR in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 104 resolved as shift
WARNING: reduce/reduce conflict in state 100 resolved using rule (tree_condition -> tree_comparison)
WARNING: rejected rule (tree_condition -> tree_comparison operator_condition tree_comparison) in state 100
WARNING: Rule (tree_condition -> tree_comparison operator_condition tree_comparison) is never reduced
