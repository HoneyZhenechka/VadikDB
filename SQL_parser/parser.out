Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> start
Rule 1     start -> create ENDREQUEST
Rule 2     start -> show ENDREQUEST
Rule 3     start -> drop ENDREQUEST
Rule 4     start -> tree_selects ENDREQUEST
Rule 5     start -> insert ENDREQUEST
Rule 6     start -> update ENDREQUEST
Rule 7     start -> delete ENDREQUEST
Rule 8     create -> CREATE create_body
Rule 9     create_body -> TABLE NAME LBRACKET variables RBRACKET
Rule 10    variables -> NAME type
Rule 11    variables -> variables COMMA NAME type
Rule 12    show -> SHOW CREATE TABLE NAME
Rule 13    drop -> DROP TABLE NAME
Rule 14    join -> JOIN
Rule 15    join -> LEFT OUTER JOIN
Rule 16    join -> RIGHT OUTER JOIN
Rule 17    join_right_table -> NAME ON field EQUAL field
Rule 18    join_right_table -> NAME USING LBRACKET fields RBRACKET
Rule 19    join_right_table -> NAME
Rule 20    union -> UNION
Rule 21    union -> UNION ALL
Rule 22    intersect -> INTERSECT
Rule 23    tree_selects -> nested_selects
Rule 24    nested_selects -> select
Rule 25    nested_selects -> select union nested_selects
Rule 26    nested_selects -> select intersect nested_selects
Rule 27    select -> SELECT select_body join join_right_table
Rule 28    select -> SELECT select_body join join_right_table condition
Rule 29    select -> SELECT select_body
Rule 30    select -> SELECT select_body condition
Rule 31    select_body -> fields FROM NAME
Rule 32    select_body -> STAR COMMA fields FROM NAME
Rule 33    select_body -> STAR FROM NAME
Rule 34    insert -> INSERT insert_body
Rule 35    insert_body -> INTO NAME VALUES LBRACKET values RBRACKET
Rule 36    insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET
Rule 37    update -> UPDATE update_body
Rule 38    update_body -> NAME SET expression
Rule 39    update_body -> NAME SET expression condition
Rule 40    expression -> field EQUAL tree_expression
Rule 41    expression -> expression COMMA field EQUAL tree_expression
Rule 42    delete -> DELETE FROM NAME
Rule 43    delete -> DELETE FROM NAME condition
Rule 44    values -> value
Rule 45    values -> values COMMA value
Rule 46    value -> NAME
Rule 47    value -> QUOTE NAME QUOTE
Rule 48    fields -> field
Rule 49    fields -> fields COMMA field
Rule 50    field -> NAME
Rule 51    field -> NAME DOT NAME
Rule 52    condition -> WHERE tree_condition
Rule 53    tree_condition -> tree_comparison operator_condition tree_condition
Rule 54    tree_condition -> tree_comparison
Rule 55    tree_comparison -> tree_expression operator_comparison tree_expression
Rule 56    tree_expression -> value
Rule 57    tree_expression -> value operator_expression tree_expression
Rule 58    tree_expression -> operator_expression tree_expression
Rule 59    tree_expression -> LBRACKET tree_expression RBRACKET
Rule 60    tree_expression -> tree_expression operator_expression tree_expression
Rule 61    operator_condition -> AND
Rule 62    operator_condition -> OR
Rule 63    operator_comparison -> EQUAL
Rule 64    operator_comparison -> NOT_EQUAL
Rule 65    operator_comparison -> GREATER_THAN
Rule 66    operator_comparison -> LESS_THAN
Rule 67    operator_comparison -> GREATER_THAN_OR_EQUAL
Rule 68    operator_comparison -> LESS_THAN_OR_EQUAL
Rule 69    operator_expression -> PLUS
Rule 70    operator_expression -> MINUS
Rule 71    operator_expression -> STAR
Rule 72    operator_expression -> DIVISION
Rule 73    type -> int
Rule 74    type -> str
Rule 75    type -> bol
Rule 76    type -> bool
Rule 77    type -> float

Terminals, with rules where they appear

ALL                  : 21
AND                  : 61
COMMA                : 11 32 41 45 49
CREATE               : 8 12
DELETE               : 42 43
DIVISION             : 72
DOT                  : 51
DROP                 : 13
ENDREQUEST           : 1 2 3 4 5 6 7
EQUAL                : 17 40 41 63
FROM                 : 31 32 33 42 43
GREATER_THAN         : 65
GREATER_THAN_OR_EQUAL : 67
INSERT               : 34
INTERSECT            : 22
INTO                 : 35 36
JOIN                 : 14 15 16
LBRACKET             : 9 18 35 36 36 59
LEFT                 : 15
LESS_THAN            : 66
LESS_THAN_OR_EQUAL   : 68
MINUS                : 70
NAME                 : 9 10 11 12 13 17 18 19 31 32 33 35 36 38 39 42 43 46 47 50 51 51
NOT                  : 
NOT_EQUAL            : 64
ON                   : 17
OR                   : 62
OUTER                : 15 16
PLUS                 : 69
QUOTE                : 47 47
RBRACKET             : 9 18 35 36 36 59
RIGHT                : 16
SELECT               : 27 28 29 30
SET                  : 38 39
SHOW                 : 12
STAR                 : 32 33 71
TABLE                : 9 12 13
UNION                : 20 21
UPDATE               : 37
USING                : 18
VALUES               : 35 36
WHERE                : 52
bol                  : 75
bool                 : 76
error                : 
float                : 77
int                  : 73
str                  : 74

Nonterminals, with rules where they appear

condition            : 28 30 39 43
create               : 1
create_body          : 8
delete               : 7
drop                 : 3
expression           : 38 39 41
field                : 17 17 40 41 48 49
fields               : 18 31 32 36 49
insert               : 5
insert_body          : 34
intersect            : 26
join                 : 27 28
join_right_table     : 27 28
nested_selects       : 23 25 26
operator_comparison  : 55
operator_condition   : 53
operator_expression  : 57 58 60
select               : 24 25 26
select_body          : 27 28 29 30
show                 : 2
start                : 0
tree_comparison      : 53 54
tree_condition       : 52 53
tree_expression      : 40 41 55 55 57 58 59 60 60
tree_selects         : 4
type                 : 10 11
union                : 25
update               : 6
update_body          : 37
value                : 44 45 56 57
values               : 35 36 45
variables            : 9 11

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . create ENDREQUEST
    (2) start -> . show ENDREQUEST
    (3) start -> . drop ENDREQUEST
    (4) start -> . tree_selects ENDREQUEST
    (5) start -> . insert ENDREQUEST
    (6) start -> . update ENDREQUEST
    (7) start -> . delete ENDREQUEST
    (8) create -> . CREATE create_body
    (12) show -> . SHOW CREATE TABLE NAME
    (13) drop -> . DROP TABLE NAME
    (23) tree_selects -> . nested_selects
    (34) insert -> . INSERT insert_body
    (37) update -> . UPDATE update_body
    (42) delete -> . DELETE FROM NAME
    (43) delete -> . DELETE FROM NAME condition
    (24) nested_selects -> . select
    (25) nested_selects -> . select union nested_selects
    (26) nested_selects -> . select intersect nested_selects
    (27) select -> . SELECT select_body join join_right_table
    (28) select -> . SELECT select_body join join_right_table condition
    (29) select -> . SELECT select_body
    (30) select -> . SELECT select_body condition

    CREATE          shift and go to state 9
    SHOW            shift and go to state 10
    DROP            shift and go to state 11
    INSERT          shift and go to state 13
    UPDATE          shift and go to state 14
    DELETE          shift and go to state 15
    SELECT          shift and go to state 17

    start                          shift and go to state 1
    create                         shift and go to state 2
    show                           shift and go to state 3
    drop                           shift and go to state 4
    tree_selects                   shift and go to state 5
    insert                         shift and go to state 6
    update                         shift and go to state 7
    delete                         shift and go to state 8
    nested_selects                 shift and go to state 12
    select                         shift and go to state 16

state 1

    (0) S' -> start .



state 2

    (1) start -> create . ENDREQUEST

    ENDREQUEST      shift and go to state 18


state 3

    (2) start -> show . ENDREQUEST

    ENDREQUEST      shift and go to state 19


state 4

    (3) start -> drop . ENDREQUEST

    ENDREQUEST      shift and go to state 20


state 5

    (4) start -> tree_selects . ENDREQUEST

    ENDREQUEST      shift and go to state 21


state 6

    (5) start -> insert . ENDREQUEST

    ENDREQUEST      shift and go to state 22


state 7

    (6) start -> update . ENDREQUEST

    ENDREQUEST      shift and go to state 23


state 8

    (7) start -> delete . ENDREQUEST

    ENDREQUEST      shift and go to state 24


state 9

    (8) create -> CREATE . create_body
    (9) create_body -> . TABLE NAME LBRACKET variables RBRACKET

    TABLE           shift and go to state 26

    create_body                    shift and go to state 25

state 10

    (12) show -> SHOW . CREATE TABLE NAME

    CREATE          shift and go to state 27


state 11

    (13) drop -> DROP . TABLE NAME

    TABLE           shift and go to state 28


state 12

    (23) tree_selects -> nested_selects .

    ENDREQUEST      reduce using rule 23 (tree_selects -> nested_selects .)


state 13

    (34) insert -> INSERT . insert_body
    (35) insert_body -> . INTO NAME VALUES LBRACKET values RBRACKET
    (36) insert_body -> . INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    INTO            shift and go to state 30

    insert_body                    shift and go to state 29

state 14

    (37) update -> UPDATE . update_body
    (38) update_body -> . NAME SET expression
    (39) update_body -> . NAME SET expression condition

    NAME            shift and go to state 32

    update_body                    shift and go to state 31

state 15

    (42) delete -> DELETE . FROM NAME
    (43) delete -> DELETE . FROM NAME condition

    FROM            shift and go to state 33


state 16

    (24) nested_selects -> select .
    (25) nested_selects -> select . union nested_selects
    (26) nested_selects -> select . intersect nested_selects
    (20) union -> . UNION
    (21) union -> . UNION ALL
    (22) intersect -> . INTERSECT

    ENDREQUEST      reduce using rule 24 (nested_selects -> select .)
    UNION           shift and go to state 36
    INTERSECT       shift and go to state 37

    union                          shift and go to state 34
    intersect                      shift and go to state 35

state 17

    (27) select -> SELECT . select_body join join_right_table
    (28) select -> SELECT . select_body join join_right_table condition
    (29) select -> SELECT . select_body
    (30) select -> SELECT . select_body condition
    (31) select_body -> . fields FROM NAME
    (32) select_body -> . STAR COMMA fields FROM NAME
    (33) select_body -> . STAR FROM NAME
    (48) fields -> . field
    (49) fields -> . fields COMMA field
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    STAR            shift and go to state 41
    NAME            shift and go to state 40

    select_body                    shift and go to state 38
    fields                         shift and go to state 39
    field                          shift and go to state 42

state 18

    (1) start -> create ENDREQUEST .

    $end            reduce using rule 1 (start -> create ENDREQUEST .)


state 19

    (2) start -> show ENDREQUEST .

    $end            reduce using rule 2 (start -> show ENDREQUEST .)


state 20

    (3) start -> drop ENDREQUEST .

    $end            reduce using rule 3 (start -> drop ENDREQUEST .)


state 21

    (4) start -> tree_selects ENDREQUEST .

    $end            reduce using rule 4 (start -> tree_selects ENDREQUEST .)


state 22

    (5) start -> insert ENDREQUEST .

    $end            reduce using rule 5 (start -> insert ENDREQUEST .)


state 23

    (6) start -> update ENDREQUEST .

    $end            reduce using rule 6 (start -> update ENDREQUEST .)


state 24

    (7) start -> delete ENDREQUEST .

    $end            reduce using rule 7 (start -> delete ENDREQUEST .)


state 25

    (8) create -> CREATE create_body .

    ENDREQUEST      reduce using rule 8 (create -> CREATE create_body .)


state 26

    (9) create_body -> TABLE . NAME LBRACKET variables RBRACKET

    NAME            shift and go to state 43


state 27

    (12) show -> SHOW CREATE . TABLE NAME

    TABLE           shift and go to state 44


state 28

    (13) drop -> DROP TABLE . NAME

    NAME            shift and go to state 45


state 29

    (34) insert -> INSERT insert_body .

    ENDREQUEST      reduce using rule 34 (insert -> INSERT insert_body .)


state 30

    (35) insert_body -> INTO . NAME VALUES LBRACKET values RBRACKET
    (36) insert_body -> INTO . NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    NAME            shift and go to state 46


state 31

    (37) update -> UPDATE update_body .

    ENDREQUEST      reduce using rule 37 (update -> UPDATE update_body .)


state 32

    (38) update_body -> NAME . SET expression
    (39) update_body -> NAME . SET expression condition

    SET             shift and go to state 47


state 33

    (42) delete -> DELETE FROM . NAME
    (43) delete -> DELETE FROM . NAME condition

    NAME            shift and go to state 48


state 34

    (25) nested_selects -> select union . nested_selects
    (24) nested_selects -> . select
    (25) nested_selects -> . select union nested_selects
    (26) nested_selects -> . select intersect nested_selects
    (27) select -> . SELECT select_body join join_right_table
    (28) select -> . SELECT select_body join join_right_table condition
    (29) select -> . SELECT select_body
    (30) select -> . SELECT select_body condition

    SELECT          shift and go to state 17

    select                         shift and go to state 16
    nested_selects                 shift and go to state 49

state 35

    (26) nested_selects -> select intersect . nested_selects
    (24) nested_selects -> . select
    (25) nested_selects -> . select union nested_selects
    (26) nested_selects -> . select intersect nested_selects
    (27) select -> . SELECT select_body join join_right_table
    (28) select -> . SELECT select_body join join_right_table condition
    (29) select -> . SELECT select_body
    (30) select -> . SELECT select_body condition

    SELECT          shift and go to state 17

    select                         shift and go to state 16
    nested_selects                 shift and go to state 50

state 36

    (20) union -> UNION .
    (21) union -> UNION . ALL

    SELECT          reduce using rule 20 (union -> UNION .)
    ALL             shift and go to state 51


state 37

    (22) intersect -> INTERSECT .

    SELECT          reduce using rule 22 (intersect -> INTERSECT .)


state 38

    (27) select -> SELECT select_body . join join_right_table
    (28) select -> SELECT select_body . join join_right_table condition
    (29) select -> SELECT select_body .
    (30) select -> SELECT select_body . condition
    (14) join -> . JOIN
    (15) join -> . LEFT OUTER JOIN
    (16) join -> . RIGHT OUTER JOIN
    (52) condition -> . WHERE tree_condition

    UNION           reduce using rule 29 (select -> SELECT select_body .)
    INTERSECT       reduce using rule 29 (select -> SELECT select_body .)
    ENDREQUEST      reduce using rule 29 (select -> SELECT select_body .)
    JOIN            shift and go to state 54
    LEFT            shift and go to state 55
    RIGHT           shift and go to state 56
    WHERE           shift and go to state 57

    join                           shift and go to state 52
    condition                      shift and go to state 53

state 39

    (31) select_body -> fields . FROM NAME
    (49) fields -> fields . COMMA field

    FROM            shift and go to state 58
    COMMA           shift and go to state 59


state 40

    (50) field -> NAME .
    (51) field -> NAME . DOT NAME

    FROM            reduce using rule 50 (field -> NAME .)
    COMMA           reduce using rule 50 (field -> NAME .)
    EQUAL           reduce using rule 50 (field -> NAME .)
    RBRACKET        reduce using rule 50 (field -> NAME .)
    WHERE           reduce using rule 50 (field -> NAME .)
    UNION           reduce using rule 50 (field -> NAME .)
    INTERSECT       reduce using rule 50 (field -> NAME .)
    ENDREQUEST      reduce using rule 50 (field -> NAME .)
    DOT             shift and go to state 60


state 41

    (32) select_body -> STAR . COMMA fields FROM NAME
    (33) select_body -> STAR . FROM NAME

    COMMA           shift and go to state 61
    FROM            shift and go to state 62


state 42

    (48) fields -> field .

    FROM            reduce using rule 48 (fields -> field .)
    COMMA           reduce using rule 48 (fields -> field .)
    RBRACKET        reduce using rule 48 (fields -> field .)


state 43

    (9) create_body -> TABLE NAME . LBRACKET variables RBRACKET

    LBRACKET        shift and go to state 63


state 44

    (12) show -> SHOW CREATE TABLE . NAME

    NAME            shift and go to state 64


state 45

    (13) drop -> DROP TABLE NAME .

    ENDREQUEST      reduce using rule 13 (drop -> DROP TABLE NAME .)


state 46

    (35) insert_body -> INTO NAME . VALUES LBRACKET values RBRACKET
    (36) insert_body -> INTO NAME . LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    VALUES          shift and go to state 65
    LBRACKET        shift and go to state 66


state 47

    (38) update_body -> NAME SET . expression
    (39) update_body -> NAME SET . expression condition
    (40) expression -> . field EQUAL tree_expression
    (41) expression -> . expression COMMA field EQUAL tree_expression
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    NAME            shift and go to state 40

    expression                     shift and go to state 67
    field                          shift and go to state 68

state 48

    (42) delete -> DELETE FROM NAME .
    (43) delete -> DELETE FROM NAME . condition
    (52) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 42 (delete -> DELETE FROM NAME .)
    WHERE           shift and go to state 57

    condition                      shift and go to state 69

state 49

    (25) nested_selects -> select union nested_selects .

    ENDREQUEST      reduce using rule 25 (nested_selects -> select union nested_selects .)


state 50

    (26) nested_selects -> select intersect nested_selects .

    ENDREQUEST      reduce using rule 26 (nested_selects -> select intersect nested_selects .)


state 51

    (21) union -> UNION ALL .

    SELECT          reduce using rule 21 (union -> UNION ALL .)


state 52

    (27) select -> SELECT select_body join . join_right_table
    (28) select -> SELECT select_body join . join_right_table condition
    (17) join_right_table -> . NAME ON field EQUAL field
    (18) join_right_table -> . NAME USING LBRACKET fields RBRACKET
    (19) join_right_table -> . NAME

    NAME            shift and go to state 71

    join_right_table               shift and go to state 70

state 53

    (30) select -> SELECT select_body condition .

    UNION           reduce using rule 30 (select -> SELECT select_body condition .)
    INTERSECT       reduce using rule 30 (select -> SELECT select_body condition .)
    ENDREQUEST      reduce using rule 30 (select -> SELECT select_body condition .)


state 54

    (14) join -> JOIN .

    NAME            reduce using rule 14 (join -> JOIN .)


state 55

    (15) join -> LEFT . OUTER JOIN

    OUTER           shift and go to state 72


state 56

    (16) join -> RIGHT . OUTER JOIN

    OUTER           shift and go to state 73


state 57

    (52) condition -> WHERE . tree_condition
    (53) tree_condition -> . tree_comparison operator_condition tree_condition
    (54) tree_condition -> . tree_comparison
    (55) tree_comparison -> . tree_expression operator_comparison tree_expression
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    tree_condition                 shift and go to state 74
    tree_comparison                shift and go to state 75
    tree_expression                shift and go to state 76
    value                          shift and go to state 77
    operator_expression            shift and go to state 78

state 58

    (31) select_body -> fields FROM . NAME

    NAME            shift and go to state 86


state 59

    (49) fields -> fields COMMA . field
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    NAME            shift and go to state 40

    field                          shift and go to state 87

state 60

    (51) field -> NAME DOT . NAME

    NAME            shift and go to state 88


state 61

    (32) select_body -> STAR COMMA . fields FROM NAME
    (48) fields -> . field
    (49) fields -> . fields COMMA field
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    NAME            shift and go to state 40

    fields                         shift and go to state 89
    field                          shift and go to state 42

state 62

    (33) select_body -> STAR FROM . NAME

    NAME            shift and go to state 90


state 63

    (9) create_body -> TABLE NAME LBRACKET . variables RBRACKET
    (10) variables -> . NAME type
    (11) variables -> . variables COMMA NAME type

    NAME            shift and go to state 91

    variables                      shift and go to state 92

state 64

    (12) show -> SHOW CREATE TABLE NAME .

    ENDREQUEST      reduce using rule 12 (show -> SHOW CREATE TABLE NAME .)


state 65

    (35) insert_body -> INTO NAME VALUES . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 93


state 66

    (36) insert_body -> INTO NAME LBRACKET . fields RBRACKET VALUES LBRACKET values RBRACKET
    (48) fields -> . field
    (49) fields -> . fields COMMA field
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    NAME            shift and go to state 40

    fields                         shift and go to state 94
    field                          shift and go to state 42

state 67

    (38) update_body -> NAME SET expression .
    (39) update_body -> NAME SET expression . condition
    (41) expression -> expression . COMMA field EQUAL tree_expression
    (52) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 38 (update_body -> NAME SET expression .)
    COMMA           shift and go to state 96
    WHERE           shift and go to state 57

    condition                      shift and go to state 95

state 68

    (40) expression -> field . EQUAL tree_expression

    EQUAL           shift and go to state 97


state 69

    (43) delete -> DELETE FROM NAME condition .

    ENDREQUEST      reduce using rule 43 (delete -> DELETE FROM NAME condition .)


state 70

    (27) select -> SELECT select_body join join_right_table .
    (28) select -> SELECT select_body join join_right_table . condition
    (52) condition -> . WHERE tree_condition

    UNION           reduce using rule 27 (select -> SELECT select_body join join_right_table .)
    INTERSECT       reduce using rule 27 (select -> SELECT select_body join join_right_table .)
    ENDREQUEST      reduce using rule 27 (select -> SELECT select_body join join_right_table .)
    WHERE           shift and go to state 57

    condition                      shift and go to state 98

state 71

    (17) join_right_table -> NAME . ON field EQUAL field
    (18) join_right_table -> NAME . USING LBRACKET fields RBRACKET
    (19) join_right_table -> NAME .

    ON              shift and go to state 99
    USING           shift and go to state 100
    WHERE           reduce using rule 19 (join_right_table -> NAME .)
    UNION           reduce using rule 19 (join_right_table -> NAME .)
    INTERSECT       reduce using rule 19 (join_right_table -> NAME .)
    ENDREQUEST      reduce using rule 19 (join_right_table -> NAME .)


state 72

    (15) join -> LEFT OUTER . JOIN

    JOIN            shift and go to state 101


state 73

    (16) join -> RIGHT OUTER . JOIN

    JOIN            shift and go to state 102


state 74

    (52) condition -> WHERE tree_condition .

    UNION           reduce using rule 52 (condition -> WHERE tree_condition .)
    INTERSECT       reduce using rule 52 (condition -> WHERE tree_condition .)
    ENDREQUEST      reduce using rule 52 (condition -> WHERE tree_condition .)


state 75

    (53) tree_condition -> tree_comparison . operator_condition tree_condition
    (54) tree_condition -> tree_comparison .
    (61) operator_condition -> . AND
    (62) operator_condition -> . OR

    UNION           reduce using rule 54 (tree_condition -> tree_comparison .)
    INTERSECT       reduce using rule 54 (tree_condition -> tree_comparison .)
    ENDREQUEST      reduce using rule 54 (tree_condition -> tree_comparison .)
    AND             shift and go to state 104
    OR              shift and go to state 105

    operator_condition             shift and go to state 103

state 76

    (55) tree_comparison -> tree_expression . operator_comparison tree_expression
    (60) tree_expression -> tree_expression . operator_expression tree_expression
    (63) operator_comparison -> . EQUAL
    (64) operator_comparison -> . NOT_EQUAL
    (65) operator_comparison -> . GREATER_THAN
    (66) operator_comparison -> . LESS_THAN
    (67) operator_comparison -> . GREATER_THAN_OR_EQUAL
    (68) operator_comparison -> . LESS_THAN_OR_EQUAL
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    EQUAL           shift and go to state 108
    NOT_EQUAL       shift and go to state 109
    GREATER_THAN    shift and go to state 110
    LESS_THAN       shift and go to state 111
    GREATER_THAN_OR_EQUAL shift and go to state 112
    LESS_THAN_OR_EQUAL shift and go to state 113
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    operator_comparison            shift and go to state 106
    operator_expression            shift and go to state 107

state 77

    (56) tree_expression -> value .
    (57) tree_expression -> value . operator_expression tree_expression
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 56 (tree_expression -> value .)
    NOT_EQUAL       reduce using rule 56 (tree_expression -> value .)
    GREATER_THAN    reduce using rule 56 (tree_expression -> value .)
    LESS_THAN       reduce using rule 56 (tree_expression -> value .)
    GREATER_THAN_OR_EQUAL reduce using rule 56 (tree_expression -> value .)
    LESS_THAN_OR_EQUAL reduce using rule 56 (tree_expression -> value .)
    RBRACKET        reduce using rule 56 (tree_expression -> value .)
    COMMA           reduce using rule 56 (tree_expression -> value .)
    WHERE           reduce using rule 56 (tree_expression -> value .)
    ENDREQUEST      reduce using rule 56 (tree_expression -> value .)
    AND             reduce using rule 56 (tree_expression -> value .)
    OR              reduce using rule 56 (tree_expression -> value .)
    UNION           reduce using rule 56 (tree_expression -> value .)
    INTERSECT       reduce using rule 56 (tree_expression -> value .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

  ! PLUS            [ reduce using rule 56 (tree_expression -> value .) ]
  ! MINUS           [ reduce using rule 56 (tree_expression -> value .) ]
  ! STAR            [ reduce using rule 56 (tree_expression -> value .) ]
  ! DIVISION        [ reduce using rule 56 (tree_expression -> value .) ]

    operator_expression            shift and go to state 114

state 78

    (58) tree_expression -> operator_expression . tree_expression
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    operator_expression            shift and go to state 78
    tree_expression                shift and go to state 115
    value                          shift and go to state 77

state 79

    (59) tree_expression -> LBRACKET . tree_expression RBRACKET
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    tree_expression                shift and go to state 116
    value                          shift and go to state 77
    operator_expression            shift and go to state 78

state 80

    (46) value -> NAME .

    PLUS            reduce using rule 46 (value -> NAME .)
    MINUS           reduce using rule 46 (value -> NAME .)
    STAR            reduce using rule 46 (value -> NAME .)
    DIVISION        reduce using rule 46 (value -> NAME .)
    EQUAL           reduce using rule 46 (value -> NAME .)
    NOT_EQUAL       reduce using rule 46 (value -> NAME .)
    GREATER_THAN    reduce using rule 46 (value -> NAME .)
    LESS_THAN       reduce using rule 46 (value -> NAME .)
    GREATER_THAN_OR_EQUAL reduce using rule 46 (value -> NAME .)
    LESS_THAN_OR_EQUAL reduce using rule 46 (value -> NAME .)
    RBRACKET        reduce using rule 46 (value -> NAME .)
    COMMA           reduce using rule 46 (value -> NAME .)
    WHERE           reduce using rule 46 (value -> NAME .)
    ENDREQUEST      reduce using rule 46 (value -> NAME .)
    AND             reduce using rule 46 (value -> NAME .)
    OR              reduce using rule 46 (value -> NAME .)
    UNION           reduce using rule 46 (value -> NAME .)
    INTERSECT       reduce using rule 46 (value -> NAME .)


state 81

    (47) value -> QUOTE . NAME QUOTE

    NAME            shift and go to state 117


state 82

    (69) operator_expression -> PLUS .

    LBRACKET        reduce using rule 69 (operator_expression -> PLUS .)
    NAME            reduce using rule 69 (operator_expression -> PLUS .)
    QUOTE           reduce using rule 69 (operator_expression -> PLUS .)
    PLUS            reduce using rule 69 (operator_expression -> PLUS .)
    MINUS           reduce using rule 69 (operator_expression -> PLUS .)
    STAR            reduce using rule 69 (operator_expression -> PLUS .)
    DIVISION        reduce using rule 69 (operator_expression -> PLUS .)


state 83

    (70) operator_expression -> MINUS .

    LBRACKET        reduce using rule 70 (operator_expression -> MINUS .)
    NAME            reduce using rule 70 (operator_expression -> MINUS .)
    QUOTE           reduce using rule 70 (operator_expression -> MINUS .)
    PLUS            reduce using rule 70 (operator_expression -> MINUS .)
    MINUS           reduce using rule 70 (operator_expression -> MINUS .)
    STAR            reduce using rule 70 (operator_expression -> MINUS .)
    DIVISION        reduce using rule 70 (operator_expression -> MINUS .)


state 84

    (71) operator_expression -> STAR .

    LBRACKET        reduce using rule 71 (operator_expression -> STAR .)
    NAME            reduce using rule 71 (operator_expression -> STAR .)
    QUOTE           reduce using rule 71 (operator_expression -> STAR .)
    PLUS            reduce using rule 71 (operator_expression -> STAR .)
    MINUS           reduce using rule 71 (operator_expression -> STAR .)
    STAR            reduce using rule 71 (operator_expression -> STAR .)
    DIVISION        reduce using rule 71 (operator_expression -> STAR .)


state 85

    (72) operator_expression -> DIVISION .

    LBRACKET        reduce using rule 72 (operator_expression -> DIVISION .)
    NAME            reduce using rule 72 (operator_expression -> DIVISION .)
    QUOTE           reduce using rule 72 (operator_expression -> DIVISION .)
    PLUS            reduce using rule 72 (operator_expression -> DIVISION .)
    MINUS           reduce using rule 72 (operator_expression -> DIVISION .)
    STAR            reduce using rule 72 (operator_expression -> DIVISION .)
    DIVISION        reduce using rule 72 (operator_expression -> DIVISION .)


state 86

    (31) select_body -> fields FROM NAME .

    JOIN            reduce using rule 31 (select_body -> fields FROM NAME .)
    LEFT            reduce using rule 31 (select_body -> fields FROM NAME .)
    RIGHT           reduce using rule 31 (select_body -> fields FROM NAME .)
    WHERE           reduce using rule 31 (select_body -> fields FROM NAME .)
    UNION           reduce using rule 31 (select_body -> fields FROM NAME .)
    INTERSECT       reduce using rule 31 (select_body -> fields FROM NAME .)
    ENDREQUEST      reduce using rule 31 (select_body -> fields FROM NAME .)


state 87

    (49) fields -> fields COMMA field .

    FROM            reduce using rule 49 (fields -> fields COMMA field .)
    COMMA           reduce using rule 49 (fields -> fields COMMA field .)
    RBRACKET        reduce using rule 49 (fields -> fields COMMA field .)


state 88

    (51) field -> NAME DOT NAME .

    FROM            reduce using rule 51 (field -> NAME DOT NAME .)
    COMMA           reduce using rule 51 (field -> NAME DOT NAME .)
    EQUAL           reduce using rule 51 (field -> NAME DOT NAME .)
    RBRACKET        reduce using rule 51 (field -> NAME DOT NAME .)
    WHERE           reduce using rule 51 (field -> NAME DOT NAME .)
    UNION           reduce using rule 51 (field -> NAME DOT NAME .)
    INTERSECT       reduce using rule 51 (field -> NAME DOT NAME .)
    ENDREQUEST      reduce using rule 51 (field -> NAME DOT NAME .)


state 89

    (32) select_body -> STAR COMMA fields . FROM NAME
    (49) fields -> fields . COMMA field

    FROM            shift and go to state 118
    COMMA           shift and go to state 59


state 90

    (33) select_body -> STAR FROM NAME .

    JOIN            reduce using rule 33 (select_body -> STAR FROM NAME .)
    LEFT            reduce using rule 33 (select_body -> STAR FROM NAME .)
    RIGHT           reduce using rule 33 (select_body -> STAR FROM NAME .)
    WHERE           reduce using rule 33 (select_body -> STAR FROM NAME .)
    UNION           reduce using rule 33 (select_body -> STAR FROM NAME .)
    INTERSECT       reduce using rule 33 (select_body -> STAR FROM NAME .)
    ENDREQUEST      reduce using rule 33 (select_body -> STAR FROM NAME .)


state 91

    (10) variables -> NAME . type
    (73) type -> . int
    (74) type -> . str
    (75) type -> . bol
    (76) type -> . bool
    (77) type -> . float

    int             shift and go to state 120
    str             shift and go to state 121
    bol             shift and go to state 122
    bool            shift and go to state 123
    float           shift and go to state 124

    type                           shift and go to state 119

state 92

    (9) create_body -> TABLE NAME LBRACKET variables . RBRACKET
    (11) variables -> variables . COMMA NAME type

    RBRACKET        shift and go to state 125
    COMMA           shift and go to state 126


state 93

    (35) insert_body -> INTO NAME VALUES LBRACKET . values RBRACKET
    (44) values -> . value
    (45) values -> . values COMMA value
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 80
    QUOTE           shift and go to state 81

    values                         shift and go to state 127
    value                          shift and go to state 128

state 94

    (36) insert_body -> INTO NAME LBRACKET fields . RBRACKET VALUES LBRACKET values RBRACKET
    (49) fields -> fields . COMMA field

    RBRACKET        shift and go to state 129
    COMMA           shift and go to state 59


state 95

    (39) update_body -> NAME SET expression condition .

    ENDREQUEST      reduce using rule 39 (update_body -> NAME SET expression condition .)


state 96

    (41) expression -> expression COMMA . field EQUAL tree_expression
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    NAME            shift and go to state 40

    field                          shift and go to state 130

state 97

    (40) expression -> field EQUAL . tree_expression
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    tree_expression                shift and go to state 131
    value                          shift and go to state 77
    operator_expression            shift and go to state 78

state 98

    (28) select -> SELECT select_body join join_right_table condition .

    UNION           reduce using rule 28 (select -> SELECT select_body join join_right_table condition .)
    INTERSECT       reduce using rule 28 (select -> SELECT select_body join join_right_table condition .)
    ENDREQUEST      reduce using rule 28 (select -> SELECT select_body join join_right_table condition .)


state 99

    (17) join_right_table -> NAME ON . field EQUAL field
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    NAME            shift and go to state 40

    field                          shift and go to state 132

state 100

    (18) join_right_table -> NAME USING . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 133


state 101

    (15) join -> LEFT OUTER JOIN .

    NAME            reduce using rule 15 (join -> LEFT OUTER JOIN .)


state 102

    (16) join -> RIGHT OUTER JOIN .

    NAME            reduce using rule 16 (join -> RIGHT OUTER JOIN .)


state 103

    (53) tree_condition -> tree_comparison operator_condition . tree_condition
    (53) tree_condition -> . tree_comparison operator_condition tree_condition
    (54) tree_condition -> . tree_comparison
    (55) tree_comparison -> . tree_expression operator_comparison tree_expression
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    tree_comparison                shift and go to state 75
    tree_condition                 shift and go to state 134
    tree_expression                shift and go to state 76
    value                          shift and go to state 77
    operator_expression            shift and go to state 78

state 104

    (61) operator_condition -> AND .

    LBRACKET        reduce using rule 61 (operator_condition -> AND .)
    NAME            reduce using rule 61 (operator_condition -> AND .)
    QUOTE           reduce using rule 61 (operator_condition -> AND .)
    PLUS            reduce using rule 61 (operator_condition -> AND .)
    MINUS           reduce using rule 61 (operator_condition -> AND .)
    STAR            reduce using rule 61 (operator_condition -> AND .)
    DIVISION        reduce using rule 61 (operator_condition -> AND .)


state 105

    (62) operator_condition -> OR .

    LBRACKET        reduce using rule 62 (operator_condition -> OR .)
    NAME            reduce using rule 62 (operator_condition -> OR .)
    QUOTE           reduce using rule 62 (operator_condition -> OR .)
    PLUS            reduce using rule 62 (operator_condition -> OR .)
    MINUS           reduce using rule 62 (operator_condition -> OR .)
    STAR            reduce using rule 62 (operator_condition -> OR .)
    DIVISION        reduce using rule 62 (operator_condition -> OR .)


state 106

    (55) tree_comparison -> tree_expression operator_comparison . tree_expression
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    tree_expression                shift and go to state 135
    value                          shift and go to state 77
    operator_expression            shift and go to state 78

state 107

    (60) tree_expression -> tree_expression operator_expression . tree_expression
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    tree_expression                shift and go to state 136
    operator_expression            shift and go to state 78
    value                          shift and go to state 77

state 108

    (63) operator_comparison -> EQUAL .

    LBRACKET        reduce using rule 63 (operator_comparison -> EQUAL .)
    NAME            reduce using rule 63 (operator_comparison -> EQUAL .)
    QUOTE           reduce using rule 63 (operator_comparison -> EQUAL .)
    PLUS            reduce using rule 63 (operator_comparison -> EQUAL .)
    MINUS           reduce using rule 63 (operator_comparison -> EQUAL .)
    STAR            reduce using rule 63 (operator_comparison -> EQUAL .)
    DIVISION        reduce using rule 63 (operator_comparison -> EQUAL .)


state 109

    (64) operator_comparison -> NOT_EQUAL .

    LBRACKET        reduce using rule 64 (operator_comparison -> NOT_EQUAL .)
    NAME            reduce using rule 64 (operator_comparison -> NOT_EQUAL .)
    QUOTE           reduce using rule 64 (operator_comparison -> NOT_EQUAL .)
    PLUS            reduce using rule 64 (operator_comparison -> NOT_EQUAL .)
    MINUS           reduce using rule 64 (operator_comparison -> NOT_EQUAL .)
    STAR            reduce using rule 64 (operator_comparison -> NOT_EQUAL .)
    DIVISION        reduce using rule 64 (operator_comparison -> NOT_EQUAL .)


state 110

    (65) operator_comparison -> GREATER_THAN .

    LBRACKET        reduce using rule 65 (operator_comparison -> GREATER_THAN .)
    NAME            reduce using rule 65 (operator_comparison -> GREATER_THAN .)
    QUOTE           reduce using rule 65 (operator_comparison -> GREATER_THAN .)
    PLUS            reduce using rule 65 (operator_comparison -> GREATER_THAN .)
    MINUS           reduce using rule 65 (operator_comparison -> GREATER_THAN .)
    STAR            reduce using rule 65 (operator_comparison -> GREATER_THAN .)
    DIVISION        reduce using rule 65 (operator_comparison -> GREATER_THAN .)


state 111

    (66) operator_comparison -> LESS_THAN .

    LBRACKET        reduce using rule 66 (operator_comparison -> LESS_THAN .)
    NAME            reduce using rule 66 (operator_comparison -> LESS_THAN .)
    QUOTE           reduce using rule 66 (operator_comparison -> LESS_THAN .)
    PLUS            reduce using rule 66 (operator_comparison -> LESS_THAN .)
    MINUS           reduce using rule 66 (operator_comparison -> LESS_THAN .)
    STAR            reduce using rule 66 (operator_comparison -> LESS_THAN .)
    DIVISION        reduce using rule 66 (operator_comparison -> LESS_THAN .)


state 112

    (67) operator_comparison -> GREATER_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 67 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    NAME            reduce using rule 67 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    QUOTE           reduce using rule 67 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    PLUS            reduce using rule 67 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    MINUS           reduce using rule 67 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    STAR            reduce using rule 67 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 67 (operator_comparison -> GREATER_THAN_OR_EQUAL .)


state 113

    (68) operator_comparison -> LESS_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 68 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    NAME            reduce using rule 68 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    QUOTE           reduce using rule 68 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    PLUS            reduce using rule 68 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    MINUS           reduce using rule 68 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    STAR            reduce using rule 68 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 68 (operator_comparison -> LESS_THAN_OR_EQUAL .)


state 114

    (57) tree_expression -> value operator_expression . tree_expression
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    value                          shift and go to state 77
    operator_expression            shift and go to state 78
    tree_expression                shift and go to state 137

state 115

    (58) tree_expression -> operator_expression tree_expression .
    (60) tree_expression -> tree_expression . operator_expression tree_expression
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN       reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    RBRACKET        reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    COMMA           reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    WHERE           reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    AND             reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    OR              reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    UNION           reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    INTERSECT       reduce using rule 58 (tree_expression -> operator_expression tree_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

  ! PLUS            [ reduce using rule 58 (tree_expression -> operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 58 (tree_expression -> operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 58 (tree_expression -> operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 58 (tree_expression -> operator_expression tree_expression .) ]

    operator_expression            shift and go to state 107

state 116

    (59) tree_expression -> LBRACKET tree_expression . RBRACKET
    (60) tree_expression -> tree_expression . operator_expression tree_expression
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    RBRACKET        shift and go to state 138
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    operator_expression            shift and go to state 107

state 117

    (47) value -> QUOTE NAME . QUOTE

    QUOTE           shift and go to state 139


state 118

    (32) select_body -> STAR COMMA fields FROM . NAME

    NAME            shift and go to state 140


state 119

    (10) variables -> NAME type .

    RBRACKET        reduce using rule 10 (variables -> NAME type .)
    COMMA           reduce using rule 10 (variables -> NAME type .)


state 120

    (73) type -> int .

    RBRACKET        reduce using rule 73 (type -> int .)
    COMMA           reduce using rule 73 (type -> int .)


state 121

    (74) type -> str .

    RBRACKET        reduce using rule 74 (type -> str .)
    COMMA           reduce using rule 74 (type -> str .)


state 122

    (75) type -> bol .

    RBRACKET        reduce using rule 75 (type -> bol .)
    COMMA           reduce using rule 75 (type -> bol .)


state 123

    (76) type -> bool .

    RBRACKET        reduce using rule 76 (type -> bool .)
    COMMA           reduce using rule 76 (type -> bool .)


state 124

    (77) type -> float .

    RBRACKET        reduce using rule 77 (type -> float .)
    COMMA           reduce using rule 77 (type -> float .)


state 125

    (9) create_body -> TABLE NAME LBRACKET variables RBRACKET .

    ENDREQUEST      reduce using rule 9 (create_body -> TABLE NAME LBRACKET variables RBRACKET .)


state 126

    (11) variables -> variables COMMA . NAME type

    NAME            shift and go to state 141


state 127

    (35) insert_body -> INTO NAME VALUES LBRACKET values . RBRACKET
    (45) values -> values . COMMA value

    RBRACKET        shift and go to state 142
    COMMA           shift and go to state 143


state 128

    (44) values -> value .

    RBRACKET        reduce using rule 44 (values -> value .)
    COMMA           reduce using rule 44 (values -> value .)


state 129

    (36) insert_body -> INTO NAME LBRACKET fields RBRACKET . VALUES LBRACKET values RBRACKET

    VALUES          shift and go to state 144


state 130

    (41) expression -> expression COMMA field . EQUAL tree_expression

    EQUAL           shift and go to state 145


state 131

    (40) expression -> field EQUAL tree_expression .
    (60) tree_expression -> tree_expression . operator_expression tree_expression
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    COMMA           reduce using rule 40 (expression -> field EQUAL tree_expression .)
    WHERE           reduce using rule 40 (expression -> field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 40 (expression -> field EQUAL tree_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    operator_expression            shift and go to state 107

state 132

    (17) join_right_table -> NAME ON field . EQUAL field

    EQUAL           shift and go to state 146


state 133

    (18) join_right_table -> NAME USING LBRACKET . fields RBRACKET
    (48) fields -> . field
    (49) fields -> . fields COMMA field
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    NAME            shift and go to state 40

    fields                         shift and go to state 147
    field                          shift and go to state 42

state 134

    (53) tree_condition -> tree_comparison operator_condition tree_condition .

    UNION           reduce using rule 53 (tree_condition -> tree_comparison operator_condition tree_condition .)
    INTERSECT       reduce using rule 53 (tree_condition -> tree_comparison operator_condition tree_condition .)
    ENDREQUEST      reduce using rule 53 (tree_condition -> tree_comparison operator_condition tree_condition .)


state 135

    (55) tree_comparison -> tree_expression operator_comparison tree_expression .
    (60) tree_expression -> tree_expression . operator_expression tree_expression
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    AND             reduce using rule 55 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    OR              reduce using rule 55 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    UNION           reduce using rule 55 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    INTERSECT       reduce using rule 55 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    ENDREQUEST      reduce using rule 55 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    operator_expression            shift and go to state 107

state 136

    (60) tree_expression -> tree_expression operator_expression tree_expression .
    (60) tree_expression -> tree_expression . operator_expression tree_expression
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN       reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    RBRACKET        reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    COMMA           reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    WHERE           reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    AND             reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    OR              reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    UNION           reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    INTERSECT       reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

  ! PLUS            [ reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 60 (tree_expression -> tree_expression operator_expression tree_expression .) ]

    operator_expression            shift and go to state 107

state 137

    (57) tree_expression -> value operator_expression tree_expression .
    (60) tree_expression -> tree_expression . operator_expression tree_expression
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    LESS_THAN       reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    RBRACKET        reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    COMMA           reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    WHERE           reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    AND             reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    OR              reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    UNION           reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    INTERSECT       reduce using rule 57 (tree_expression -> value operator_expression tree_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

  ! PLUS            [ reduce using rule 57 (tree_expression -> value operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 57 (tree_expression -> value operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 57 (tree_expression -> value operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 57 (tree_expression -> value operator_expression tree_expression .) ]

    operator_expression            shift and go to state 107

state 138

    (59) tree_expression -> LBRACKET tree_expression RBRACKET .

    EQUAL           reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    NOT_EQUAL       reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN    reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN       reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN_OR_EQUAL reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    PLUS            reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    MINUS           reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    STAR            reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    DIVISION        reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RBRACKET        reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    COMMA           reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    WHERE           reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    ENDREQUEST      reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    AND             reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    OR              reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    UNION           reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    INTERSECT       reduce using rule 59 (tree_expression -> LBRACKET tree_expression RBRACKET .)


state 139

    (47) value -> QUOTE NAME QUOTE .

    PLUS            reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    MINUS           reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    STAR            reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    DIVISION        reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    EQUAL           reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    NOT_EQUAL       reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    GREATER_THAN    reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    LESS_THAN       reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    GREATER_THAN_OR_EQUAL reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    RBRACKET        reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    COMMA           reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    WHERE           reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    ENDREQUEST      reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    AND             reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    OR              reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    UNION           reduce using rule 47 (value -> QUOTE NAME QUOTE .)
    INTERSECT       reduce using rule 47 (value -> QUOTE NAME QUOTE .)


state 140

    (32) select_body -> STAR COMMA fields FROM NAME .

    JOIN            reduce using rule 32 (select_body -> STAR COMMA fields FROM NAME .)
    LEFT            reduce using rule 32 (select_body -> STAR COMMA fields FROM NAME .)
    RIGHT           reduce using rule 32 (select_body -> STAR COMMA fields FROM NAME .)
    WHERE           reduce using rule 32 (select_body -> STAR COMMA fields FROM NAME .)
    UNION           reduce using rule 32 (select_body -> STAR COMMA fields FROM NAME .)
    INTERSECT       reduce using rule 32 (select_body -> STAR COMMA fields FROM NAME .)
    ENDREQUEST      reduce using rule 32 (select_body -> STAR COMMA fields FROM NAME .)


state 141

    (11) variables -> variables COMMA NAME . type
    (73) type -> . int
    (74) type -> . str
    (75) type -> . bol
    (76) type -> . bool
    (77) type -> . float

    int             shift and go to state 120
    str             shift and go to state 121
    bol             shift and go to state 122
    bool            shift and go to state 123
    float           shift and go to state 124

    type                           shift and go to state 148

state 142

    (35) insert_body -> INTO NAME VALUES LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 35 (insert_body -> INTO NAME VALUES LBRACKET values RBRACKET .)


state 143

    (45) values -> values COMMA . value
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 80
    QUOTE           shift and go to state 81

    value                          shift and go to state 149

state 144

    (36) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 150


state 145

    (41) expression -> expression COMMA field EQUAL . tree_expression
    (56) tree_expression -> . value
    (57) tree_expression -> . value operator_expression tree_expression
    (58) tree_expression -> . operator_expression tree_expression
    (59) tree_expression -> . LBRACKET tree_expression RBRACKET
    (60) tree_expression -> . tree_expression operator_expression tree_expression
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 79
    NAME            shift and go to state 80
    QUOTE           shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    tree_expression                shift and go to state 151
    value                          shift and go to state 77
    operator_expression            shift and go to state 78

state 146

    (17) join_right_table -> NAME ON field EQUAL . field
    (50) field -> . NAME
    (51) field -> . NAME DOT NAME

    NAME            shift and go to state 40

    field                          shift and go to state 152

state 147

    (18) join_right_table -> NAME USING LBRACKET fields . RBRACKET
    (49) fields -> fields . COMMA field

    RBRACKET        shift and go to state 153
    COMMA           shift and go to state 59


state 148

    (11) variables -> variables COMMA NAME type .

    RBRACKET        reduce using rule 11 (variables -> variables COMMA NAME type .)
    COMMA           reduce using rule 11 (variables -> variables COMMA NAME type .)


state 149

    (45) values -> values COMMA value .

    RBRACKET        reduce using rule 45 (values -> values COMMA value .)
    COMMA           reduce using rule 45 (values -> values COMMA value .)


state 150

    (36) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET . values RBRACKET
    (44) values -> . value
    (45) values -> . values COMMA value
    (46) value -> . NAME
    (47) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 80
    QUOTE           shift and go to state 81

    values                         shift and go to state 154
    value                          shift and go to state 128

state 151

    (41) expression -> expression COMMA field EQUAL tree_expression .
    (60) tree_expression -> tree_expression . operator_expression tree_expression
    (69) operator_expression -> . PLUS
    (70) operator_expression -> . MINUS
    (71) operator_expression -> . STAR
    (72) operator_expression -> . DIVISION

    COMMA           reduce using rule 41 (expression -> expression COMMA field EQUAL tree_expression .)
    WHERE           reduce using rule 41 (expression -> expression COMMA field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 41 (expression -> expression COMMA field EQUAL tree_expression .)
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83
    STAR            shift and go to state 84
    DIVISION        shift and go to state 85

    operator_expression            shift and go to state 107

state 152

    (17) join_right_table -> NAME ON field EQUAL field .

    WHERE           reduce using rule 17 (join_right_table -> NAME ON field EQUAL field .)
    UNION           reduce using rule 17 (join_right_table -> NAME ON field EQUAL field .)
    INTERSECT       reduce using rule 17 (join_right_table -> NAME ON field EQUAL field .)
    ENDREQUEST      reduce using rule 17 (join_right_table -> NAME ON field EQUAL field .)


state 153

    (18) join_right_table -> NAME USING LBRACKET fields RBRACKET .

    WHERE           reduce using rule 18 (join_right_table -> NAME USING LBRACKET fields RBRACKET .)
    UNION           reduce using rule 18 (join_right_table -> NAME USING LBRACKET fields RBRACKET .)
    INTERSECT       reduce using rule 18 (join_right_table -> NAME USING LBRACKET fields RBRACKET .)
    ENDREQUEST      reduce using rule 18 (join_right_table -> NAME USING LBRACKET fields RBRACKET .)


state 154

    (36) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values . RBRACKET
    (45) values -> values . COMMA value

    RBRACKET        shift and go to state 155
    COMMA           shift and go to state 143


state 155

    (36) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 36 (insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for STAR in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for STAR in state 115 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for STAR in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for STAR in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 137 resolved as shift
