Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> start
Rule 1     start -> create ENDREQUEST
Rule 2     start -> show ENDREQUEST
Rule 3     start -> drop ENDREQUEST
Rule 4     start -> tree_selects ENDREQUEST
Rule 5     start -> insert ENDREQUEST
Rule 6     start -> update ENDREQUEST
Rule 7     start -> delete ENDREQUEST
Rule 8     start -> transaction ENDREQUEST
Rule 9     transaction -> BEGIN TRANSACTION
Rule 10    transaction -> END TRANSACTION
Rule 11    transaction -> ROLLBACK
Rule 12    create -> CREATE create_body
Rule 13    create_body -> TABLE NAME LBRACKET variables RBRACKET
Rule 14    variables -> NAME type
Rule 15    variables -> variables COMMA NAME type
Rule 16    show -> SHOW CREATE TABLE NAME
Rule 17    drop -> DROP TABLE NAME
Rule 18    join -> JOIN
Rule 19    join -> LEFT OUTER JOIN
Rule 20    join -> RIGHT OUTER JOIN
Rule 21    union -> UNION
Rule 22    union -> UNION ALL
Rule 23    intersect -> INTERSECT
Rule 24    tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
Rule 25    tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
Rule 26    tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
Rule 27    tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
Rule 28    tree_selects -> LBRACKET tree_selects RBRACKET union select
Rule 29    tree_selects -> LBRACKET tree_selects RBRACKET intersect select
Rule 30    tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition
Rule 31    tree_selects -> LBRACKET tree_selects RBRACKET join select
Rule 32    tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition
Rule 33    tree_selects -> LBRACKET tree_selects RBRACKET join name_table
Rule 34    tree_selects -> select union LBRACKET tree_selects RBRACKET
Rule 35    tree_selects -> select intersect LBRACKET tree_selects RBRACKET
Rule 36    tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition
Rule 37    tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table
Rule 38    tree_selects -> select union select
Rule 39    tree_selects -> select intersect select
Rule 40    tree_selects -> select join select join_condition
Rule 41    tree_selects -> select join select
Rule 42    tree_selects -> select join name_table join_condition
Rule 43    tree_selects -> select join name_table
Rule 44    tree_selects -> select
Rule 45    join_condition -> ON field EQUAL field
Rule 46    join_condition -> USING LBRACKET fields RBRACKET
Rule 47    name_table -> NAME
Rule 48    select -> SELECT select_body condition
Rule 49    select -> SELECT select_body
Rule 50    select_body -> fields FROM NAME
Rule 51    select_body -> STAR COMMA fields FROM NAME
Rule 52    select_body -> STAR FROM NAME
Rule 53    insert -> INSERT insert_body
Rule 54    insert_body -> INTO NAME VALUES LBRACKET values RBRACKET
Rule 55    insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET
Rule 56    update -> UPDATE update_body
Rule 57    update_body -> NAME SET expression
Rule 58    update_body -> NAME SET expression condition
Rule 59    expression -> field EQUAL tree_expression
Rule 60    expression -> expression COMMA field EQUAL tree_expression
Rule 61    delete -> DELETE FROM NAME
Rule 62    delete -> DELETE FROM NAME condition
Rule 63    values -> value
Rule 64    values -> values COMMA value
Rule 65    value -> NAME
Rule 66    value -> QUOTE NAME QUOTE
Rule 67    fields -> field
Rule 68    fields -> fields COMMA field
Rule 69    field -> NAME
Rule 70    field -> NAME DOT NAME
Rule 71    condition -> WHERE tree_condition
Rule 72    tree_condition -> tree_comparison operator_condition tree_condition
Rule 73    tree_condition -> tree_comparison
Rule 74    tree_comparison -> tree_expression operator_comparison tree_expression
Rule 75    tree_expression -> value
Rule 76    tree_expression -> value operator_expression tree_expression
Rule 77    tree_expression -> operator_expression tree_expression
Rule 78    tree_expression -> LBRACKET tree_expression RBRACKET
Rule 79    tree_expression -> tree_expression operator_expression tree_expression
Rule 80    operator_condition -> AND
Rule 81    operator_condition -> OR
Rule 82    operator_comparison -> EQUAL
Rule 83    operator_comparison -> NOT_EQUAL
Rule 84    operator_comparison -> GREATER_THAN
Rule 85    operator_comparison -> LESS_THAN
Rule 86    operator_comparison -> GREATER_THAN_OR_EQUAL
Rule 87    operator_comparison -> LESS_THAN_OR_EQUAL
Rule 88    operator_expression -> PLUS
Rule 89    operator_expression -> MINUS
Rule 90    operator_expression -> STAR
Rule 91    operator_expression -> DIVISION
Rule 92    type -> int
Rule 93    type -> str
Rule 94    type -> bol
Rule 95    type -> bool
Rule 96    type -> float

Terminals, with rules where they appear

ALL                  : 22
AND                  : 80
AS                   : 36 37
BEGIN                : 9
COMMA                : 15 51 60 64 68
CREATE               : 12 16
DELETE               : 61 62
DIVISION             : 91
DOT                  : 70
DROP                 : 17
END                  : 10
ENDREQUEST           : 1 2 3 4 5 6 7 8
EQUAL                : 45 59 60 82
FROM                 : 50 51 52 61 62
GREATER_THAN         : 84
GREATER_THAN_OR_EQUAL : 86
INSERT               : 53
INTERSECT            : 23
INTO                 : 54 55
JOIN                 : 18 19 20
LBRACKET             : 13 24 24 25 25 26 26 27 27 28 29 30 31 32 33 34 35 36 37 46 54 55 55 78
LEFT                 : 19
LESS_THAN            : 85
LESS_THAN_OR_EQUAL   : 87
MINUS                : 89
NAME                 : 13 14 15 16 17 47 50 51 52 54 55 57 58 61 62 65 66 69 70 70
NOT                  : 
NOT_EQUAL            : 83
ON                   : 45
OR                   : 81
OUTER                : 19 20
PLUS                 : 88
QUOTE                : 66 66
RBRACKET             : 13 24 24 25 25 26 26 27 27 28 29 30 31 32 33 34 35 36 37 46 54 55 55 78
RIGHT                : 20
ROLLBACK             : 11
SELECT               : 48 49
SET                  : 57 58
SHOW                 : 16
STAR                 : 51 52 90
TABLE                : 13 16 17
TRANSACTION          : 9 10
UNION                : 21 22
UPDATE               : 56
USING                : 46
VALUES               : 54 55
WHERE                : 71
bol                  : 94
bool                 : 95
error                : 
float                : 96
int                  : 92
str                  : 93

Nonterminals, with rules where they appear

condition            : 48 58 62
create               : 1
create_body          : 12
delete               : 7
drop                 : 3
expression           : 57 58 60
field                : 45 45 59 60 67 68
fields               : 46 50 51 55 68
insert               : 5
insert_body          : 53
intersect            : 25 29 35 39
join                 : 26 27 30 31 32 33 36 37 40 41 42 43
join_condition       : 26 30 32 36 40 42
name_table           : 32 33 36 37 42 43
operator_comparison  : 74
operator_condition   : 72
operator_expression  : 76 77 79
select               : 28 29 30 31 34 35 36 37 38 38 39 39 40 40 41 41 42 43 44
select_body          : 48 49
show                 : 2
start                : 0
transaction          : 8
tree_comparison      : 72 73
tree_condition       : 71 72
tree_expression      : 59 60 74 74 76 77 78 79 79
tree_selects         : 4 24 24 25 25 26 26 27 27 28 29 30 31 32 33 34 35 36 37
type                 : 14 15
union                : 24 28 34 38
update               : 6
update_body          : 56
value                : 63 64 75 76
values               : 54 55 64
variables            : 13 15

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . create ENDREQUEST
    (2) start -> . show ENDREQUEST
    (3) start -> . drop ENDREQUEST
    (4) start -> . tree_selects ENDREQUEST
    (5) start -> . insert ENDREQUEST
    (6) start -> . update ENDREQUEST
    (7) start -> . delete ENDREQUEST
    (8) start -> . transaction ENDREQUEST
    (12) create -> . CREATE create_body
    (16) show -> . SHOW CREATE TABLE NAME
    (17) drop -> . DROP TABLE NAME
    (24) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (34) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> . select union select
    (39) tree_selects -> . select intersect select
    (40) tree_selects -> . select join select join_condition
    (41) tree_selects -> . select join select
    (42) tree_selects -> . select join name_table join_condition
    (43) tree_selects -> . select join name_table
    (44) tree_selects -> . select
    (53) insert -> . INSERT insert_body
    (56) update -> . UPDATE update_body
    (61) delete -> . DELETE FROM NAME
    (62) delete -> . DELETE FROM NAME condition
    (9) transaction -> . BEGIN TRANSACTION
    (10) transaction -> . END TRANSACTION
    (11) transaction -> . ROLLBACK
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    CREATE          shift and go to state 10
    SHOW            shift and go to state 11
    DROP            shift and go to state 12
    LBRACKET        shift and go to state 13
    INSERT          shift and go to state 15
    UPDATE          shift and go to state 16
    DELETE          shift and go to state 17
    BEGIN           shift and go to state 18
    END             shift and go to state 19
    ROLLBACK        shift and go to state 20
    SELECT          shift and go to state 21

    start                          shift and go to state 1
    create                         shift and go to state 2
    show                           shift and go to state 3
    drop                           shift and go to state 4
    tree_selects                   shift and go to state 5
    insert                         shift and go to state 6
    update                         shift and go to state 7
    delete                         shift and go to state 8
    transaction                    shift and go to state 9
    select                         shift and go to state 14

state 1

    (0) S' -> start .



state 2

    (1) start -> create . ENDREQUEST

    ENDREQUEST      shift and go to state 22


state 3

    (2) start -> show . ENDREQUEST

    ENDREQUEST      shift and go to state 23


state 4

    (3) start -> drop . ENDREQUEST

    ENDREQUEST      shift and go to state 24


state 5

    (4) start -> tree_selects . ENDREQUEST

    ENDREQUEST      shift and go to state 25


state 6

    (5) start -> insert . ENDREQUEST

    ENDREQUEST      shift and go to state 26


state 7

    (6) start -> update . ENDREQUEST

    ENDREQUEST      shift and go to state 27


state 8

    (7) start -> delete . ENDREQUEST

    ENDREQUEST      shift and go to state 28


state 9

    (8) start -> transaction . ENDREQUEST

    ENDREQUEST      shift and go to state 29


state 10

    (12) create -> CREATE . create_body
    (13) create_body -> . TABLE NAME LBRACKET variables RBRACKET

    TABLE           shift and go to state 31

    create_body                    shift and go to state 30

state 11

    (16) show -> SHOW . CREATE TABLE NAME

    CREATE          shift and go to state 32


state 12

    (17) drop -> DROP . TABLE NAME

    TABLE           shift and go to state 33


state 13

    (24) tree_selects -> LBRACKET . tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> LBRACKET . tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> LBRACKET . tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> LBRACKET . tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> LBRACKET . tree_selects RBRACKET union select
    (29) tree_selects -> LBRACKET . tree_selects RBRACKET intersect select
    (30) tree_selects -> LBRACKET . tree_selects RBRACKET join select join_condition
    (31) tree_selects -> LBRACKET . tree_selects RBRACKET join select
    (32) tree_selects -> LBRACKET . tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> LBRACKET . tree_selects RBRACKET join name_table
    (24) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (34) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> . select union select
    (39) tree_selects -> . select intersect select
    (40) tree_selects -> . select join select join_condition
    (41) tree_selects -> . select join select
    (42) tree_selects -> . select join name_table join_condition
    (43) tree_selects -> . select join name_table
    (44) tree_selects -> . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 13
    SELECT          shift and go to state 21

    tree_selects                   shift and go to state 34
    select                         shift and go to state 14

state 14

    (34) tree_selects -> select . union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> select . intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> select . join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> select . join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> select . union select
    (39) tree_selects -> select . intersect select
    (40) tree_selects -> select . join select join_condition
    (41) tree_selects -> select . join select
    (42) tree_selects -> select . join name_table join_condition
    (43) tree_selects -> select . join name_table
    (44) tree_selects -> select .
    (21) union -> . UNION
    (22) union -> . UNION ALL
    (23) intersect -> . INTERSECT
    (18) join -> . JOIN
    (19) join -> . LEFT OUTER JOIN
    (20) join -> . RIGHT OUTER JOIN

    ENDREQUEST      reduce using rule 44 (tree_selects -> select .)
    RBRACKET        reduce using rule 44 (tree_selects -> select .)
    UNION           shift and go to state 38
    INTERSECT       shift and go to state 39
    JOIN            shift and go to state 40
    LEFT            shift and go to state 41
    RIGHT           shift and go to state 42

    union                          shift and go to state 35
    intersect                      shift and go to state 36
    join                           shift and go to state 37

state 15

    (53) insert -> INSERT . insert_body
    (54) insert_body -> . INTO NAME VALUES LBRACKET values RBRACKET
    (55) insert_body -> . INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    INTO            shift and go to state 44

    insert_body                    shift and go to state 43

state 16

    (56) update -> UPDATE . update_body
    (57) update_body -> . NAME SET expression
    (58) update_body -> . NAME SET expression condition

    NAME            shift and go to state 46

    update_body                    shift and go to state 45

state 17

    (61) delete -> DELETE . FROM NAME
    (62) delete -> DELETE . FROM NAME condition

    FROM            shift and go to state 47


state 18

    (9) transaction -> BEGIN . TRANSACTION

    TRANSACTION     shift and go to state 48


state 19

    (10) transaction -> END . TRANSACTION

    TRANSACTION     shift and go to state 49


state 20

    (11) transaction -> ROLLBACK .

    ENDREQUEST      reduce using rule 11 (transaction -> ROLLBACK .)


state 21

    (48) select -> SELECT . select_body condition
    (49) select -> SELECT . select_body
    (50) select_body -> . fields FROM NAME
    (51) select_body -> . STAR COMMA fields FROM NAME
    (52) select_body -> . STAR FROM NAME
    (67) fields -> . field
    (68) fields -> . fields COMMA field
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    STAR            shift and go to state 53
    NAME            shift and go to state 52

    select_body                    shift and go to state 50
    fields                         shift and go to state 51
    field                          shift and go to state 54

state 22

    (1) start -> create ENDREQUEST .

    $end            reduce using rule 1 (start -> create ENDREQUEST .)


state 23

    (2) start -> show ENDREQUEST .

    $end            reduce using rule 2 (start -> show ENDREQUEST .)


state 24

    (3) start -> drop ENDREQUEST .

    $end            reduce using rule 3 (start -> drop ENDREQUEST .)


state 25

    (4) start -> tree_selects ENDREQUEST .

    $end            reduce using rule 4 (start -> tree_selects ENDREQUEST .)


state 26

    (5) start -> insert ENDREQUEST .

    $end            reduce using rule 5 (start -> insert ENDREQUEST .)


state 27

    (6) start -> update ENDREQUEST .

    $end            reduce using rule 6 (start -> update ENDREQUEST .)


state 28

    (7) start -> delete ENDREQUEST .

    $end            reduce using rule 7 (start -> delete ENDREQUEST .)


state 29

    (8) start -> transaction ENDREQUEST .

    $end            reduce using rule 8 (start -> transaction ENDREQUEST .)


state 30

    (12) create -> CREATE create_body .

    ENDREQUEST      reduce using rule 12 (create -> CREATE create_body .)


state 31

    (13) create_body -> TABLE . NAME LBRACKET variables RBRACKET

    NAME            shift and go to state 55


state 32

    (16) show -> SHOW CREATE . TABLE NAME

    TABLE           shift and go to state 56


state 33

    (17) drop -> DROP TABLE . NAME

    NAME            shift and go to state 57


state 34

    (24) tree_selects -> LBRACKET tree_selects . RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> LBRACKET tree_selects . RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> LBRACKET tree_selects . RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> LBRACKET tree_selects . RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> LBRACKET tree_selects . RBRACKET union select
    (29) tree_selects -> LBRACKET tree_selects . RBRACKET intersect select
    (30) tree_selects -> LBRACKET tree_selects . RBRACKET join select join_condition
    (31) tree_selects -> LBRACKET tree_selects . RBRACKET join select
    (32) tree_selects -> LBRACKET tree_selects . RBRACKET join name_table join_condition
    (33) tree_selects -> LBRACKET tree_selects . RBRACKET join name_table

    RBRACKET        shift and go to state 58


state 35

    (34) tree_selects -> select union . LBRACKET tree_selects RBRACKET
    (38) tree_selects -> select union . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 60
    SELECT          shift and go to state 21

    select                         shift and go to state 59

state 36

    (35) tree_selects -> select intersect . LBRACKET tree_selects RBRACKET
    (39) tree_selects -> select intersect . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 62
    SELECT          shift and go to state 21

    select                         shift and go to state 61

state 37

    (36) tree_selects -> select join . LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> select join . LBRACKET tree_selects RBRACKET AS name_table
    (40) tree_selects -> select join . select join_condition
    (41) tree_selects -> select join . select
    (42) tree_selects -> select join . name_table join_condition
    (43) tree_selects -> select join . name_table
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body
    (47) name_table -> . NAME

    LBRACKET        shift and go to state 64
    SELECT          shift and go to state 21
    NAME            shift and go to state 66

    select                         shift and go to state 63
    name_table                     shift and go to state 65

state 38

    (21) union -> UNION .
    (22) union -> UNION . ALL

    LBRACKET        reduce using rule 21 (union -> UNION .)
    SELECT          reduce using rule 21 (union -> UNION .)
    ALL             shift and go to state 67


state 39

    (23) intersect -> INTERSECT .

    LBRACKET        reduce using rule 23 (intersect -> INTERSECT .)
    SELECT          reduce using rule 23 (intersect -> INTERSECT .)


state 40

    (18) join -> JOIN .

    LBRACKET        reduce using rule 18 (join -> JOIN .)
    SELECT          reduce using rule 18 (join -> JOIN .)
    NAME            reduce using rule 18 (join -> JOIN .)


state 41

    (19) join -> LEFT . OUTER JOIN

    OUTER           shift and go to state 68


state 42

    (20) join -> RIGHT . OUTER JOIN

    OUTER           shift and go to state 69


state 43

    (53) insert -> INSERT insert_body .

    ENDREQUEST      reduce using rule 53 (insert -> INSERT insert_body .)


state 44

    (54) insert_body -> INTO . NAME VALUES LBRACKET values RBRACKET
    (55) insert_body -> INTO . NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    NAME            shift and go to state 70


state 45

    (56) update -> UPDATE update_body .

    ENDREQUEST      reduce using rule 56 (update -> UPDATE update_body .)


state 46

    (57) update_body -> NAME . SET expression
    (58) update_body -> NAME . SET expression condition

    SET             shift and go to state 71


state 47

    (61) delete -> DELETE FROM . NAME
    (62) delete -> DELETE FROM . NAME condition

    NAME            shift and go to state 72


state 48

    (9) transaction -> BEGIN TRANSACTION .

    ENDREQUEST      reduce using rule 9 (transaction -> BEGIN TRANSACTION .)


state 49

    (10) transaction -> END TRANSACTION .

    ENDREQUEST      reduce using rule 10 (transaction -> END TRANSACTION .)


state 50

    (48) select -> SELECT select_body . condition
    (49) select -> SELECT select_body .
    (71) condition -> . WHERE tree_condition

    UNION           reduce using rule 49 (select -> SELECT select_body .)
    INTERSECT       reduce using rule 49 (select -> SELECT select_body .)
    JOIN            reduce using rule 49 (select -> SELECT select_body .)
    LEFT            reduce using rule 49 (select -> SELECT select_body .)
    RIGHT           reduce using rule 49 (select -> SELECT select_body .)
    ENDREQUEST      reduce using rule 49 (select -> SELECT select_body .)
    RBRACKET        reduce using rule 49 (select -> SELECT select_body .)
    ON              reduce using rule 49 (select -> SELECT select_body .)
    USING           reduce using rule 49 (select -> SELECT select_body .)
    WHERE           shift and go to state 74

    condition                      shift and go to state 73

state 51

    (50) select_body -> fields . FROM NAME
    (68) fields -> fields . COMMA field

    FROM            shift and go to state 75
    COMMA           shift and go to state 76


state 52

    (69) field -> NAME .
    (70) field -> NAME . DOT NAME

    FROM            reduce using rule 69 (field -> NAME .)
    COMMA           reduce using rule 69 (field -> NAME .)
    EQUAL           reduce using rule 69 (field -> NAME .)
    RBRACKET        reduce using rule 69 (field -> NAME .)
    ENDREQUEST      reduce using rule 69 (field -> NAME .)
    DOT             shift and go to state 77


state 53

    (51) select_body -> STAR . COMMA fields FROM NAME
    (52) select_body -> STAR . FROM NAME

    COMMA           shift and go to state 78
    FROM            shift and go to state 79


state 54

    (67) fields -> field .

    FROM            reduce using rule 67 (fields -> field .)
    COMMA           reduce using rule 67 (fields -> field .)
    RBRACKET        reduce using rule 67 (fields -> field .)


state 55

    (13) create_body -> TABLE NAME . LBRACKET variables RBRACKET

    LBRACKET        shift and go to state 80


state 56

    (16) show -> SHOW CREATE TABLE . NAME

    NAME            shift and go to state 81


state 57

    (17) drop -> DROP TABLE NAME .

    ENDREQUEST      reduce using rule 17 (drop -> DROP TABLE NAME .)


state 58

    (24) tree_selects -> LBRACKET tree_selects RBRACKET . union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> LBRACKET tree_selects RBRACKET . intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> LBRACKET tree_selects RBRACKET . join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> LBRACKET tree_selects RBRACKET . join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> LBRACKET tree_selects RBRACKET . union select
    (29) tree_selects -> LBRACKET tree_selects RBRACKET . intersect select
    (30) tree_selects -> LBRACKET tree_selects RBRACKET . join select join_condition
    (31) tree_selects -> LBRACKET tree_selects RBRACKET . join select
    (32) tree_selects -> LBRACKET tree_selects RBRACKET . join name_table join_condition
    (33) tree_selects -> LBRACKET tree_selects RBRACKET . join name_table
    (21) union -> . UNION
    (22) union -> . UNION ALL
    (23) intersect -> . INTERSECT
    (18) join -> . JOIN
    (19) join -> . LEFT OUTER JOIN
    (20) join -> . RIGHT OUTER JOIN

    UNION           shift and go to state 38
    INTERSECT       shift and go to state 39
    JOIN            shift and go to state 40
    LEFT            shift and go to state 41
    RIGHT           shift and go to state 42

    union                          shift and go to state 82
    intersect                      shift and go to state 83
    join                           shift and go to state 84

state 59

    (38) tree_selects -> select union select .

    ENDREQUEST      reduce using rule 38 (tree_selects -> select union select .)
    RBRACKET        reduce using rule 38 (tree_selects -> select union select .)


state 60

    (34) tree_selects -> select union LBRACKET . tree_selects RBRACKET
    (24) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (34) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> . select union select
    (39) tree_selects -> . select intersect select
    (40) tree_selects -> . select join select join_condition
    (41) tree_selects -> . select join select
    (42) tree_selects -> . select join name_table join_condition
    (43) tree_selects -> . select join name_table
    (44) tree_selects -> . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 13
    SELECT          shift and go to state 21

    select                         shift and go to state 14
    tree_selects                   shift and go to state 85

state 61

    (39) tree_selects -> select intersect select .

    ENDREQUEST      reduce using rule 39 (tree_selects -> select intersect select .)
    RBRACKET        reduce using rule 39 (tree_selects -> select intersect select .)


state 62

    (35) tree_selects -> select intersect LBRACKET . tree_selects RBRACKET
    (24) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (34) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> . select union select
    (39) tree_selects -> . select intersect select
    (40) tree_selects -> . select join select join_condition
    (41) tree_selects -> . select join select
    (42) tree_selects -> . select join name_table join_condition
    (43) tree_selects -> . select join name_table
    (44) tree_selects -> . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 13
    SELECT          shift and go to state 21

    select                         shift and go to state 14
    tree_selects                   shift and go to state 86

state 63

    (40) tree_selects -> select join select . join_condition
    (41) tree_selects -> select join select .
    (45) join_condition -> . ON field EQUAL field
    (46) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 41 (tree_selects -> select join select .)
    RBRACKET        reduce using rule 41 (tree_selects -> select join select .)
    ON              shift and go to state 88
    USING           shift and go to state 89

    join_condition                 shift and go to state 87

state 64

    (36) tree_selects -> select join LBRACKET . tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> select join LBRACKET . tree_selects RBRACKET AS name_table
    (24) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (34) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> . select union select
    (39) tree_selects -> . select intersect select
    (40) tree_selects -> . select join select join_condition
    (41) tree_selects -> . select join select
    (42) tree_selects -> . select join name_table join_condition
    (43) tree_selects -> . select join name_table
    (44) tree_selects -> . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 13
    SELECT          shift and go to state 21

    select                         shift and go to state 14
    tree_selects                   shift and go to state 90

state 65

    (42) tree_selects -> select join name_table . join_condition
    (43) tree_selects -> select join name_table .
    (45) join_condition -> . ON field EQUAL field
    (46) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 43 (tree_selects -> select join name_table .)
    RBRACKET        reduce using rule 43 (tree_selects -> select join name_table .)
    ON              shift and go to state 88
    USING           shift and go to state 89

    join_condition                 shift and go to state 91

state 66

    (47) name_table -> NAME .

    ON              reduce using rule 47 (name_table -> NAME .)
    USING           reduce using rule 47 (name_table -> NAME .)
    ENDREQUEST      reduce using rule 47 (name_table -> NAME .)
    RBRACKET        reduce using rule 47 (name_table -> NAME .)


state 67

    (22) union -> UNION ALL .

    LBRACKET        reduce using rule 22 (union -> UNION ALL .)
    SELECT          reduce using rule 22 (union -> UNION ALL .)


state 68

    (19) join -> LEFT OUTER . JOIN

    JOIN            shift and go to state 92


state 69

    (20) join -> RIGHT OUTER . JOIN

    JOIN            shift and go to state 93


state 70

    (54) insert_body -> INTO NAME . VALUES LBRACKET values RBRACKET
    (55) insert_body -> INTO NAME . LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET

    VALUES          shift and go to state 94
    LBRACKET        shift and go to state 95


state 71

    (57) update_body -> NAME SET . expression
    (58) update_body -> NAME SET . expression condition
    (59) expression -> . field EQUAL tree_expression
    (60) expression -> . expression COMMA field EQUAL tree_expression
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    NAME            shift and go to state 52

    expression                     shift and go to state 96
    field                          shift and go to state 97

state 72

    (61) delete -> DELETE FROM NAME .
    (62) delete -> DELETE FROM NAME . condition
    (71) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 61 (delete -> DELETE FROM NAME .)
    WHERE           shift and go to state 74

    condition                      shift and go to state 98

state 73

    (48) select -> SELECT select_body condition .

    UNION           reduce using rule 48 (select -> SELECT select_body condition .)
    INTERSECT       reduce using rule 48 (select -> SELECT select_body condition .)
    JOIN            reduce using rule 48 (select -> SELECT select_body condition .)
    LEFT            reduce using rule 48 (select -> SELECT select_body condition .)
    RIGHT           reduce using rule 48 (select -> SELECT select_body condition .)
    ENDREQUEST      reduce using rule 48 (select -> SELECT select_body condition .)
    RBRACKET        reduce using rule 48 (select -> SELECT select_body condition .)
    ON              reduce using rule 48 (select -> SELECT select_body condition .)
    USING           reduce using rule 48 (select -> SELECT select_body condition .)


state 74

    (71) condition -> WHERE . tree_condition
    (72) tree_condition -> . tree_comparison operator_condition tree_condition
    (73) tree_condition -> . tree_comparison
    (74) tree_comparison -> . tree_expression operator_comparison tree_expression
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    tree_condition                 shift and go to state 99
    tree_comparison                shift and go to state 100
    tree_expression                shift and go to state 101
    value                          shift and go to state 102
    operator_expression            shift and go to state 103

state 75

    (50) select_body -> fields FROM . NAME

    NAME            shift and go to state 111


state 76

    (68) fields -> fields COMMA . field
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    NAME            shift and go to state 52

    field                          shift and go to state 112

state 77

    (70) field -> NAME DOT . NAME

    NAME            shift and go to state 113


state 78

    (51) select_body -> STAR COMMA . fields FROM NAME
    (67) fields -> . field
    (68) fields -> . fields COMMA field
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    NAME            shift and go to state 52

    fields                         shift and go to state 114
    field                          shift and go to state 54

state 79

    (52) select_body -> STAR FROM . NAME

    NAME            shift and go to state 115


state 80

    (13) create_body -> TABLE NAME LBRACKET . variables RBRACKET
    (14) variables -> . NAME type
    (15) variables -> . variables COMMA NAME type

    NAME            shift and go to state 116

    variables                      shift and go to state 117

state 81

    (16) show -> SHOW CREATE TABLE NAME .

    ENDREQUEST      reduce using rule 16 (show -> SHOW CREATE TABLE NAME .)


state 82

    (24) tree_selects -> LBRACKET tree_selects RBRACKET union . LBRACKET tree_selects RBRACKET
    (28) tree_selects -> LBRACKET tree_selects RBRACKET union . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 118
    SELECT          shift and go to state 21

    select                         shift and go to state 119

state 83

    (25) tree_selects -> LBRACKET tree_selects RBRACKET intersect . LBRACKET tree_selects RBRACKET
    (29) tree_selects -> LBRACKET tree_selects RBRACKET intersect . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 120
    SELECT          shift and go to state 21

    select                         shift and go to state 121

state 84

    (26) tree_selects -> LBRACKET tree_selects RBRACKET join . LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> LBRACKET tree_selects RBRACKET join . LBRACKET tree_selects RBRACKET
    (30) tree_selects -> LBRACKET tree_selects RBRACKET join . select join_condition
    (31) tree_selects -> LBRACKET tree_selects RBRACKET join . select
    (32) tree_selects -> LBRACKET tree_selects RBRACKET join . name_table join_condition
    (33) tree_selects -> LBRACKET tree_selects RBRACKET join . name_table
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body
    (47) name_table -> . NAME

    LBRACKET        shift and go to state 122
    SELECT          shift and go to state 21
    NAME            shift and go to state 66

    select                         shift and go to state 123
    name_table                     shift and go to state 124

state 85

    (34) tree_selects -> select union LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 125


state 86

    (35) tree_selects -> select intersect LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 126


state 87

    (40) tree_selects -> select join select join_condition .

    ENDREQUEST      reduce using rule 40 (tree_selects -> select join select join_condition .)
    RBRACKET        reduce using rule 40 (tree_selects -> select join select join_condition .)


state 88

    (45) join_condition -> ON . field EQUAL field
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    NAME            shift and go to state 52

    field                          shift and go to state 127

state 89

    (46) join_condition -> USING . LBRACKET fields RBRACKET

    LBRACKET        shift and go to state 128


state 90

    (36) tree_selects -> select join LBRACKET tree_selects . RBRACKET AS name_table join_condition
    (37) tree_selects -> select join LBRACKET tree_selects . RBRACKET AS name_table

    RBRACKET        shift and go to state 129


state 91

    (42) tree_selects -> select join name_table join_condition .

    ENDREQUEST      reduce using rule 42 (tree_selects -> select join name_table join_condition .)
    RBRACKET        reduce using rule 42 (tree_selects -> select join name_table join_condition .)


state 92

    (19) join -> LEFT OUTER JOIN .

    LBRACKET        reduce using rule 19 (join -> LEFT OUTER JOIN .)
    SELECT          reduce using rule 19 (join -> LEFT OUTER JOIN .)
    NAME            reduce using rule 19 (join -> LEFT OUTER JOIN .)


state 93

    (20) join -> RIGHT OUTER JOIN .

    LBRACKET        reduce using rule 20 (join -> RIGHT OUTER JOIN .)
    SELECT          reduce using rule 20 (join -> RIGHT OUTER JOIN .)
    NAME            reduce using rule 20 (join -> RIGHT OUTER JOIN .)


state 94

    (54) insert_body -> INTO NAME VALUES . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 130


state 95

    (55) insert_body -> INTO NAME LBRACKET . fields RBRACKET VALUES LBRACKET values RBRACKET
    (67) fields -> . field
    (68) fields -> . fields COMMA field
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    NAME            shift and go to state 52

    fields                         shift and go to state 131
    field                          shift and go to state 54

state 96

    (57) update_body -> NAME SET expression .
    (58) update_body -> NAME SET expression . condition
    (60) expression -> expression . COMMA field EQUAL tree_expression
    (71) condition -> . WHERE tree_condition

    ENDREQUEST      reduce using rule 57 (update_body -> NAME SET expression .)
    COMMA           shift and go to state 133
    WHERE           shift and go to state 74

    condition                      shift and go to state 132

state 97

    (59) expression -> field . EQUAL tree_expression

    EQUAL           shift and go to state 134


state 98

    (62) delete -> DELETE FROM NAME condition .

    ENDREQUEST      reduce using rule 62 (delete -> DELETE FROM NAME condition .)


state 99

    (71) condition -> WHERE tree_condition .

    UNION           reduce using rule 71 (condition -> WHERE tree_condition .)
    INTERSECT       reduce using rule 71 (condition -> WHERE tree_condition .)
    JOIN            reduce using rule 71 (condition -> WHERE tree_condition .)
    LEFT            reduce using rule 71 (condition -> WHERE tree_condition .)
    RIGHT           reduce using rule 71 (condition -> WHERE tree_condition .)
    ENDREQUEST      reduce using rule 71 (condition -> WHERE tree_condition .)
    RBRACKET        reduce using rule 71 (condition -> WHERE tree_condition .)
    ON              reduce using rule 71 (condition -> WHERE tree_condition .)
    USING           reduce using rule 71 (condition -> WHERE tree_condition .)


state 100

    (72) tree_condition -> tree_comparison . operator_condition tree_condition
    (73) tree_condition -> tree_comparison .
    (80) operator_condition -> . AND
    (81) operator_condition -> . OR

    UNION           reduce using rule 73 (tree_condition -> tree_comparison .)
    INTERSECT       reduce using rule 73 (tree_condition -> tree_comparison .)
    JOIN            reduce using rule 73 (tree_condition -> tree_comparison .)
    LEFT            reduce using rule 73 (tree_condition -> tree_comparison .)
    RIGHT           reduce using rule 73 (tree_condition -> tree_comparison .)
    ENDREQUEST      reduce using rule 73 (tree_condition -> tree_comparison .)
    RBRACKET        reduce using rule 73 (tree_condition -> tree_comparison .)
    ON              reduce using rule 73 (tree_condition -> tree_comparison .)
    USING           reduce using rule 73 (tree_condition -> tree_comparison .)
    AND             shift and go to state 136
    OR              shift and go to state 137

    operator_condition             shift and go to state 135

state 101

    (74) tree_comparison -> tree_expression . operator_comparison tree_expression
    (79) tree_expression -> tree_expression . operator_expression tree_expression
    (82) operator_comparison -> . EQUAL
    (83) operator_comparison -> . NOT_EQUAL
    (84) operator_comparison -> . GREATER_THAN
    (85) operator_comparison -> . LESS_THAN
    (86) operator_comparison -> . GREATER_THAN_OR_EQUAL
    (87) operator_comparison -> . LESS_THAN_OR_EQUAL
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    EQUAL           shift and go to state 140
    NOT_EQUAL       shift and go to state 141
    GREATER_THAN    shift and go to state 142
    LESS_THAN       shift and go to state 143
    GREATER_THAN_OR_EQUAL shift and go to state 144
    LESS_THAN_OR_EQUAL shift and go to state 145
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    operator_comparison            shift and go to state 138
    operator_expression            shift and go to state 139

state 102

    (75) tree_expression -> value .
    (76) tree_expression -> value . operator_expression tree_expression
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 75 (tree_expression -> value .)
    NOT_EQUAL       reduce using rule 75 (tree_expression -> value .)
    GREATER_THAN    reduce using rule 75 (tree_expression -> value .)
    LESS_THAN       reduce using rule 75 (tree_expression -> value .)
    GREATER_THAN_OR_EQUAL reduce using rule 75 (tree_expression -> value .)
    LESS_THAN_OR_EQUAL reduce using rule 75 (tree_expression -> value .)
    RBRACKET        reduce using rule 75 (tree_expression -> value .)
    COMMA           reduce using rule 75 (tree_expression -> value .)
    WHERE           reduce using rule 75 (tree_expression -> value .)
    ENDREQUEST      reduce using rule 75 (tree_expression -> value .)
    AND             reduce using rule 75 (tree_expression -> value .)
    OR              reduce using rule 75 (tree_expression -> value .)
    UNION           reduce using rule 75 (tree_expression -> value .)
    INTERSECT       reduce using rule 75 (tree_expression -> value .)
    JOIN            reduce using rule 75 (tree_expression -> value .)
    LEFT            reduce using rule 75 (tree_expression -> value .)
    RIGHT           reduce using rule 75 (tree_expression -> value .)
    ON              reduce using rule 75 (tree_expression -> value .)
    USING           reduce using rule 75 (tree_expression -> value .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

  ! PLUS            [ reduce using rule 75 (tree_expression -> value .) ]
  ! MINUS           [ reduce using rule 75 (tree_expression -> value .) ]
  ! STAR            [ reduce using rule 75 (tree_expression -> value .) ]
  ! DIVISION        [ reduce using rule 75 (tree_expression -> value .) ]

    operator_expression            shift and go to state 146

state 103

    (77) tree_expression -> operator_expression . tree_expression
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    operator_expression            shift and go to state 103
    tree_expression                shift and go to state 147
    value                          shift and go to state 102

state 104

    (78) tree_expression -> LBRACKET . tree_expression RBRACKET
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    tree_expression                shift and go to state 148
    value                          shift and go to state 102
    operator_expression            shift and go to state 103

state 105

    (65) value -> NAME .

    PLUS            reduce using rule 65 (value -> NAME .)
    MINUS           reduce using rule 65 (value -> NAME .)
    STAR            reduce using rule 65 (value -> NAME .)
    DIVISION        reduce using rule 65 (value -> NAME .)
    EQUAL           reduce using rule 65 (value -> NAME .)
    NOT_EQUAL       reduce using rule 65 (value -> NAME .)
    GREATER_THAN    reduce using rule 65 (value -> NAME .)
    LESS_THAN       reduce using rule 65 (value -> NAME .)
    GREATER_THAN_OR_EQUAL reduce using rule 65 (value -> NAME .)
    LESS_THAN_OR_EQUAL reduce using rule 65 (value -> NAME .)
    RBRACKET        reduce using rule 65 (value -> NAME .)
    COMMA           reduce using rule 65 (value -> NAME .)
    WHERE           reduce using rule 65 (value -> NAME .)
    ENDREQUEST      reduce using rule 65 (value -> NAME .)
    AND             reduce using rule 65 (value -> NAME .)
    OR              reduce using rule 65 (value -> NAME .)
    UNION           reduce using rule 65 (value -> NAME .)
    INTERSECT       reduce using rule 65 (value -> NAME .)
    JOIN            reduce using rule 65 (value -> NAME .)
    LEFT            reduce using rule 65 (value -> NAME .)
    RIGHT           reduce using rule 65 (value -> NAME .)
    ON              reduce using rule 65 (value -> NAME .)
    USING           reduce using rule 65 (value -> NAME .)


state 106

    (66) value -> QUOTE . NAME QUOTE

    NAME            shift and go to state 149


state 107

    (88) operator_expression -> PLUS .

    LBRACKET        reduce using rule 88 (operator_expression -> PLUS .)
    NAME            reduce using rule 88 (operator_expression -> PLUS .)
    QUOTE           reduce using rule 88 (operator_expression -> PLUS .)
    PLUS            reduce using rule 88 (operator_expression -> PLUS .)
    MINUS           reduce using rule 88 (operator_expression -> PLUS .)
    STAR            reduce using rule 88 (operator_expression -> PLUS .)
    DIVISION        reduce using rule 88 (operator_expression -> PLUS .)


state 108

    (89) operator_expression -> MINUS .

    LBRACKET        reduce using rule 89 (operator_expression -> MINUS .)
    NAME            reduce using rule 89 (operator_expression -> MINUS .)
    QUOTE           reduce using rule 89 (operator_expression -> MINUS .)
    PLUS            reduce using rule 89 (operator_expression -> MINUS .)
    MINUS           reduce using rule 89 (operator_expression -> MINUS .)
    STAR            reduce using rule 89 (operator_expression -> MINUS .)
    DIVISION        reduce using rule 89 (operator_expression -> MINUS .)


state 109

    (90) operator_expression -> STAR .

    LBRACKET        reduce using rule 90 (operator_expression -> STAR .)
    NAME            reduce using rule 90 (operator_expression -> STAR .)
    QUOTE           reduce using rule 90 (operator_expression -> STAR .)
    PLUS            reduce using rule 90 (operator_expression -> STAR .)
    MINUS           reduce using rule 90 (operator_expression -> STAR .)
    STAR            reduce using rule 90 (operator_expression -> STAR .)
    DIVISION        reduce using rule 90 (operator_expression -> STAR .)


state 110

    (91) operator_expression -> DIVISION .

    LBRACKET        reduce using rule 91 (operator_expression -> DIVISION .)
    NAME            reduce using rule 91 (operator_expression -> DIVISION .)
    QUOTE           reduce using rule 91 (operator_expression -> DIVISION .)
    PLUS            reduce using rule 91 (operator_expression -> DIVISION .)
    MINUS           reduce using rule 91 (operator_expression -> DIVISION .)
    STAR            reduce using rule 91 (operator_expression -> DIVISION .)
    DIVISION        reduce using rule 91 (operator_expression -> DIVISION .)


state 111

    (50) select_body -> fields FROM NAME .

    WHERE           reduce using rule 50 (select_body -> fields FROM NAME .)
    UNION           reduce using rule 50 (select_body -> fields FROM NAME .)
    INTERSECT       reduce using rule 50 (select_body -> fields FROM NAME .)
    JOIN            reduce using rule 50 (select_body -> fields FROM NAME .)
    LEFT            reduce using rule 50 (select_body -> fields FROM NAME .)
    RIGHT           reduce using rule 50 (select_body -> fields FROM NAME .)
    ENDREQUEST      reduce using rule 50 (select_body -> fields FROM NAME .)
    RBRACKET        reduce using rule 50 (select_body -> fields FROM NAME .)
    ON              reduce using rule 50 (select_body -> fields FROM NAME .)
    USING           reduce using rule 50 (select_body -> fields FROM NAME .)


state 112

    (68) fields -> fields COMMA field .

    FROM            reduce using rule 68 (fields -> fields COMMA field .)
    COMMA           reduce using rule 68 (fields -> fields COMMA field .)
    RBRACKET        reduce using rule 68 (fields -> fields COMMA field .)


state 113

    (70) field -> NAME DOT NAME .

    FROM            reduce using rule 70 (field -> NAME DOT NAME .)
    COMMA           reduce using rule 70 (field -> NAME DOT NAME .)
    EQUAL           reduce using rule 70 (field -> NAME DOT NAME .)
    RBRACKET        reduce using rule 70 (field -> NAME DOT NAME .)
    ENDREQUEST      reduce using rule 70 (field -> NAME DOT NAME .)


state 114

    (51) select_body -> STAR COMMA fields . FROM NAME
    (68) fields -> fields . COMMA field

    FROM            shift and go to state 150
    COMMA           shift and go to state 76


state 115

    (52) select_body -> STAR FROM NAME .

    WHERE           reduce using rule 52 (select_body -> STAR FROM NAME .)
    UNION           reduce using rule 52 (select_body -> STAR FROM NAME .)
    INTERSECT       reduce using rule 52 (select_body -> STAR FROM NAME .)
    JOIN            reduce using rule 52 (select_body -> STAR FROM NAME .)
    LEFT            reduce using rule 52 (select_body -> STAR FROM NAME .)
    RIGHT           reduce using rule 52 (select_body -> STAR FROM NAME .)
    ENDREQUEST      reduce using rule 52 (select_body -> STAR FROM NAME .)
    RBRACKET        reduce using rule 52 (select_body -> STAR FROM NAME .)
    ON              reduce using rule 52 (select_body -> STAR FROM NAME .)
    USING           reduce using rule 52 (select_body -> STAR FROM NAME .)


state 116

    (14) variables -> NAME . type
    (92) type -> . int
    (93) type -> . str
    (94) type -> . bol
    (95) type -> . bool
    (96) type -> . float

    int             shift and go to state 152
    str             shift and go to state 153
    bol             shift and go to state 154
    bool            shift and go to state 155
    float           shift and go to state 156

    type                           shift and go to state 151

state 117

    (13) create_body -> TABLE NAME LBRACKET variables . RBRACKET
    (15) variables -> variables . COMMA NAME type

    RBRACKET        shift and go to state 157
    COMMA           shift and go to state 158


state 118

    (24) tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET . tree_selects RBRACKET
    (24) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (34) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> . select union select
    (39) tree_selects -> . select intersect select
    (40) tree_selects -> . select join select join_condition
    (41) tree_selects -> . select join select
    (42) tree_selects -> . select join name_table join_condition
    (43) tree_selects -> . select join name_table
    (44) tree_selects -> . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 13
    SELECT          shift and go to state 21

    tree_selects                   shift and go to state 159
    select                         shift and go to state 14

state 119

    (28) tree_selects -> LBRACKET tree_selects RBRACKET union select .

    ENDREQUEST      reduce using rule 28 (tree_selects -> LBRACKET tree_selects RBRACKET union select .)
    RBRACKET        reduce using rule 28 (tree_selects -> LBRACKET tree_selects RBRACKET union select .)


state 120

    (25) tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET . tree_selects RBRACKET
    (24) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (34) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> . select union select
    (39) tree_selects -> . select intersect select
    (40) tree_selects -> . select join select join_condition
    (41) tree_selects -> . select join select
    (42) tree_selects -> . select join name_table join_condition
    (43) tree_selects -> . select join name_table
    (44) tree_selects -> . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 13
    SELECT          shift and go to state 21

    tree_selects                   shift and go to state 160
    select                         shift and go to state 14

state 121

    (29) tree_selects -> LBRACKET tree_selects RBRACKET intersect select .

    ENDREQUEST      reduce using rule 29 (tree_selects -> LBRACKET tree_selects RBRACKET intersect select .)
    RBRACKET        reduce using rule 29 (tree_selects -> LBRACKET tree_selects RBRACKET intersect select .)


state 122

    (26) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET . tree_selects RBRACKET join_condition
    (27) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET . tree_selects RBRACKET
    (24) tree_selects -> . LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET
    (25) tree_selects -> . LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET
    (26) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition
    (27) tree_selects -> . LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET
    (28) tree_selects -> . LBRACKET tree_selects RBRACKET union select
    (29) tree_selects -> . LBRACKET tree_selects RBRACKET intersect select
    (30) tree_selects -> . LBRACKET tree_selects RBRACKET join select join_condition
    (31) tree_selects -> . LBRACKET tree_selects RBRACKET join select
    (32) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table join_condition
    (33) tree_selects -> . LBRACKET tree_selects RBRACKET join name_table
    (34) tree_selects -> . select union LBRACKET tree_selects RBRACKET
    (35) tree_selects -> . select intersect LBRACKET tree_selects RBRACKET
    (36) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table join_condition
    (37) tree_selects -> . select join LBRACKET tree_selects RBRACKET AS name_table
    (38) tree_selects -> . select union select
    (39) tree_selects -> . select intersect select
    (40) tree_selects -> . select join select join_condition
    (41) tree_selects -> . select join select
    (42) tree_selects -> . select join name_table join_condition
    (43) tree_selects -> . select join name_table
    (44) tree_selects -> . select
    (48) select -> . SELECT select_body condition
    (49) select -> . SELECT select_body

    LBRACKET        shift and go to state 13
    SELECT          shift and go to state 21

    tree_selects                   shift and go to state 161
    select                         shift and go to state 14

state 123

    (30) tree_selects -> LBRACKET tree_selects RBRACKET join select . join_condition
    (31) tree_selects -> LBRACKET tree_selects RBRACKET join select .
    (45) join_condition -> . ON field EQUAL field
    (46) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 31 (tree_selects -> LBRACKET tree_selects RBRACKET join select .)
    RBRACKET        reduce using rule 31 (tree_selects -> LBRACKET tree_selects RBRACKET join select .)
    ON              shift and go to state 88
    USING           shift and go to state 89

    join_condition                 shift and go to state 162

state 124

    (32) tree_selects -> LBRACKET tree_selects RBRACKET join name_table . join_condition
    (33) tree_selects -> LBRACKET tree_selects RBRACKET join name_table .
    (45) join_condition -> . ON field EQUAL field
    (46) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 33 (tree_selects -> LBRACKET tree_selects RBRACKET join name_table .)
    RBRACKET        reduce using rule 33 (tree_selects -> LBRACKET tree_selects RBRACKET join name_table .)
    ON              shift and go to state 88
    USING           shift and go to state 89

    join_condition                 shift and go to state 163

state 125

    (34) tree_selects -> select union LBRACKET tree_selects RBRACKET .

    ENDREQUEST      reduce using rule 34 (tree_selects -> select union LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 34 (tree_selects -> select union LBRACKET tree_selects RBRACKET .)


state 126

    (35) tree_selects -> select intersect LBRACKET tree_selects RBRACKET .

    ENDREQUEST      reduce using rule 35 (tree_selects -> select intersect LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 35 (tree_selects -> select intersect LBRACKET tree_selects RBRACKET .)


state 127

    (45) join_condition -> ON field . EQUAL field

    EQUAL           shift and go to state 164


state 128

    (46) join_condition -> USING LBRACKET . fields RBRACKET
    (67) fields -> . field
    (68) fields -> . fields COMMA field
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    NAME            shift and go to state 52

    fields                         shift and go to state 165
    field                          shift and go to state 54

state 129

    (36) tree_selects -> select join LBRACKET tree_selects RBRACKET . AS name_table join_condition
    (37) tree_selects -> select join LBRACKET tree_selects RBRACKET . AS name_table

    AS              shift and go to state 166


state 130

    (54) insert_body -> INTO NAME VALUES LBRACKET . values RBRACKET
    (63) values -> . value
    (64) values -> . values COMMA value
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 105
    QUOTE           shift and go to state 106

    values                         shift and go to state 167
    value                          shift and go to state 168

state 131

    (55) insert_body -> INTO NAME LBRACKET fields . RBRACKET VALUES LBRACKET values RBRACKET
    (68) fields -> fields . COMMA field

    RBRACKET        shift and go to state 169
    COMMA           shift and go to state 76


state 132

    (58) update_body -> NAME SET expression condition .

    ENDREQUEST      reduce using rule 58 (update_body -> NAME SET expression condition .)


state 133

    (60) expression -> expression COMMA . field EQUAL tree_expression
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    NAME            shift and go to state 52

    field                          shift and go to state 170

state 134

    (59) expression -> field EQUAL . tree_expression
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    tree_expression                shift and go to state 171
    value                          shift and go to state 102
    operator_expression            shift and go to state 103

state 135

    (72) tree_condition -> tree_comparison operator_condition . tree_condition
    (72) tree_condition -> . tree_comparison operator_condition tree_condition
    (73) tree_condition -> . tree_comparison
    (74) tree_comparison -> . tree_expression operator_comparison tree_expression
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    tree_comparison                shift and go to state 100
    tree_condition                 shift and go to state 172
    tree_expression                shift and go to state 101
    value                          shift and go to state 102
    operator_expression            shift and go to state 103

state 136

    (80) operator_condition -> AND .

    LBRACKET        reduce using rule 80 (operator_condition -> AND .)
    NAME            reduce using rule 80 (operator_condition -> AND .)
    QUOTE           reduce using rule 80 (operator_condition -> AND .)
    PLUS            reduce using rule 80 (operator_condition -> AND .)
    MINUS           reduce using rule 80 (operator_condition -> AND .)
    STAR            reduce using rule 80 (operator_condition -> AND .)
    DIVISION        reduce using rule 80 (operator_condition -> AND .)


state 137

    (81) operator_condition -> OR .

    LBRACKET        reduce using rule 81 (operator_condition -> OR .)
    NAME            reduce using rule 81 (operator_condition -> OR .)
    QUOTE           reduce using rule 81 (operator_condition -> OR .)
    PLUS            reduce using rule 81 (operator_condition -> OR .)
    MINUS           reduce using rule 81 (operator_condition -> OR .)
    STAR            reduce using rule 81 (operator_condition -> OR .)
    DIVISION        reduce using rule 81 (operator_condition -> OR .)


state 138

    (74) tree_comparison -> tree_expression operator_comparison . tree_expression
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    tree_expression                shift and go to state 173
    value                          shift and go to state 102
    operator_expression            shift and go to state 103

state 139

    (79) tree_expression -> tree_expression operator_expression . tree_expression
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    tree_expression                shift and go to state 174
    operator_expression            shift and go to state 103
    value                          shift and go to state 102

state 140

    (82) operator_comparison -> EQUAL .

    LBRACKET        reduce using rule 82 (operator_comparison -> EQUAL .)
    NAME            reduce using rule 82 (operator_comparison -> EQUAL .)
    QUOTE           reduce using rule 82 (operator_comparison -> EQUAL .)
    PLUS            reduce using rule 82 (operator_comparison -> EQUAL .)
    MINUS           reduce using rule 82 (operator_comparison -> EQUAL .)
    STAR            reduce using rule 82 (operator_comparison -> EQUAL .)
    DIVISION        reduce using rule 82 (operator_comparison -> EQUAL .)


state 141

    (83) operator_comparison -> NOT_EQUAL .

    LBRACKET        reduce using rule 83 (operator_comparison -> NOT_EQUAL .)
    NAME            reduce using rule 83 (operator_comparison -> NOT_EQUAL .)
    QUOTE           reduce using rule 83 (operator_comparison -> NOT_EQUAL .)
    PLUS            reduce using rule 83 (operator_comparison -> NOT_EQUAL .)
    MINUS           reduce using rule 83 (operator_comparison -> NOT_EQUAL .)
    STAR            reduce using rule 83 (operator_comparison -> NOT_EQUAL .)
    DIVISION        reduce using rule 83 (operator_comparison -> NOT_EQUAL .)


state 142

    (84) operator_comparison -> GREATER_THAN .

    LBRACKET        reduce using rule 84 (operator_comparison -> GREATER_THAN .)
    NAME            reduce using rule 84 (operator_comparison -> GREATER_THAN .)
    QUOTE           reduce using rule 84 (operator_comparison -> GREATER_THAN .)
    PLUS            reduce using rule 84 (operator_comparison -> GREATER_THAN .)
    MINUS           reduce using rule 84 (operator_comparison -> GREATER_THAN .)
    STAR            reduce using rule 84 (operator_comparison -> GREATER_THAN .)
    DIVISION        reduce using rule 84 (operator_comparison -> GREATER_THAN .)


state 143

    (85) operator_comparison -> LESS_THAN .

    LBRACKET        reduce using rule 85 (operator_comparison -> LESS_THAN .)
    NAME            reduce using rule 85 (operator_comparison -> LESS_THAN .)
    QUOTE           reduce using rule 85 (operator_comparison -> LESS_THAN .)
    PLUS            reduce using rule 85 (operator_comparison -> LESS_THAN .)
    MINUS           reduce using rule 85 (operator_comparison -> LESS_THAN .)
    STAR            reduce using rule 85 (operator_comparison -> LESS_THAN .)
    DIVISION        reduce using rule 85 (operator_comparison -> LESS_THAN .)


state 144

    (86) operator_comparison -> GREATER_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 86 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    NAME            reduce using rule 86 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    QUOTE           reduce using rule 86 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    PLUS            reduce using rule 86 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    MINUS           reduce using rule 86 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    STAR            reduce using rule 86 (operator_comparison -> GREATER_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 86 (operator_comparison -> GREATER_THAN_OR_EQUAL .)


state 145

    (87) operator_comparison -> LESS_THAN_OR_EQUAL .

    LBRACKET        reduce using rule 87 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    NAME            reduce using rule 87 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    QUOTE           reduce using rule 87 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    PLUS            reduce using rule 87 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    MINUS           reduce using rule 87 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    STAR            reduce using rule 87 (operator_comparison -> LESS_THAN_OR_EQUAL .)
    DIVISION        reduce using rule 87 (operator_comparison -> LESS_THAN_OR_EQUAL .)


state 146

    (76) tree_expression -> value operator_expression . tree_expression
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    value                          shift and go to state 102
    operator_expression            shift and go to state 103
    tree_expression                shift and go to state 175

state 147

    (77) tree_expression -> operator_expression tree_expression .
    (79) tree_expression -> tree_expression . operator_expression tree_expression
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN       reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    RBRACKET        reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    COMMA           reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    WHERE           reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    AND             reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    OR              reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    UNION           reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    INTERSECT       reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    JOIN            reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    LEFT            reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    RIGHT           reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    ON              reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    USING           reduce using rule 77 (tree_expression -> operator_expression tree_expression .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

  ! PLUS            [ reduce using rule 77 (tree_expression -> operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 77 (tree_expression -> operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 77 (tree_expression -> operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 77 (tree_expression -> operator_expression tree_expression .) ]

    operator_expression            shift and go to state 139

state 148

    (78) tree_expression -> LBRACKET tree_expression . RBRACKET
    (79) tree_expression -> tree_expression . operator_expression tree_expression
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    RBRACKET        shift and go to state 176
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    operator_expression            shift and go to state 139

state 149

    (66) value -> QUOTE NAME . QUOTE

    QUOTE           shift and go to state 177


state 150

    (51) select_body -> STAR COMMA fields FROM . NAME

    NAME            shift and go to state 178


state 151

    (14) variables -> NAME type .

    RBRACKET        reduce using rule 14 (variables -> NAME type .)
    COMMA           reduce using rule 14 (variables -> NAME type .)


state 152

    (92) type -> int .

    RBRACKET        reduce using rule 92 (type -> int .)
    COMMA           reduce using rule 92 (type -> int .)


state 153

    (93) type -> str .

    RBRACKET        reduce using rule 93 (type -> str .)
    COMMA           reduce using rule 93 (type -> str .)


state 154

    (94) type -> bol .

    RBRACKET        reduce using rule 94 (type -> bol .)
    COMMA           reduce using rule 94 (type -> bol .)


state 155

    (95) type -> bool .

    RBRACKET        reduce using rule 95 (type -> bool .)
    COMMA           reduce using rule 95 (type -> bool .)


state 156

    (96) type -> float .

    RBRACKET        reduce using rule 96 (type -> float .)
    COMMA           reduce using rule 96 (type -> float .)


state 157

    (13) create_body -> TABLE NAME LBRACKET variables RBRACKET .

    ENDREQUEST      reduce using rule 13 (create_body -> TABLE NAME LBRACKET variables RBRACKET .)


state 158

    (15) variables -> variables COMMA . NAME type

    NAME            shift and go to state 179


state 159

    (24) tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 180


state 160

    (25) tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 181


state 161

    (26) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects . RBRACKET join_condition
    (27) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects . RBRACKET

    RBRACKET        shift and go to state 182


state 162

    (30) tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition .

    ENDREQUEST      reduce using rule 30 (tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition .)
    RBRACKET        reduce using rule 30 (tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition .)


state 163

    (32) tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition .

    ENDREQUEST      reduce using rule 32 (tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition .)
    RBRACKET        reduce using rule 32 (tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition .)


state 164

    (45) join_condition -> ON field EQUAL . field
    (69) field -> . NAME
    (70) field -> . NAME DOT NAME

    NAME            shift and go to state 52

    field                          shift and go to state 183

state 165

    (46) join_condition -> USING LBRACKET fields . RBRACKET
    (68) fields -> fields . COMMA field

    RBRACKET        shift and go to state 184
    COMMA           shift and go to state 76


state 166

    (36) tree_selects -> select join LBRACKET tree_selects RBRACKET AS . name_table join_condition
    (37) tree_selects -> select join LBRACKET tree_selects RBRACKET AS . name_table
    (47) name_table -> . NAME

    NAME            shift and go to state 66

    name_table                     shift and go to state 185

state 167

    (54) insert_body -> INTO NAME VALUES LBRACKET values . RBRACKET
    (64) values -> values . COMMA value

    RBRACKET        shift and go to state 186
    COMMA           shift and go to state 187


state 168

    (63) values -> value .

    RBRACKET        reduce using rule 63 (values -> value .)
    COMMA           reduce using rule 63 (values -> value .)


state 169

    (55) insert_body -> INTO NAME LBRACKET fields RBRACKET . VALUES LBRACKET values RBRACKET

    VALUES          shift and go to state 188


state 170

    (60) expression -> expression COMMA field . EQUAL tree_expression

    EQUAL           shift and go to state 189


state 171

    (59) expression -> field EQUAL tree_expression .
    (79) tree_expression -> tree_expression . operator_expression tree_expression
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    COMMA           reduce using rule 59 (expression -> field EQUAL tree_expression .)
    WHERE           reduce using rule 59 (expression -> field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 59 (expression -> field EQUAL tree_expression .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    operator_expression            shift and go to state 139

state 172

    (72) tree_condition -> tree_comparison operator_condition tree_condition .

    UNION           reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)
    INTERSECT       reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)
    JOIN            reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)
    LEFT            reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)
    RIGHT           reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)
    ENDREQUEST      reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)
    RBRACKET        reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)
    ON              reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)
    USING           reduce using rule 72 (tree_condition -> tree_comparison operator_condition tree_condition .)


state 173

    (74) tree_comparison -> tree_expression operator_comparison tree_expression .
    (79) tree_expression -> tree_expression . operator_expression tree_expression
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    AND             reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    OR              reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    UNION           reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    INTERSECT       reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    JOIN            reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    LEFT            reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    RIGHT           reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    ENDREQUEST      reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    RBRACKET        reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    ON              reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    USING           reduce using rule 74 (tree_comparison -> tree_expression operator_comparison tree_expression .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    operator_expression            shift and go to state 139

state 174

    (79) tree_expression -> tree_expression operator_expression tree_expression .
    (79) tree_expression -> tree_expression . operator_expression tree_expression
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN       reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    RBRACKET        reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    COMMA           reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    WHERE           reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    AND             reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    OR              reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    UNION           reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    INTERSECT       reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    JOIN            reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    LEFT            reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    RIGHT           reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    ON              reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    USING           reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

  ! PLUS            [ reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 79 (tree_expression -> tree_expression operator_expression tree_expression .) ]

    operator_expression            shift and go to state 139

state 175

    (76) tree_expression -> value operator_expression tree_expression .
    (79) tree_expression -> tree_expression . operator_expression tree_expression
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    EQUAL           reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    NOT_EQUAL       reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    GREATER_THAN    reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    LESS_THAN       reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    GREATER_THAN_OR_EQUAL reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    LESS_THAN_OR_EQUAL reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    RBRACKET        reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    COMMA           reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    WHERE           reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    ENDREQUEST      reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    AND             reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    OR              reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    UNION           reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    INTERSECT       reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    JOIN            reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    LEFT            reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    RIGHT           reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    ON              reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    USING           reduce using rule 76 (tree_expression -> value operator_expression tree_expression .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

  ! PLUS            [ reduce using rule 76 (tree_expression -> value operator_expression tree_expression .) ]
  ! MINUS           [ reduce using rule 76 (tree_expression -> value operator_expression tree_expression .) ]
  ! STAR            [ reduce using rule 76 (tree_expression -> value operator_expression tree_expression .) ]
  ! DIVISION        [ reduce using rule 76 (tree_expression -> value operator_expression tree_expression .) ]

    operator_expression            shift and go to state 139

state 176

    (78) tree_expression -> LBRACKET tree_expression RBRACKET .

    EQUAL           reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    NOT_EQUAL       reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN    reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN       reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    GREATER_THAN_OR_EQUAL reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    PLUS            reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    MINUS           reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    STAR            reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    DIVISION        reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RBRACKET        reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    COMMA           reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    WHERE           reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    ENDREQUEST      reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    AND             reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    OR              reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    UNION           reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    INTERSECT       reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    JOIN            reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    LEFT            reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    RIGHT           reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    ON              reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)
    USING           reduce using rule 78 (tree_expression -> LBRACKET tree_expression RBRACKET .)


state 177

    (66) value -> QUOTE NAME QUOTE .

    PLUS            reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    MINUS           reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    STAR            reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    DIVISION        reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    EQUAL           reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    NOT_EQUAL       reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    GREATER_THAN    reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    LESS_THAN       reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    GREATER_THAN_OR_EQUAL reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    RBRACKET        reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    COMMA           reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    WHERE           reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    ENDREQUEST      reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    AND             reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    OR              reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    UNION           reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    INTERSECT       reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    JOIN            reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    LEFT            reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    RIGHT           reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    ON              reduce using rule 66 (value -> QUOTE NAME QUOTE .)
    USING           reduce using rule 66 (value -> QUOTE NAME QUOTE .)


state 178

    (51) select_body -> STAR COMMA fields FROM NAME .

    WHERE           reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    UNION           reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    INTERSECT       reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    JOIN            reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    LEFT            reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    RIGHT           reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    ENDREQUEST      reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    RBRACKET        reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    ON              reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)
    USING           reduce using rule 51 (select_body -> STAR COMMA fields FROM NAME .)


state 179

    (15) variables -> variables COMMA NAME . type
    (92) type -> . int
    (93) type -> . str
    (94) type -> . bol
    (95) type -> . bool
    (96) type -> . float

    int             shift and go to state 152
    str             shift and go to state 153
    bol             shift and go to state 154
    bool            shift and go to state 155
    float           shift and go to state 156

    type                           shift and go to state 190

state 180

    (24) tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET .

    ENDREQUEST      reduce using rule 24 (tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 24 (tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET .)


state 181

    (25) tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET .

    ENDREQUEST      reduce using rule 25 (tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 25 (tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET .)


state 182

    (26) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET . join_condition
    (27) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET .
    (45) join_condition -> . ON field EQUAL field
    (46) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 27 (tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET .)
    RBRACKET        reduce using rule 27 (tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET .)
    ON              shift and go to state 88
    USING           shift and go to state 89

    join_condition                 shift and go to state 191

state 183

    (45) join_condition -> ON field EQUAL field .

    ENDREQUEST      reduce using rule 45 (join_condition -> ON field EQUAL field .)
    RBRACKET        reduce using rule 45 (join_condition -> ON field EQUAL field .)


state 184

    (46) join_condition -> USING LBRACKET fields RBRACKET .

    ENDREQUEST      reduce using rule 46 (join_condition -> USING LBRACKET fields RBRACKET .)
    RBRACKET        reduce using rule 46 (join_condition -> USING LBRACKET fields RBRACKET .)


state 185

    (36) tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table . join_condition
    (37) tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table .
    (45) join_condition -> . ON field EQUAL field
    (46) join_condition -> . USING LBRACKET fields RBRACKET

    ENDREQUEST      reduce using rule 37 (tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table .)
    RBRACKET        reduce using rule 37 (tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table .)
    ON              shift and go to state 88
    USING           shift and go to state 89

    join_condition                 shift and go to state 192

state 186

    (54) insert_body -> INTO NAME VALUES LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 54 (insert_body -> INTO NAME VALUES LBRACKET values RBRACKET .)


state 187

    (64) values -> values COMMA . value
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 105
    QUOTE           shift and go to state 106

    value                          shift and go to state 193

state 188

    (55) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES . LBRACKET values RBRACKET

    LBRACKET        shift and go to state 194


state 189

    (60) expression -> expression COMMA field EQUAL . tree_expression
    (75) tree_expression -> . value
    (76) tree_expression -> . value operator_expression tree_expression
    (77) tree_expression -> . operator_expression tree_expression
    (78) tree_expression -> . LBRACKET tree_expression RBRACKET
    (79) tree_expression -> . tree_expression operator_expression tree_expression
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    LBRACKET        shift and go to state 104
    NAME            shift and go to state 105
    QUOTE           shift and go to state 106
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    tree_expression                shift and go to state 195
    value                          shift and go to state 102
    operator_expression            shift and go to state 103

state 190

    (15) variables -> variables COMMA NAME type .

    RBRACKET        reduce using rule 15 (variables -> variables COMMA NAME type .)
    COMMA           reduce using rule 15 (variables -> variables COMMA NAME type .)


state 191

    (26) tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition .

    ENDREQUEST      reduce using rule 26 (tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition .)
    RBRACKET        reduce using rule 26 (tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition .)


state 192

    (36) tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition .

    ENDREQUEST      reduce using rule 36 (tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition .)
    RBRACKET        reduce using rule 36 (tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition .)


state 193

    (64) values -> values COMMA value .

    RBRACKET        reduce using rule 64 (values -> values COMMA value .)
    COMMA           reduce using rule 64 (values -> values COMMA value .)


state 194

    (55) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET . values RBRACKET
    (63) values -> . value
    (64) values -> . values COMMA value
    (65) value -> . NAME
    (66) value -> . QUOTE NAME QUOTE

    NAME            shift and go to state 105
    QUOTE           shift and go to state 106

    values                         shift and go to state 196
    value                          shift and go to state 168

state 195

    (60) expression -> expression COMMA field EQUAL tree_expression .
    (79) tree_expression -> tree_expression . operator_expression tree_expression
    (88) operator_expression -> . PLUS
    (89) operator_expression -> . MINUS
    (90) operator_expression -> . STAR
    (91) operator_expression -> . DIVISION

    COMMA           reduce using rule 60 (expression -> expression COMMA field EQUAL tree_expression .)
    WHERE           reduce using rule 60 (expression -> expression COMMA field EQUAL tree_expression .)
    ENDREQUEST      reduce using rule 60 (expression -> expression COMMA field EQUAL tree_expression .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    STAR            shift and go to state 109
    DIVISION        shift and go to state 110

    operator_expression            shift and go to state 139

state 196

    (55) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values . RBRACKET
    (64) values -> values . COMMA value

    RBRACKET        shift and go to state 197
    COMMA           shift and go to state 187


state 197

    (55) insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET .

    ENDREQUEST      reduce using rule 55 (insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for STAR in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for STAR in state 147 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for STAR in state 174 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 174 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 175 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 175 resolved as shift
WARNING: shift/reduce conflict for STAR in state 175 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 175 resolved as shift
