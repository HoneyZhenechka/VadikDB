
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND AS BEGIN COMMA CREATE DELETE DIVISION DOT DROP END ENDREQUEST EQUAL FROM GREATER_THAN GREATER_THAN_OR_EQUAL INSERT INTERSECT INTO JOIN LBRACKET LEFT LESS_THAN LESS_THAN_OR_EQUAL MINUS NAME NOT NOT_EQUAL ON OR OUTER PLUS QUOTE RBRACKET RIGHT ROLLBACK SELECT SET SHOW STAR TABLE TRANSACTION UNION UPDATE USING VALUES WHERE bol bool float int strstart : create ENDREQUEST\n             | show ENDREQUEST\n             | drop ENDREQUEST\n             | tree_selects ENDREQUEST\n             | insert ENDREQUEST\n             | update ENDREQUEST\n             | delete ENDREQUEST\n             | transaction ENDREQUESTtransaction : BEGIN TRANSACTION\n                   | END TRANSACTION\n                   | ROLLBACKcreate : CREATE create_bodycreate_body : TABLE NAME LBRACKET variables RBRACKETvariables : NAME type\n              | variables COMMA NAME typeshow : SHOW CREATE TABLE NAMEdrop : DROP TABLE NAMEjoin : JOIN\n            | LEFT OUTER JOIN\n            | RIGHT OUTER JOINunion : UNION\n            | UNION ALLintersect : INTERSECTtree_selects :   LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET\n                    |   LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET\n                    |   LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition\n                    |   LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET\n                    |   LBRACKET tree_selects RBRACKET union select\n                    |   LBRACKET tree_selects RBRACKET intersect select\n                    |   LBRACKET tree_selects RBRACKET join select join_condition\n                    |   LBRACKET tree_selects RBRACKET join select\n                    |   LBRACKET tree_selects RBRACKET join name_table join_condition\n                    |   LBRACKET tree_selects RBRACKET join name_table\n                    |   select union LBRACKET tree_selects RBRACKET\n                    |   select intersect LBRACKET tree_selects RBRACKET\n                    |   select join LBRACKET tree_selects RBRACKET AS name_table join_condition\n                    |   select join LBRACKET tree_selects RBRACKET AS name_table\n                    |   select union select\n                    |   select intersect select\n                    |   select join select join_condition\n                    |   select join select\n                    |   select join name_table join_condition\n                    |   select join name_table\n                    |   selectjoin_condition : ON field EQUAL field\n            | USING LBRACKET fields RBRACKETname_table : NAMEselect : SELECT select_body condition\n              | SELECT select_bodyselect_body : fields FROM NAME\n                   | STAR COMMA fields FROM NAME\n                   | STAR FROM NAMEinsert : INSERT insert_bodyinsert_body : INTO NAME VALUES LBRACKET values RBRACKET\n                   | INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKETupdate : UPDATE update_bodyupdate_body : NAME SET expression\n                   | NAME SET expression conditionexpression : field EQUAL tree_expression\n                  | expression COMMA field EQUAL tree_expressiondelete : DELETE FROM NAME\n              | DELETE FROM NAME conditionvalues : value\n              | values COMMA valuevalue : NAME\n             | QUOTE NAME QUOTEfields : field\n              | fields COMMA fieldfield : NAME\n            | NAME DOT NAMEcondition : WHERE tree_conditiontree_condition : tree_comparison operator_condition tree_condition\n                        | tree_comparisontree_comparison :  tree_expression operator_comparison tree_expressiontree_expression : value\n            | value operator_expression tree_expression\n            | operator_expression tree_expression\n            | LBRACKET tree_expression RBRACKET\n            | tree_expression operator_expression tree_expressionoperator_condition : AND\n                            | OR operator_comparison : EQUAL\n                            | NOT_EQUAL\n                            | GREATER_THAN\n                            | LESS_THAN\n                            | GREATER_THAN_OR_EQUAL\n                            | LESS_THAN_OR_EQUALoperator_expression : PLUS\n                | MINUS\n                | STAR\n                | DIVISIONtype : int\n            | str\n            | bol\n            | bool\n            | float'
    
_lr_action_items = {'CREATE':([0,11,],[10,32,]),'SHOW':([0,],[11,]),'DROP':([0,],[12,]),'LBRACKET':([0,13,35,36,37,38,39,40,55,60,62,64,67,70,74,82,83,84,89,92,93,94,103,104,107,108,109,110,118,120,122,134,135,136,137,138,139,140,141,142,143,144,145,146,188,189,],[13,13,60,62,64,-21,-23,-18,80,13,13,13,-22,95,104,118,120,122,128,-19,-20,130,104,104,-88,-89,-90,-91,13,13,13,104,104,-80,-81,104,104,-82,-83,-84,-85,-86,-87,104,194,104,]),'INSERT':([0,],[15,]),'UPDATE':([0,],[16,]),'DELETE':([0,],[17,]),'BEGIN':([0,],[18,]),'END':([0,],[19,]),'ROLLBACK':([0,],[20,]),'SELECT':([0,13,35,36,37,38,39,40,60,62,64,67,82,83,84,92,93,118,120,122,],[21,21,21,21,21,-21,-23,-18,21,21,21,-22,21,21,21,-19,-20,21,21,21,]),'$end':([1,22,23,24,25,26,27,28,29,],[0,-1,-2,-3,-4,-5,-6,-7,-8,]),'ENDREQUEST':([2,3,4,5,6,7,8,9,14,20,30,43,45,48,49,50,52,57,59,61,63,65,66,72,73,81,87,91,96,98,99,100,102,105,111,113,115,119,121,123,124,125,126,132,147,157,162,163,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,191,192,195,197,],[22,23,24,25,26,27,28,29,-44,-11,-12,-53,-56,-9,-10,-49,-69,-17,-38,-39,-41,-43,-47,-61,-48,-16,-40,-42,-57,-62,-71,-73,-75,-65,-50,-70,-52,-28,-29,-31,-33,-34,-35,-58,-77,-13,-30,-32,-59,-72,-74,-79,-76,-78,-66,-51,-24,-25,-27,-45,-46,-37,-54,-26,-36,-60,-55,]),'TABLE':([10,12,32,],[31,33,56,]),'RBRACKET':([14,34,50,52,54,59,61,63,65,66,73,85,86,87,90,91,99,100,102,105,111,112,113,115,117,119,121,123,124,125,126,131,147,148,151,152,153,154,155,156,159,160,161,162,163,165,167,168,172,173,174,175,176,177,178,180,181,182,183,184,185,190,191,192,193,196,],[-44,58,-49,-69,-67,-38,-39,-41,-43,-47,-48,125,126,-40,129,-42,-71,-73,-75,-65,-50,-68,-70,-52,157,-28,-29,-31,-33,-34,-35,169,-77,176,-14,-92,-93,-94,-95,-96,180,181,182,-30,-32,184,186,-63,-72,-74,-79,-76,-78,-66,-51,-24,-25,-27,-45,-46,-37,-15,-26,-36,-64,197,]),'UNION':([14,50,58,73,99,100,102,105,111,115,147,172,173,174,175,176,177,178,],[38,-49,38,-48,-71,-73,-75,-65,-50,-52,-77,-72,-74,-79,-76,-78,-66,-51,]),'INTERSECT':([14,50,58,73,99,100,102,105,111,115,147,172,173,174,175,176,177,178,],[39,-49,39,-48,-71,-73,-75,-65,-50,-52,-77,-72,-74,-79,-76,-78,-66,-51,]),'JOIN':([14,50,58,68,69,73,99,100,102,105,111,115,147,172,173,174,175,176,177,178,],[40,-49,40,92,93,-48,-71,-73,-75,-65,-50,-52,-77,-72,-74,-79,-76,-78,-66,-51,]),'LEFT':([14,50,58,73,99,100,102,105,111,115,147,172,173,174,175,176,177,178,],[41,-49,41,-48,-71,-73,-75,-65,-50,-52,-77,-72,-74,-79,-76,-78,-66,-51,]),'RIGHT':([14,50,58,73,99,100,102,105,111,115,147,172,173,174,175,176,177,178,],[42,-49,42,-48,-71,-73,-75,-65,-50,-52,-77,-72,-74,-79,-76,-78,-66,-51,]),'INTO':([15,],[44,]),'NAME':([16,21,31,33,37,40,44,47,56,71,74,75,76,77,78,79,80,84,88,92,93,95,103,104,106,107,108,109,110,128,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,158,164,166,187,189,194,],[46,52,55,57,66,-18,70,72,81,52,105,111,52,113,52,115,116,66,52,-19,-20,52,105,105,149,-88,-89,-90,-91,52,105,52,105,105,-80,-81,105,105,-82,-83,-84,-85,-86,-87,105,178,179,52,66,105,105,105,]),'FROM':([17,51,52,53,54,112,113,114,],[47,75,-69,79,-67,-68,-70,150,]),'TRANSACTION':([18,19,],[48,49,]),'STAR':([21,74,101,102,103,104,105,107,108,109,110,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,171,173,174,175,176,177,189,195,],[53,109,109,109,109,109,-65,-88,-89,-90,-91,109,109,-80,-81,109,109,-82,-83,-84,-85,-86,-87,109,109,109,109,109,109,109,-78,-66,109,109,]),'ALL':([38,],[67,]),'OUTER':([41,42,],[68,69,]),'SET':([46,],[71,]),'ON':([50,63,65,66,73,99,100,102,105,111,115,123,124,147,172,173,174,175,176,177,178,182,185,],[-49,88,88,-47,-48,-71,-73,-75,-65,-50,-52,88,88,-77,-72,-74,-79,-76,-78,-66,-51,88,88,]),'USING':([50,63,65,66,73,99,100,102,105,111,115,123,124,147,172,173,174,175,176,177,178,182,185,],[-49,89,89,-47,-48,-71,-73,-75,-65,-50,-52,89,89,-77,-72,-74,-79,-76,-78,-66,-51,89,89,]),'WHERE':([50,72,96,102,105,111,115,147,171,174,175,176,177,178,195,],[74,74,74,-75,-65,-50,-52,-77,-59,-79,-76,-78,-66,-51,-60,]),'COMMA':([51,52,53,54,96,102,105,112,113,114,117,131,147,151,152,153,154,155,156,165,167,168,171,174,175,176,177,190,193,195,196,],[76,-69,78,-67,133,-75,-65,-68,-70,76,158,76,-77,-14,-92,-93,-94,-95,-96,76,187,-63,-59,-79,-76,-78,-66,-15,-64,-60,187,]),'EQUAL':([52,97,101,102,105,113,127,147,170,174,175,176,177,],[-69,134,140,-75,-65,-70,164,-77,189,-79,-76,-78,-66,]),'DOT':([52,],[77,]),'VALUES':([70,169,],[94,188,]),'QUOTE':([74,103,104,107,108,109,110,130,134,135,136,137,138,139,140,141,142,143,144,145,146,149,187,189,194,],[106,106,106,-88,-89,-90,-91,106,106,106,-80,-81,106,106,-82,-83,-84,-85,-86,-87,106,177,106,106,106,]),'PLUS':([74,101,102,103,104,105,107,108,109,110,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,171,173,174,175,176,177,189,195,],[107,107,107,107,107,-65,-88,-89,-90,-91,107,107,-80,-81,107,107,-82,-83,-84,-85,-86,-87,107,107,107,107,107,107,107,-78,-66,107,107,]),'MINUS':([74,101,102,103,104,105,107,108,109,110,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,171,173,174,175,176,177,189,195,],[108,108,108,108,108,-65,-88,-89,-90,-91,108,108,-80,-81,108,108,-82,-83,-84,-85,-86,-87,108,108,108,108,108,108,108,-78,-66,108,108,]),'DIVISION':([74,101,102,103,104,105,107,108,109,110,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,171,173,174,175,176,177,189,195,],[110,110,110,110,110,-65,-88,-89,-90,-91,110,110,-80,-81,110,110,-82,-83,-84,-85,-86,-87,110,110,110,110,110,110,110,-78,-66,110,110,]),'AND':([100,102,105,147,173,174,175,176,177,],[136,-75,-65,-77,-74,-79,-76,-78,-66,]),'OR':([100,102,105,147,173,174,175,176,177,],[137,-75,-65,-77,-74,-79,-76,-78,-66,]),'NOT_EQUAL':([101,102,105,147,174,175,176,177,],[141,-75,-65,-77,-79,-76,-78,-66,]),'GREATER_THAN':([101,102,105,147,174,175,176,177,],[142,-75,-65,-77,-79,-76,-78,-66,]),'LESS_THAN':([101,102,105,147,174,175,176,177,],[143,-75,-65,-77,-79,-76,-78,-66,]),'GREATER_THAN_OR_EQUAL':([101,102,105,147,174,175,176,177,],[144,-75,-65,-77,-79,-76,-78,-66,]),'LESS_THAN_OR_EQUAL':([101,102,105,147,174,175,176,177,],[145,-75,-65,-77,-79,-76,-78,-66,]),'int':([116,179,],[152,152,]),'str':([116,179,],[153,153,]),'bol':([116,179,],[154,154,]),'bool':([116,179,],[155,155,]),'float':([116,179,],[156,156,]),'AS':([129,],[166,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'create':([0,],[2,]),'show':([0,],[3,]),'drop':([0,],[4,]),'tree_selects':([0,13,60,62,64,118,120,122,],[5,34,85,86,90,159,160,161,]),'insert':([0,],[6,]),'update':([0,],[7,]),'delete':([0,],[8,]),'transaction':([0,],[9,]),'select':([0,13,35,36,37,60,62,64,82,83,84,118,120,122,],[14,14,59,61,63,14,14,14,119,121,123,14,14,14,]),'create_body':([10,],[30,]),'union':([14,58,],[35,82,]),'intersect':([14,58,],[36,83,]),'join':([14,58,],[37,84,]),'insert_body':([15,],[43,]),'update_body':([16,],[45,]),'select_body':([21,],[50,]),'fields':([21,78,95,128,],[51,114,131,165,]),'field':([21,71,76,78,88,95,128,133,164,],[54,97,112,54,127,54,54,170,183,]),'name_table':([37,84,166,],[65,124,185,]),'condition':([50,72,96,],[73,98,132,]),'join_condition':([63,65,123,124,182,185,],[87,91,162,163,191,192,]),'expression':([71,],[96,]),'tree_condition':([74,135,],[99,172,]),'tree_comparison':([74,135,],[100,100,]),'tree_expression':([74,103,104,134,135,138,139,146,189,],[101,147,148,171,101,173,174,175,195,]),'value':([74,103,104,130,134,135,138,139,146,187,189,194,],[102,102,102,168,102,102,102,102,102,193,102,168,]),'operator_expression':([74,101,102,103,104,134,135,138,139,146,147,148,171,173,174,175,189,195,],[103,139,146,103,103,103,103,103,103,103,139,139,139,139,139,139,103,139,]),'variables':([80,],[117,]),'operator_condition':([100,],[135,]),'operator_comparison':([101,],[138,]),'type':([116,179,],[151,190,]),'values':([130,194,],[167,196,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> create ENDREQUEST','start',2,'p_start','SQL_parser.py',270),
  ('start -> show ENDREQUEST','start',2,'p_start','SQL_parser.py',271),
  ('start -> drop ENDREQUEST','start',2,'p_start','SQL_parser.py',272),
  ('start -> tree_selects ENDREQUEST','start',2,'p_start','SQL_parser.py',273),
  ('start -> insert ENDREQUEST','start',2,'p_start','SQL_parser.py',274),
  ('start -> update ENDREQUEST','start',2,'p_start','SQL_parser.py',275),
  ('start -> delete ENDREQUEST','start',2,'p_start','SQL_parser.py',276),
  ('start -> transaction ENDREQUEST','start',2,'p_start','SQL_parser.py',277),
  ('transaction -> BEGIN TRANSACTION','transaction',2,'p_transaction','SQL_parser.py',283),
  ('transaction -> END TRANSACTION','transaction',2,'p_transaction','SQL_parser.py',284),
  ('transaction -> ROLLBACK','transaction',1,'p_transaction','SQL_parser.py',285),
  ('create -> CREATE create_body','create',2,'p_create','SQL_parser.py',296),
  ('create_body -> TABLE NAME LBRACKET variables RBRACKET','create_body',5,'p_create_body','SQL_parser.py',302),
  ('variables -> NAME type','variables',2,'p_variables','SQL_parser.py',308),
  ('variables -> variables COMMA NAME type','variables',4,'p_variables','SQL_parser.py',309),
  ('show -> SHOW CREATE TABLE NAME','show',4,'p_show','SQL_parser.py',320),
  ('drop -> DROP TABLE NAME','drop',3,'p_drop','SQL_parser.py',326),
  ('join -> JOIN','join',1,'p_join','SQL_parser.py',332),
  ('join -> LEFT OUTER JOIN','join',3,'p_join','SQL_parser.py',333),
  ('join -> RIGHT OUTER JOIN','join',3,'p_join','SQL_parser.py',334),
  ('union -> UNION','union',1,'p_union','SQL_parser.py',343),
  ('union -> UNION ALL','union',2,'p_union','SQL_parser.py',344),
  ('intersect -> INTERSECT','intersect',1,'p_intersect','SQL_parser.py',353),
  ('tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET','tree_selects',7,'p_tree_selects','SQL_parser.py',359),
  ('tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET','tree_selects',7,'p_tree_selects','SQL_parser.py',360),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition','tree_selects',8,'p_tree_selects','SQL_parser.py',361),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET','tree_selects',7,'p_tree_selects','SQL_parser.py',362),
  ('tree_selects -> LBRACKET tree_selects RBRACKET union select','tree_selects',5,'p_tree_selects','SQL_parser.py',363),
  ('tree_selects -> LBRACKET tree_selects RBRACKET intersect select','tree_selects',5,'p_tree_selects','SQL_parser.py',364),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition','tree_selects',6,'p_tree_selects','SQL_parser.py',365),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join select','tree_selects',5,'p_tree_selects','SQL_parser.py',366),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition','tree_selects',6,'p_tree_selects','SQL_parser.py',367),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join name_table','tree_selects',5,'p_tree_selects','SQL_parser.py',368),
  ('tree_selects -> select union LBRACKET tree_selects RBRACKET','tree_selects',5,'p_tree_selects','SQL_parser.py',369),
  ('tree_selects -> select intersect LBRACKET tree_selects RBRACKET','tree_selects',5,'p_tree_selects','SQL_parser.py',370),
  ('tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition','tree_selects',8,'p_tree_selects','SQL_parser.py',371),
  ('tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table','tree_selects',7,'p_tree_selects','SQL_parser.py',372),
  ('tree_selects -> select union select','tree_selects',3,'p_tree_selects','SQL_parser.py',373),
  ('tree_selects -> select intersect select','tree_selects',3,'p_tree_selects','SQL_parser.py',374),
  ('tree_selects -> select join select join_condition','tree_selects',4,'p_tree_selects','SQL_parser.py',375),
  ('tree_selects -> select join select','tree_selects',3,'p_tree_selects','SQL_parser.py',376),
  ('tree_selects -> select join name_table join_condition','tree_selects',4,'p_tree_selects','SQL_parser.py',377),
  ('tree_selects -> select join name_table','tree_selects',3,'p_tree_selects','SQL_parser.py',378),
  ('tree_selects -> select','tree_selects',1,'p_tree_selects','SQL_parser.py',379),
  ('join_condition -> ON field EQUAL field','join_condition',4,'p_join_right_table','SQL_parser.py',437),
  ('join_condition -> USING LBRACKET fields RBRACKET','join_condition',4,'p_join_right_table','SQL_parser.py',438),
  ('name_table -> NAME','name_table',1,'p_name_table','SQL_parser.py',446),
  ('select -> SELECT select_body condition','select',3,'p_select','SQL_parser.py',452),
  ('select -> SELECT select_body','select',2,'p_select','SQL_parser.py',453),
  ('select_body -> fields FROM NAME','select_body',3,'p_select_body','SQL_parser.py',462),
  ('select_body -> STAR COMMA fields FROM NAME','select_body',5,'p_select_body','SQL_parser.py',463),
  ('select_body -> STAR FROM NAME','select_body',3,'p_select_body','SQL_parser.py',464),
  ('insert -> INSERT insert_body','insert',2,'p_insert','SQL_parser.py',475),
  ('insert_body -> INTO NAME VALUES LBRACKET values RBRACKET','insert_body',6,'p_insert_body','SQL_parser.py',481),
  ('insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET','insert_body',9,'p_insert_body','SQL_parser.py',482),
  ('update -> UPDATE update_body','update',2,'p_update','SQL_parser.py',491),
  ('update_body -> NAME SET expression','update_body',3,'p_update_body','SQL_parser.py',497),
  ('update_body -> NAME SET expression condition','update_body',4,'p_update_body','SQL_parser.py',498),
  ('expression -> field EQUAL tree_expression','expression',3,'p_expression','SQL_parser.py',507),
  ('expression -> expression COMMA field EQUAL tree_expression','expression',5,'p_expression','SQL_parser.py',508),
  ('delete -> DELETE FROM NAME','delete',3,'p_delete','SQL_parser.py',521),
  ('delete -> DELETE FROM NAME condition','delete',4,'p_delete','SQL_parser.py',522),
  ('values -> value','values',1,'p_values','SQL_parser.py',530),
  ('values -> values COMMA value','values',3,'p_values','SQL_parser.py',531),
  ('value -> NAME','value',1,'p_value','SQL_parser.py',542),
  ('value -> QUOTE NAME QUOTE','value',3,'p_value','SQL_parser.py',543),
  ('fields -> field','fields',1,'p_fields','SQL_parser.py',552),
  ('fields -> fields COMMA field','fields',3,'p_fields','SQL_parser.py',553),
  ('field -> NAME','field',1,'p_field','SQL_parser.py',564),
  ('field -> NAME DOT NAME','field',3,'p_field','SQL_parser.py',565),
  ('condition -> WHERE tree_condition','condition',2,'p_condition','SQL_parser.py',574),
  ('tree_condition -> tree_comparison operator_condition tree_condition','tree_condition',3,'p_tree_condition','SQL_parser.py',580),
  ('tree_condition -> tree_comparison','tree_condition',1,'p_tree_condition','SQL_parser.py',581),
  ('tree_comparison -> tree_expression operator_comparison tree_expression','tree_comparison',3,'p_tree_comparison','SQL_parser.py',597),
  ('tree_expression -> value','tree_expression',1,'p_tree_expression','SQL_parser.py',606),
  ('tree_expression -> value operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',607),
  ('tree_expression -> operator_expression tree_expression','tree_expression',2,'p_tree_expression','SQL_parser.py',608),
  ('tree_expression -> LBRACKET tree_expression RBRACKET','tree_expression',3,'p_tree_expression','SQL_parser.py',609),
  ('tree_expression -> tree_expression operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',610),
  ('operator_condition -> AND','operator_condition',1,'p_operator_condition','SQL_parser.py',624),
  ('operator_condition -> OR','operator_condition',1,'p_operator_condition','SQL_parser.py',625),
  ('operator_comparison -> EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',631),
  ('operator_comparison -> NOT_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',632),
  ('operator_comparison -> GREATER_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',633),
  ('operator_comparison -> LESS_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',634),
  ('operator_comparison -> GREATER_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',635),
  ('operator_comparison -> LESS_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',636),
  ('operator_expression -> PLUS','operator_expression',1,'p_operator_expression','SQL_parser.py',642),
  ('operator_expression -> MINUS','operator_expression',1,'p_operator_expression','SQL_parser.py',643),
  ('operator_expression -> STAR','operator_expression',1,'p_operator_expression','SQL_parser.py',644),
  ('operator_expression -> DIVISION','operator_expression',1,'p_operator_expression','SQL_parser.py',645),
  ('type -> int','type',1,'p_type','SQL_parser.py',651),
  ('type -> str','type',1,'p_type','SQL_parser.py',652),
  ('type -> bol','type',1,'p_type','SQL_parser.py',653),
  ('type -> bool','type',1,'p_type','SQL_parser.py',654),
  ('type -> float','type',1,'p_type','SQL_parser.py',655),
]
