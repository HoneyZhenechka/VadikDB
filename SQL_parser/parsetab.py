
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA CREATE DELETE DIVISION DROP ENDREQUEST EQUAL FROM GREATER_THAN GREATER_THAN_OR_EQUAL INSERT INTERSECT INTO JOIN LBRACKET LEFT LESS_THAN LESS_THAN_OR_EQUAL MINUS NAME NOT NOT_EQUAL ON OR OUTER PLUS RBRACKET RIGHT SELECT SET SHOW STAR TABLE UNION UPDATE USING VALUES WHERE bol bool float int strstart : create ENDREQUEST\n             | show ENDREQUEST\n             | drop ENDREQUEST\n             | tree_selects ENDREQUEST\n             | insert ENDREQUEST\n             | update ENDREQUEST\n             | delete ENDREQUESTcreate : CREATE create_bodycreate_body : TABLE NAME LBRACKET values RBRACKETvalues : NAME type\n              | values COMMA NAME typeshow : SHOW CREATE TABLE NAMEdrop : DROP TABLE NAMEtree_selects : nested_selectsnested_selects : select join nested_selects\n                    | select union nested_selects\n                    | select intersect nested_selects\n                    | selectjoin : JOIN\n            | LEFT JOIN\n            | RIGHT JOIN\n            | OUTER JOIN\n            | LEFT OUTER JOIN\n            | RIGHT OUTER JOINunion : UNIONintersect : INTERSECTselect : SELECT select_body\n              | SELECT select_body conditionselect_body : fields FROM NAME\n                   | STAR COMMA fields FROM NAME\n                   | STAR FROM NAMEinsert : INSERT insert_bodyinsert_body : INTO NAME VALUES LBRACKET fields RBRACKET\n                   | INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKETupdate : UPDATE update_bodyupdate_body : NAME SET expression\n                   | NAME SET expression conditionexpression : field EQUAL tree_expression\n                  | expression COMMA field EQUAL tree_expressiondelete : DELETE FROM NAME\n              | DELETE FROM NAME conditionfields : NAME\n              | fields COMMA NAMEfield : NAMEcondition : WHERE tree_conditiontree_condition : tree_comparison operator_condition tree_condition\n                        | tree_comparisontree_comparison :  tree_expression operator_comparison tree_expressiontree_expression : field\n            | field operator_expression tree_expression\n            | operator_expression tree_expression\n            | LBRACKET tree_expression RBRACKET\n            | tree_expression operator_expression tree_expressionoperator_condition : AND\n                            | OR operator_comparison : EQUAL\n                            | NOT_EQUAL\n                            | GREATER_THAN\n                            | LESS_THAN\n                            | GREATER_THAN_OR_EQUAL\n                            | LESS_THAN_OR_EQUALoperator_expression : PLUS\n                | MINUS\n                | STAR\n                | DIVISIONtype : int\n            | str\n            | bol\n            | bool\n            | float'
    
_lr_action_items = {'CREATE':([0,10,],[9,27,]),'SHOW':([0,],[10,]),'DROP':([0,],[11,]),'INSERT':([0,],[13,]),'UPDATE':([0,],[14,]),'DELETE':([0,],[15,]),'SELECT':([0,34,35,36,37,41,42,56,58,60,75,76,],[17,17,17,17,-19,-25,-26,-20,-21,-22,-23,-24,]),'$end':([1,18,19,20,21,22,23,24,],[0,-1,-2,-3,-4,-5,-6,-7,]),'ENDREQUEST':([2,3,4,5,6,7,8,12,16,25,29,31,43,49,52,53,54,55,61,68,71,72,74,77,78,80,87,90,95,110,119,124,125,126,127,128,129,130,132,137,139,],[18,19,20,21,22,23,24,-14,-18,-8,-32,-35,-27,-13,-40,-15,-16,-17,-28,-12,-44,-36,-41,-45,-47,-49,-29,-31,-37,-51,-9,-38,-46,-48,-53,-50,-52,-30,-33,-39,-34,]),'TABLE':([9,11,27,],[26,28,48,]),'INTO':([13,],[30,]),'NAME':([14,17,26,28,30,33,48,51,62,63,64,65,66,67,70,81,82,83,84,85,86,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,120,134,136,],[32,45,47,49,50,52,68,71,71,87,88,45,90,91,45,71,71,-62,-63,-64,-65,45,71,71,71,-54,-55,71,71,-56,-57,-58,-59,-60,-61,71,130,131,71,45,]),'FROM':([15,44,45,46,88,89,],[33,63,-42,66,-43,112,]),'JOIN':([16,38,39,40,43,57,59,61,71,77,78,80,87,90,110,125,126,127,128,129,130,],[37,56,58,60,-27,75,76,-28,-44,-45,-47,-49,-29,-31,-51,-46,-48,-53,-50,-52,-30,]),'LEFT':([16,43,61,71,77,78,80,87,90,110,125,126,127,128,129,130,],[38,-27,-28,-44,-45,-47,-49,-29,-31,-51,-46,-48,-53,-50,-52,-30,]),'RIGHT':([16,43,61,71,77,78,80,87,90,110,125,126,127,128,129,130,],[39,-27,-28,-44,-45,-47,-49,-29,-31,-51,-46,-48,-53,-50,-52,-30,]),'OUTER':([16,38,39,43,61,71,77,78,80,87,90,110,125,126,127,128,129,130,],[40,57,59,-27,-28,-44,-45,-47,-49,-29,-31,-51,-46,-48,-53,-50,-52,-30,]),'UNION':([16,43,61,71,77,78,80,87,90,110,125,126,127,128,129,130,],[41,-27,-28,-44,-45,-47,-49,-29,-31,-51,-46,-48,-53,-50,-52,-30,]),'INTERSECT':([16,43,61,71,77,78,80,87,90,110,125,126,127,128,129,130,],[42,-27,-28,-44,-45,-47,-49,-29,-31,-51,-46,-48,-53,-50,-52,-30,]),'STAR':([17,62,71,79,80,81,82,83,84,85,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,124,126,127,128,129,134,137,],[46,85,-44,85,85,85,85,-62,-63,-64,-65,85,85,-54,-55,85,85,-56,-57,-58,-59,-60,-61,85,85,85,85,85,85,85,-52,85,85,]),'SET':([32,],[51,]),'WHERE':([43,52,71,72,80,87,90,110,124,127,128,129,130,137,],[62,62,-44,62,-49,-29,-31,-51,-38,-53,-50,-52,-30,-39,]),'COMMA':([44,45,46,71,72,80,88,89,92,94,110,113,114,115,116,117,118,121,124,127,128,129,135,137,138,],[64,-42,65,-44,96,-49,-43,64,120,64,-51,-10,-66,-67,-68,-69,-70,64,-38,-53,-50,-52,-11,-39,64,]),'RBRACKET':([45,71,80,88,92,94,110,111,113,114,115,116,117,118,121,127,128,129,135,138,],[-42,-44,-49,-43,119,122,-51,129,-10,-66,-67,-68,-69,-70,132,-53,-50,-52,-11,139,]),'LBRACKET':([47,50,62,69,81,82,83,84,85,86,97,98,99,100,101,102,103,104,105,106,107,108,109,133,134,],[67,70,82,93,82,82,-62,-63,-64,-65,82,82,-54,-55,82,82,-56,-57,-58,-59,-60,-61,82,136,82,]),'VALUES':([50,122,],[69,133,]),'PLUS':([62,71,79,80,81,82,83,84,85,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,124,126,127,128,129,134,137,],[83,-44,83,83,83,83,-62,-63,-64,-65,83,83,-54,-55,83,83,-56,-57,-58,-59,-60,-61,83,83,83,83,83,83,83,-52,83,83,]),'MINUS':([62,71,79,80,81,82,83,84,85,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,124,126,127,128,129,134,137,],[84,-44,84,84,84,84,-62,-63,-64,-65,84,84,-54,-55,84,84,-56,-57,-58,-59,-60,-61,84,84,84,84,84,84,84,-52,84,84,]),'DIVISION':([62,71,79,80,81,82,83,84,85,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,124,126,127,128,129,134,137,],[86,-44,86,86,86,86,-62,-63,-64,-65,86,86,-54,-55,86,86,-56,-57,-58,-59,-60,-61,86,86,86,86,86,86,86,-52,86,86,]),'EQUAL':([71,73,79,80,110,123,127,128,129,],[-44,97,103,-49,-51,134,-53,-50,-52,]),'NOT_EQUAL':([71,79,80,110,127,128,129,],[-44,104,-49,-51,-53,-50,-52,]),'GREATER_THAN':([71,79,80,110,127,128,129,],[-44,105,-49,-51,-53,-50,-52,]),'LESS_THAN':([71,79,80,110,127,128,129,],[-44,106,-49,-51,-53,-50,-52,]),'GREATER_THAN_OR_EQUAL':([71,79,80,110,127,128,129,],[-44,107,-49,-51,-53,-50,-52,]),'LESS_THAN_OR_EQUAL':([71,79,80,110,127,128,129,],[-44,108,-49,-51,-53,-50,-52,]),'AND':([71,78,80,110,126,127,128,129,],[-44,99,-49,-51,-48,-53,-50,-52,]),'OR':([71,78,80,110,126,127,128,129,],[-44,100,-49,-51,-48,-53,-50,-52,]),'int':([91,131,],[114,114,]),'str':([91,131,],[115,115,]),'bol':([91,131,],[116,116,]),'bool':([91,131,],[117,117,]),'float':([91,131,],[118,118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'create':([0,],[2,]),'show':([0,],[3,]),'drop':([0,],[4,]),'tree_selects':([0,],[5,]),'insert':([0,],[6,]),'update':([0,],[7,]),'delete':([0,],[8,]),'nested_selects':([0,34,35,36,],[12,53,54,55,]),'select':([0,34,35,36,],[16,16,16,16,]),'create_body':([9,],[25,]),'insert_body':([13,],[29,]),'update_body':([14,],[31,]),'join':([16,],[34,]),'union':([16,],[35,]),'intersect':([16,],[36,]),'select_body':([17,],[43,]),'fields':([17,65,70,93,136,],[44,89,94,121,138,]),'condition':([43,52,72,],[61,74,95,]),'expression':([51,],[72,]),'field':([51,62,81,82,96,97,98,101,102,109,134,],[73,80,80,80,123,80,80,80,80,80,80,]),'tree_condition':([62,98,],[77,125,]),'tree_comparison':([62,98,],[78,78,]),'tree_expression':([62,81,82,97,98,101,102,109,134,],[79,110,111,124,79,126,127,128,137,]),'operator_expression':([62,79,80,81,82,97,98,101,102,109,110,111,124,126,127,128,134,137,],[81,102,109,81,81,81,81,81,81,81,102,102,102,102,102,102,81,102,]),'values':([67,],[92,]),'operator_condition':([78,],[98,]),'operator_comparison':([79,],[101,]),'type':([91,131,],[113,135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> create ENDREQUEST','start',2,'p_start','SQL_parser.py',237),
  ('start -> show ENDREQUEST','start',2,'p_start','SQL_parser.py',238),
  ('start -> drop ENDREQUEST','start',2,'p_start','SQL_parser.py',239),
  ('start -> tree_selects ENDREQUEST','start',2,'p_start','SQL_parser.py',240),
  ('start -> insert ENDREQUEST','start',2,'p_start','SQL_parser.py',241),
  ('start -> update ENDREQUEST','start',2,'p_start','SQL_parser.py',242),
  ('start -> delete ENDREQUEST','start',2,'p_start','SQL_parser.py',243),
  ('create -> CREATE create_body','create',2,'p_create','SQL_parser.py',250),
  ('create_body -> TABLE NAME LBRACKET values RBRACKET','create_body',5,'p_create_body','SQL_parser.py',256),
  ('values -> NAME type','values',2,'p_values','SQL_parser.py',262),
  ('values -> values COMMA NAME type','values',4,'p_values','SQL_parser.py',263),
  ('show -> SHOW CREATE TABLE NAME','show',4,'p_show','SQL_parser.py',274),
  ('drop -> DROP TABLE NAME','drop',3,'p_drop','SQL_parser.py',280),
  ('tree_selects -> nested_selects','tree_selects',1,'p_tree_selects','SQL_parser.py',285),
  ('nested_selects -> select join nested_selects','nested_selects',3,'p_nested_selects','SQL_parser.py',291),
  ('nested_selects -> select union nested_selects','nested_selects',3,'p_nested_selects','SQL_parser.py',292),
  ('nested_selects -> select intersect nested_selects','nested_selects',3,'p_nested_selects','SQL_parser.py',293),
  ('nested_selects -> select','nested_selects',1,'p_nested_selects','SQL_parser.py',294),
  ('join -> JOIN','join',1,'p_join','SQL_parser.py',306),
  ('join -> LEFT JOIN','join',2,'p_join','SQL_parser.py',307),
  ('join -> RIGHT JOIN','join',2,'p_join','SQL_parser.py',308),
  ('join -> OUTER JOIN','join',2,'p_join','SQL_parser.py',309),
  ('join -> LEFT OUTER JOIN','join',3,'p_join','SQL_parser.py',310),
  ('join -> RIGHT OUTER JOIN','join',3,'p_join','SQL_parser.py',311),
  ('union -> UNION','union',1,'p_union','SQL_parser.py',322),
  ('intersect -> INTERSECT','intersect',1,'p_intersect','SQL_parser.py',327),
  ('select -> SELECT select_body','select',2,'p_select','SQL_parser.py',333),
  ('select -> SELECT select_body condition','select',3,'p_select','SQL_parser.py',334),
  ('select_body -> fields FROM NAME','select_body',3,'p_select_body','SQL_parser.py',343),
  ('select_body -> STAR COMMA fields FROM NAME','select_body',5,'p_select_body','SQL_parser.py',344),
  ('select_body -> STAR FROM NAME','select_body',3,'p_select_body','SQL_parser.py',345),
  ('insert -> INSERT insert_body','insert',2,'p_insert','SQL_parser.py',356),
  ('insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET','insert_body',6,'p_insert_body','SQL_parser.py',362),
  ('insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET','insert_body',9,'p_insert_body','SQL_parser.py',363),
  ('update -> UPDATE update_body','update',2,'p_update','SQL_parser.py',372),
  ('update_body -> NAME SET expression','update_body',3,'p_update_body','SQL_parser.py',378),
  ('update_body -> NAME SET expression condition','update_body',4,'p_update_body','SQL_parser.py',379),
  ('expression -> field EQUAL tree_expression','expression',3,'p_expression','SQL_parser.py',388),
  ('expression -> expression COMMA field EQUAL tree_expression','expression',5,'p_expression','SQL_parser.py',389),
  ('delete -> DELETE FROM NAME','delete',3,'p_delete','SQL_parser.py',402),
  ('delete -> DELETE FROM NAME condition','delete',4,'p_delete','SQL_parser.py',403),
  ('fields -> NAME','fields',1,'p_fields','SQL_parser.py',411),
  ('fields -> fields COMMA NAME','fields',3,'p_fields','SQL_parser.py',412),
  ('field -> NAME','field',1,'p_field','SQL_parser.py',423),
  ('condition -> WHERE tree_condition','condition',2,'p_condition','SQL_parser.py',429),
  ('tree_condition -> tree_comparison operator_condition tree_condition','tree_condition',3,'p_tree_condition','SQL_parser.py',435),
  ('tree_condition -> tree_comparison','tree_condition',1,'p_tree_condition','SQL_parser.py',436),
  ('tree_comparison -> tree_expression operator_comparison tree_expression','tree_comparison',3,'p_tree_comparison','SQL_parser.py',450),
  ('tree_expression -> field','tree_expression',1,'p_tree_expression','SQL_parser.py',458),
  ('tree_expression -> field operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',459),
  ('tree_expression -> operator_expression tree_expression','tree_expression',2,'p_tree_expression','SQL_parser.py',460),
  ('tree_expression -> LBRACKET tree_expression RBRACKET','tree_expression',3,'p_tree_expression','SQL_parser.py',461),
  ('tree_expression -> tree_expression operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',462),
  ('operator_condition -> AND','operator_condition',1,'p_operator_condition','SQL_parser.py',474),
  ('operator_condition -> OR','operator_condition',1,'p_operator_condition','SQL_parser.py',475),
  ('operator_comparison -> EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',481),
  ('operator_comparison -> NOT_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',482),
  ('operator_comparison -> GREATER_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',483),
  ('operator_comparison -> LESS_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',484),
  ('operator_comparison -> GREATER_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',485),
  ('operator_comparison -> LESS_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',486),
  ('operator_expression -> PLUS','operator_expression',1,'p_operator_expression','SQL_parser.py',492),
  ('operator_expression -> MINUS','operator_expression',1,'p_operator_expression','SQL_parser.py',493),
  ('operator_expression -> STAR','operator_expression',1,'p_operator_expression','SQL_parser.py',494),
  ('operator_expression -> DIVISION','operator_expression',1,'p_operator_expression','SQL_parser.py',495),
  ('type -> int','type',1,'p_type','SQL_parser.py',501),
  ('type -> str','type',1,'p_type','SQL_parser.py',502),
  ('type -> bol','type',1,'p_type','SQL_parser.py',503),
  ('type -> bool','type',1,'p_type','SQL_parser.py',504),
  ('type -> float','type',1,'p_type','SQL_parser.py',505),
]
