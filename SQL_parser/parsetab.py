
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA CREATE DELETE DIVISION DROP ENDREQUEST EQUAL FROM GREATER_THAN GREATER_THAN_OR_EQUAL INSERT INTERSECT INTO JOIN LBRACKET LEFT LESS_THAN LESS_THAN_OR_EQUAL MINUS NAME NOT NOT_EQUAL ON OR OUTER PLUS RBRACKET RIGHT SELECT SET SHOW STAR TABLE UNION UPDATE USING VALUES WHERE bol bool float int strstart : create ENDREQUEST\n             | show ENDREQUEST\n             | drop ENDREQUEST\n             | tree_select ENDREQUEST\n             | insert ENDREQUEST\n             | update ENDREQUEST\n             | delete ENDREQUESTcreate : CREATE create_bodycreate_body : TABLE NAME LBRACKET values RBRACKETvalues : NAME type\n              | values COMMA NAME typeshow : SHOW CREATE TABLE NAMEdrop : DROP TABLE NAMEtree_select : nested_selectnested_select : select join nested_select\n                    | select UNION nested_select\n                    | select INTERSECT nested_select\n                    | selectjoin : JOIN\n            | LEFT JOIN\n            | RIGHT JOIN\n            | OUTER JOIN\n            | LEFT OUTER JOIN\n            | RIGHT OUTER JOINselect : SELECT select_body\n              | SELECT select_body conditionselect_body : fields FROM NAME\n                   | STAR COMMA fields FROM NAME\n                   | STAR FROM NAMEinsert : INSERT insert_bodyinsert_body : INTO NAME VALUES LBRACKET fields RBRACKET\n                   | INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKETupdate : UPDATE update_bodyupdate_body : NAME SET expression\n                   | NAME SET expression conditionexpression : field EQUAL tree_expression\n                  | expression COMMA field EQUAL tree_expressiondelete : DELETE FROM NAME\n              | DELETE FROM NAME conditionfields : NAME\n              | fields COMMA NAMEfield : NAMEcondition : WHERE tree_conditiontree_condition : tree_comparison operator_condition tree_condition\n                        | tree_comparisontree_comparison :  tree_expression operator_comparison tree_expressiontree_expression : field\n            | field operator_expression tree_expression\n            | operator_expression tree_expression\n            | LBRACKET tree_expression RBRACKET\n            | tree_expression operator_expression tree_expressionoperator_condition : AND\n                            | OR operator_comparison : EQUAL\n                            | NOT_EQUAL\n                            | GREATER_THAN\n                            | LESS_THAN\n                            | GREATER_THAN_OR_EQUAL\n                            | LESS_THAN_OR_EQUALoperator_expression : PLUS\n                | MINUS\n                | STAR\n                | DIVISIONtype : int\n            | str\n            | bol\n            | bool\n            | float'
    
_lr_action_items = {'CREATE':([0,10,],[9,27,]),'SHOW':([0,],[10,]),'DROP':([0,],[11,]),'INSERT':([0,],[13,]),'UPDATE':([0,],[14,]),'DELETE':([0,],[15,]),'SELECT':([0,34,35,36,37,54,56,58,73,74,],[17,17,17,17,-19,-20,-21,-22,-23,-24,]),'$end':([1,18,19,20,21,22,23,24,],[0,-1,-2,-3,-4,-5,-6,-7,]),'ENDREQUEST':([2,3,4,5,6,7,8,12,16,25,29,31,41,47,50,51,52,53,59,66,69,70,72,75,76,78,85,88,93,108,117,122,123,124,125,126,127,128,130,135,137,],[18,19,20,21,22,23,24,-14,-18,-8,-30,-33,-25,-13,-38,-15,-16,-17,-26,-12,-42,-34,-39,-43,-45,-47,-27,-29,-35,-49,-9,-36,-44,-46,-51,-48,-50,-28,-31,-37,-32,]),'TABLE':([9,11,27,],[26,28,46,]),'INTO':([13,],[30,]),'NAME':([14,17,26,28,30,33,46,49,60,61,62,63,64,65,68,79,80,81,82,83,84,91,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,118,132,134,],[32,43,45,47,48,50,66,69,69,85,86,43,88,89,43,69,69,-60,-61,-62,-63,43,69,69,69,-52,-53,69,69,-54,-55,-56,-57,-58,-59,69,128,129,69,43,]),'FROM':([15,42,43,44,86,87,],[33,61,-40,64,-41,110,]),'UNION':([16,41,59,69,75,76,78,85,88,108,123,124,125,126,127,128,],[35,-25,-26,-42,-43,-45,-47,-27,-29,-49,-44,-46,-51,-48,-50,-28,]),'INTERSECT':([16,41,59,69,75,76,78,85,88,108,123,124,125,126,127,128,],[36,-25,-26,-42,-43,-45,-47,-27,-29,-49,-44,-46,-51,-48,-50,-28,]),'JOIN':([16,38,39,40,41,55,57,59,69,75,76,78,85,88,108,123,124,125,126,127,128,],[37,54,56,58,-25,73,74,-26,-42,-43,-45,-47,-27,-29,-49,-44,-46,-51,-48,-50,-28,]),'LEFT':([16,41,59,69,75,76,78,85,88,108,123,124,125,126,127,128,],[38,-25,-26,-42,-43,-45,-47,-27,-29,-49,-44,-46,-51,-48,-50,-28,]),'RIGHT':([16,41,59,69,75,76,78,85,88,108,123,124,125,126,127,128,],[39,-25,-26,-42,-43,-45,-47,-27,-29,-49,-44,-46,-51,-48,-50,-28,]),'OUTER':([16,38,39,41,59,69,75,76,78,85,88,108,123,124,125,126,127,128,],[40,55,57,-25,-26,-42,-43,-45,-47,-27,-29,-49,-44,-46,-51,-48,-50,-28,]),'STAR':([17,60,69,77,78,79,80,81,82,83,84,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,124,125,126,127,132,135,],[44,83,-42,83,83,83,83,-60,-61,-62,-63,83,83,-52,-53,83,83,-54,-55,-56,-57,-58,-59,83,83,83,83,83,83,83,-50,83,83,]),'SET':([32,],[49,]),'WHERE':([41,50,69,70,78,85,88,108,122,125,126,127,128,135,],[60,60,-42,60,-47,-27,-29,-49,-36,-51,-48,-50,-28,-37,]),'COMMA':([42,43,44,69,70,78,86,87,90,92,108,111,112,113,114,115,116,119,122,125,126,127,133,135,136,],[62,-40,63,-42,94,-47,-41,62,118,62,-49,-10,-64,-65,-66,-67,-68,62,-36,-51,-48,-50,-11,-37,62,]),'RBRACKET':([43,69,78,86,90,92,108,109,111,112,113,114,115,116,119,125,126,127,133,136,],[-40,-42,-47,-41,117,120,-49,127,-10,-64,-65,-66,-67,-68,130,-51,-48,-50,-11,137,]),'LBRACKET':([45,48,60,67,79,80,81,82,83,84,95,96,97,98,99,100,101,102,103,104,105,106,107,131,132,],[65,68,80,91,80,80,-60,-61,-62,-63,80,80,-52,-53,80,80,-54,-55,-56,-57,-58,-59,80,134,80,]),'VALUES':([48,120,],[67,131,]),'PLUS':([60,69,77,78,79,80,81,82,83,84,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,124,125,126,127,132,135,],[81,-42,81,81,81,81,-60,-61,-62,-63,81,81,-52,-53,81,81,-54,-55,-56,-57,-58,-59,81,81,81,81,81,81,81,-50,81,81,]),'MINUS':([60,69,77,78,79,80,81,82,83,84,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,124,125,126,127,132,135,],[82,-42,82,82,82,82,-60,-61,-62,-63,82,82,-52,-53,82,82,-54,-55,-56,-57,-58,-59,82,82,82,82,82,82,82,-50,82,82,]),'DIVISION':([60,69,77,78,79,80,81,82,83,84,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,122,124,125,126,127,132,135,],[84,-42,84,84,84,84,-60,-61,-62,-63,84,84,-52,-53,84,84,-54,-55,-56,-57,-58,-59,84,84,84,84,84,84,84,-50,84,84,]),'EQUAL':([69,71,77,78,108,121,125,126,127,],[-42,95,101,-47,-49,132,-51,-48,-50,]),'NOT_EQUAL':([69,77,78,108,125,126,127,],[-42,102,-47,-49,-51,-48,-50,]),'GREATER_THAN':([69,77,78,108,125,126,127,],[-42,103,-47,-49,-51,-48,-50,]),'LESS_THAN':([69,77,78,108,125,126,127,],[-42,104,-47,-49,-51,-48,-50,]),'GREATER_THAN_OR_EQUAL':([69,77,78,108,125,126,127,],[-42,105,-47,-49,-51,-48,-50,]),'LESS_THAN_OR_EQUAL':([69,77,78,108,125,126,127,],[-42,106,-47,-49,-51,-48,-50,]),'AND':([69,76,78,108,124,125,126,127,],[-42,97,-47,-49,-46,-51,-48,-50,]),'OR':([69,76,78,108,124,125,126,127,],[-42,98,-47,-49,-46,-51,-48,-50,]),'int':([89,129,],[112,112,]),'str':([89,129,],[113,113,]),'bol':([89,129,],[114,114,]),'bool':([89,129,],[115,115,]),'float':([89,129,],[116,116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'create':([0,],[2,]),'show':([0,],[3,]),'drop':([0,],[4,]),'tree_select':([0,],[5,]),'insert':([0,],[6,]),'update':([0,],[7,]),'delete':([0,],[8,]),'nested_select':([0,34,35,36,],[12,51,52,53,]),'select':([0,34,35,36,],[16,16,16,16,]),'create_body':([9,],[25,]),'insert_body':([13,],[29,]),'update_body':([14,],[31,]),'join':([16,],[34,]),'select_body':([17,],[41,]),'fields':([17,63,68,91,134,],[42,87,92,119,136,]),'condition':([41,50,70,],[59,72,93,]),'expression':([49,],[70,]),'field':([49,60,79,80,94,95,96,99,100,107,132,],[71,78,78,78,121,78,78,78,78,78,78,]),'tree_condition':([60,96,],[75,123,]),'tree_comparison':([60,96,],[76,76,]),'tree_expression':([60,79,80,95,96,99,100,107,132,],[77,108,109,122,77,124,125,126,135,]),'operator_expression':([60,77,78,79,80,95,96,99,100,107,108,109,122,124,125,126,132,135,],[79,100,107,79,79,79,79,79,79,79,100,100,100,100,100,100,79,100,]),'values':([65,],[90,]),'operator_condition':([76,],[96,]),'operator_comparison':([77,],[99,]),'type':([89,129,],[111,133,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> create ENDREQUEST','start',2,'p_start','SQL_parser.py',220),
  ('start -> show ENDREQUEST','start',2,'p_start','SQL_parser.py',221),
  ('start -> drop ENDREQUEST','start',2,'p_start','SQL_parser.py',222),
  ('start -> tree_select ENDREQUEST','start',2,'p_start','SQL_parser.py',223),
  ('start -> insert ENDREQUEST','start',2,'p_start','SQL_parser.py',224),
  ('start -> update ENDREQUEST','start',2,'p_start','SQL_parser.py',225),
  ('start -> delete ENDREQUEST','start',2,'p_start','SQL_parser.py',226),
  ('create -> CREATE create_body','create',2,'p_create','SQL_parser.py',233),
  ('create_body -> TABLE NAME LBRACKET values RBRACKET','create_body',5,'p_create_body','SQL_parser.py',239),
  ('values -> NAME type','values',2,'p_values','SQL_parser.py',245),
  ('values -> values COMMA NAME type','values',4,'p_values','SQL_parser.py',246),
  ('show -> SHOW CREATE TABLE NAME','show',4,'p_show','SQL_parser.py',257),
  ('drop -> DROP TABLE NAME','drop',3,'p_drop','SQL_parser.py',263),
  ('tree_select -> nested_select','tree_select',1,'p_tree_select','SQL_parser.py',268),
  ('nested_select -> select join nested_select','nested_select',3,'p_nested_select','SQL_parser.py',274),
  ('nested_select -> select UNION nested_select','nested_select',3,'p_nested_select','SQL_parser.py',275),
  ('nested_select -> select INTERSECT nested_select','nested_select',3,'p_nested_select','SQL_parser.py',276),
  ('nested_select -> select','nested_select',1,'p_nested_select','SQL_parser.py',277),
  ('join -> JOIN','join',1,'p_join','SQL_parser.py',289),
  ('join -> LEFT JOIN','join',2,'p_join','SQL_parser.py',290),
  ('join -> RIGHT JOIN','join',2,'p_join','SQL_parser.py',291),
  ('join -> OUTER JOIN','join',2,'p_join','SQL_parser.py',292),
  ('join -> LEFT OUTER JOIN','join',3,'p_join','SQL_parser.py',293),
  ('join -> RIGHT OUTER JOIN','join',3,'p_join','SQL_parser.py',294),
  ('select -> SELECT select_body','select',2,'p_select','SQL_parser.py',306),
  ('select -> SELECT select_body condition','select',3,'p_select','SQL_parser.py',307),
  ('select_body -> fields FROM NAME','select_body',3,'p_select_body','SQL_parser.py',316),
  ('select_body -> STAR COMMA fields FROM NAME','select_body',5,'p_select_body','SQL_parser.py',317),
  ('select_body -> STAR FROM NAME','select_body',3,'p_select_body','SQL_parser.py',318),
  ('insert -> INSERT insert_body','insert',2,'p_insert','SQL_parser.py',329),
  ('insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET','insert_body',6,'p_insert_body','SQL_parser.py',335),
  ('insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET','insert_body',9,'p_insert_body','SQL_parser.py',336),
  ('update -> UPDATE update_body','update',2,'p_update','SQL_parser.py',345),
  ('update_body -> NAME SET expression','update_body',3,'p_update_body','SQL_parser.py',351),
  ('update_body -> NAME SET expression condition','update_body',4,'p_update_body','SQL_parser.py',352),
  ('expression -> field EQUAL tree_expression','expression',3,'p_expression','SQL_parser.py',361),
  ('expression -> expression COMMA field EQUAL tree_expression','expression',5,'p_expression','SQL_parser.py',362),
  ('delete -> DELETE FROM NAME','delete',3,'p_delete','SQL_parser.py',375),
  ('delete -> DELETE FROM NAME condition','delete',4,'p_delete','SQL_parser.py',376),
  ('fields -> NAME','fields',1,'p_fields','SQL_parser.py',384),
  ('fields -> fields COMMA NAME','fields',3,'p_fields','SQL_parser.py',385),
  ('field -> NAME','field',1,'p_field','SQL_parser.py',396),
  ('condition -> WHERE tree_condition','condition',2,'p_condition','SQL_parser.py',402),
  ('tree_condition -> tree_comparison operator_condition tree_condition','tree_condition',3,'p_tree_condition','SQL_parser.py',408),
  ('tree_condition -> tree_comparison','tree_condition',1,'p_tree_condition','SQL_parser.py',409),
  ('tree_comparison -> tree_expression operator_comparison tree_expression','tree_comparison',3,'p_tree_comparison','SQL_parser.py',423),
  ('tree_expression -> field','tree_expression',1,'p_tree_expression','SQL_parser.py',431),
  ('tree_expression -> field operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',432),
  ('tree_expression -> operator_expression tree_expression','tree_expression',2,'p_tree_expression','SQL_parser.py',433),
  ('tree_expression -> LBRACKET tree_expression RBRACKET','tree_expression',3,'p_tree_expression','SQL_parser.py',434),
  ('tree_expression -> tree_expression operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',435),
  ('operator_condition -> AND','operator_condition',1,'p_operator_condition','SQL_parser.py',447),
  ('operator_condition -> OR','operator_condition',1,'p_operator_condition','SQL_parser.py',448),
  ('operator_comparison -> EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',454),
  ('operator_comparison -> NOT_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',455),
  ('operator_comparison -> GREATER_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',456),
  ('operator_comparison -> LESS_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',457),
  ('operator_comparison -> GREATER_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',458),
  ('operator_comparison -> LESS_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',459),
  ('operator_expression -> PLUS','operator_expression',1,'p_operator_expression','SQL_parser.py',465),
  ('operator_expression -> MINUS','operator_expression',1,'p_operator_expression','SQL_parser.py',466),
  ('operator_expression -> STAR','operator_expression',1,'p_operator_expression','SQL_parser.py',467),
  ('operator_expression -> DIVISION','operator_expression',1,'p_operator_expression','SQL_parser.py',468),
  ('type -> int','type',1,'p_type','SQL_parser.py',474),
  ('type -> str','type',1,'p_type','SQL_parser.py',475),
  ('type -> bol','type',1,'p_type','SQL_parser.py',476),
  ('type -> bool','type',1,'p_type','SQL_parser.py',477),
  ('type -> float','type',1,'p_type','SQL_parser.py',478),
]
