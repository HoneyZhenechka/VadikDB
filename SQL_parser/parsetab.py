
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA CREATE DELETE DIVISION DROP ENDREQUEST EQUAL FROM GREATER_THAN GREATER_THAN_OR_EQUAL INSERT INTERSECT INTO JOIN LBRACKET LEFT LESS_THAN LESS_THAN_OR_EQUAL MINUS NAME NOT NOT_EQUAL ON OR OUTER PLUS RBRACKET RIGHT SELECT SET SHOW STAR TABLE UNION UPDATE USING VALUES WHERE bol bool float int strstart : create ENDREQUEST\n             | show ENDREQUEST\n             | drop ENDREQUEST\n             | select ENDREQUEST\n             | insert ENDREQUEST\n             | update ENDREQUEST\n             | delete ENDREQUESTcreate : CREATE create_bodycreate_body : TABLE NAME LBRACKET values RBRACKETvalues : NAME type\n              | values COMMA NAME typeshow : SHOW CREATE TABLE NAMEdrop : DROP TABLE NAMEselect : SELECT select_body\n              | SELECT select_body conditionselect_body : fields FROM NAME\n                   | STAR COMMA fields FROM NAME\n                   | STAR FROM NAMEinsert : INSERT insert_bodyinsert_body : INTO NAME VALUES LBRACKET fields RBRACKET\n                   | INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKETupdate : UPDATE update_bodyupdate_body : NAME SET expression\n                   | NAME SET expression conditionexpression : field EQUAL tree_expression\n                  | expression COMMA field EQUAL tree_expressiondelete : DELETE FROM NAME\n              | DELETE FROM NAME conditionfields : NAME\n              | fields COMMA NAMEfield : NAMEcondition : WHERE tree_conditiontree_condition : tree_comparison operator_condition tree_condition\n                        | tree_comparison\n                        | tree_comparison operator_condition tree_comparisontree_comparison :  tree_expression operator_comparison tree_expressiontree_expression : field\n            | field operator_expression tree_expression\n            | operator_expression tree_expression\n            | LBRACKET tree_expression RBRACKET\n            | tree_expression operator_expression tree_expressionoperator_condition : AND\n                            | OR operator_comparison : EQUAL\n                            | NOT_EQUAL\n                            | GREATER_THAN\n                            | LESS_THAN\n                            | GREATER_THAN_OR_EQUAL\n                            | LESS_THAN_OR_EQUALoperator_expression : PLUS\n                | MINUS\n                | STAR\n                | DIVISIONtype : int\n            | str\n            | bol\n            | bool\n            | float'
    
_lr_action_items = {'CREATE':([0,10,],[9,25,]),'SHOW':([0,],[10,]),'DROP':([0,],[11,]),'SELECT':([0,],[12,]),'INSERT':([0,],[13,]),'UPDATE':([0,],[14,]),'DELETE':([0,],[15,]),'$end':([1,16,17,18,19,20,21,22,],[0,-1,-2,-3,-4,-5,-6,-7,]),'ENDREQUEST':([2,3,4,5,6,7,8,23,27,31,33,38,39,47,49,50,51,53,56,61,64,67,69,84,89,98,100,101,102,103,104,105,106,110,112,117,119,],[16,17,18,19,20,21,22,-8,-14,-19,-22,-13,-15,-27,-12,-32,-34,-37,-31,-16,-18,-23,-28,-39,-24,-9,-34,-33,-36,-41,-38,-40,-17,-25,-20,-26,-21,]),'TABLE':([9,11,25,],[24,26,37,]),'STAR':([12,40,52,53,54,55,56,57,58,59,60,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,102,103,104,105,110,114,117,],[30,59,59,59,59,59,-31,-50,-51,-52,-53,59,-42,-43,59,59,-44,-45,-46,-47,-48,-49,59,59,59,59,59,59,59,-40,59,59,59,]),'NAME':([12,14,24,26,32,35,37,40,41,42,43,44,46,48,54,55,57,58,59,60,66,72,73,74,75,76,77,78,79,80,81,82,83,86,87,90,91,99,114,116,],[29,34,36,38,45,47,49,56,61,62,29,64,56,70,56,56,-50,-51,-52,-53,29,56,-42,-43,56,56,-44,-45,-46,-47,-48,-49,56,106,29,56,56,111,56,29,]),'INTO':([13,],[32,]),'FROM':([15,28,29,30,62,63,],[35,41,-29,44,-30,86,]),'WHERE':([27,47,53,56,61,64,67,84,103,104,105,106,110,117,],[40,40,-37,-31,-16,-18,40,-39,-41,-38,-40,-17,-25,-26,]),'COMMA':([28,29,30,53,56,62,63,67,71,84,88,92,93,94,95,96,97,103,104,105,107,110,115,117,118,],[42,-29,43,-37,-31,-30,42,90,99,-39,42,-10,-54,-55,-56,-57,-58,-41,-38,-40,42,-25,-11,-26,42,]),'RBRACKET':([29,53,56,62,71,84,85,88,92,93,94,95,96,97,103,104,105,107,115,118,],[-29,-37,-31,-30,98,-39,105,108,-10,-54,-55,-56,-57,-58,-41,-38,-40,112,-11,119,]),'SET':([34,],[46,]),'LBRACKET':([36,40,45,54,55,57,58,59,60,65,72,73,74,75,76,77,78,79,80,81,82,83,91,113,114,],[48,55,66,55,55,-50,-51,-52,-53,87,55,-42,-43,55,55,-44,-45,-46,-47,-48,-49,55,55,116,55,]),'PLUS':([40,52,53,54,55,56,57,58,59,60,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,102,103,104,105,110,114,117,],[57,57,57,57,57,-31,-50,-51,-52,-53,57,-42,-43,57,57,-44,-45,-46,-47,-48,-49,57,57,57,57,57,57,57,-40,57,57,57,]),'MINUS':([40,52,53,54,55,56,57,58,59,60,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,102,103,104,105,110,114,117,],[58,58,58,58,58,-31,-50,-51,-52,-53,58,-42,-43,58,58,-44,-45,-46,-47,-48,-49,58,58,58,58,58,58,58,-40,58,58,58,]),'DIVISION':([40,52,53,54,55,56,57,58,59,60,72,73,74,75,76,77,78,79,80,81,82,83,84,85,91,102,103,104,105,110,114,117,],[60,60,60,60,60,-31,-50,-51,-52,-53,60,-42,-43,60,60,-44,-45,-46,-47,-48,-49,60,60,60,60,60,60,60,-40,60,60,60,]),'VALUES':([45,108,],[65,113,]),'AND':([51,53,56,84,100,102,103,104,105,],[73,-37,-31,-39,73,-36,-41,-38,-40,]),'OR':([51,53,56,84,100,102,103,104,105,],[74,-37,-31,-39,74,-36,-41,-38,-40,]),'EQUAL':([52,53,56,68,84,103,104,105,109,],[77,-37,-31,91,-39,-41,-38,-40,114,]),'NOT_EQUAL':([52,53,56,84,103,104,105,],[78,-37,-31,-39,-41,-38,-40,]),'GREATER_THAN':([52,53,56,84,103,104,105,],[79,-37,-31,-39,-41,-38,-40,]),'LESS_THAN':([52,53,56,84,103,104,105,],[80,-37,-31,-39,-41,-38,-40,]),'GREATER_THAN_OR_EQUAL':([52,53,56,84,103,104,105,],[81,-37,-31,-39,-41,-38,-40,]),'LESS_THAN_OR_EQUAL':([52,53,56,84,103,104,105,],[82,-37,-31,-39,-41,-38,-40,]),'int':([70,111,],[93,93,]),'str':([70,111,],[94,94,]),'bol':([70,111,],[95,95,]),'bool':([70,111,],[96,96,]),'float':([70,111,],[97,97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'create':([0,],[2,]),'show':([0,],[3,]),'drop':([0,],[4,]),'select':([0,],[5,]),'insert':([0,],[6,]),'update':([0,],[7,]),'delete':([0,],[8,]),'create_body':([9,],[23,]),'select_body':([12,],[27,]),'fields':([12,43,66,87,116,],[28,63,88,107,118,]),'insert_body':([13,],[31,]),'update_body':([14,],[33,]),'condition':([27,47,67,],[39,69,89,]),'tree_condition':([40,72,],[50,101,]),'tree_comparison':([40,72,],[51,100,]),'tree_expression':([40,54,55,72,75,76,83,91,114,],[52,84,85,52,102,103,104,110,117,]),'field':([40,46,54,55,72,75,76,83,90,91,114,],[53,68,53,53,53,53,53,53,109,53,53,]),'operator_expression':([40,52,53,54,55,72,75,76,83,84,85,91,102,103,104,110,114,117,],[54,76,83,54,54,54,54,54,54,76,76,54,76,76,76,76,54,76,]),'expression':([46,],[67,]),'values':([48,],[71,]),'operator_condition':([51,100,],[72,72,]),'operator_comparison':([52,],[75,]),'type':([70,111,],[92,115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> create ENDREQUEST','start',2,'p_start','SQL_parser.py',183),
  ('start -> show ENDREQUEST','start',2,'p_start','SQL_parser.py',184),
  ('start -> drop ENDREQUEST','start',2,'p_start','SQL_parser.py',185),
  ('start -> select ENDREQUEST','start',2,'p_start','SQL_parser.py',186),
  ('start -> insert ENDREQUEST','start',2,'p_start','SQL_parser.py',187),
  ('start -> update ENDREQUEST','start',2,'p_start','SQL_parser.py',188),
  ('start -> delete ENDREQUEST','start',2,'p_start','SQL_parser.py',189),
  ('create -> CREATE create_body','create',2,'p_create','SQL_parser.py',196),
  ('create_body -> TABLE NAME LBRACKET values RBRACKET','create_body',5,'p_create_body','SQL_parser.py',202),
  ('values -> NAME type','values',2,'p_values','SQL_parser.py',208),
  ('values -> values COMMA NAME type','values',4,'p_values','SQL_parser.py',209),
  ('show -> SHOW CREATE TABLE NAME','show',4,'p_show','SQL_parser.py',220),
  ('drop -> DROP TABLE NAME','drop',3,'p_drop','SQL_parser.py',226),
  ('select -> SELECT select_body','select',2,'p_select','SQL_parser.py',232),
  ('select -> SELECT select_body condition','select',3,'p_select','SQL_parser.py',233),
  ('select_body -> fields FROM NAME','select_body',3,'p_select_body','SQL_parser.py',241),
  ('select_body -> STAR COMMA fields FROM NAME','select_body',5,'p_select_body','SQL_parser.py',242),
  ('select_body -> STAR FROM NAME','select_body',3,'p_select_body','SQL_parser.py',243),
  ('insert -> INSERT insert_body','insert',2,'p_insert','SQL_parser.py',254),
  ('insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET','insert_body',6,'p_insert_body','SQL_parser.py',260),
  ('insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET','insert_body',9,'p_insert_body','SQL_parser.py',261),
  ('update -> UPDATE update_body','update',2,'p_update','SQL_parser.py',270),
  ('update_body -> NAME SET expression','update_body',3,'p_update_body','SQL_parser.py',276),
  ('update_body -> NAME SET expression condition','update_body',4,'p_update_body','SQL_parser.py',277),
  ('expression -> field EQUAL tree_expression','expression',3,'p_expression','SQL_parser.py',286),
  ('expression -> expression COMMA field EQUAL tree_expression','expression',5,'p_expression','SQL_parser.py',287),
  ('delete -> DELETE FROM NAME','delete',3,'p_delete','SQL_parser.py',300),
  ('delete -> DELETE FROM NAME condition','delete',4,'p_delete','SQL_parser.py',301),
  ('fields -> NAME','fields',1,'p_fields','SQL_parser.py',309),
  ('fields -> fields COMMA NAME','fields',3,'p_fields','SQL_parser.py',310),
  ('field -> NAME','field',1,'p_field','SQL_parser.py',321),
  ('condition -> WHERE tree_condition','condition',2,'p_condition','SQL_parser.py',327),
  ('tree_condition -> tree_comparison operator_condition tree_condition','tree_condition',3,'p_tree_condition','SQL_parser.py',333),
  ('tree_condition -> tree_comparison','tree_condition',1,'p_tree_condition','SQL_parser.py',334),
  ('tree_condition -> tree_comparison operator_condition tree_comparison','tree_condition',3,'p_tree_condition','SQL_parser.py',335),
  ('tree_comparison -> tree_expression operator_comparison tree_expression','tree_comparison',3,'p_tree_comparison','SQL_parser.py',349),
  ('tree_expression -> field','tree_expression',1,'p_tree_expression','SQL_parser.py',357),
  ('tree_expression -> field operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',358),
  ('tree_expression -> operator_expression tree_expression','tree_expression',2,'p_tree_expression','SQL_parser.py',359),
  ('tree_expression -> LBRACKET tree_expression RBRACKET','tree_expression',3,'p_tree_expression','SQL_parser.py',360),
  ('tree_expression -> tree_expression operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',361),
  ('operator_condition -> AND','operator_condition',1,'p_operator_condition','SQL_parser.py',373),
  ('operator_condition -> OR','operator_condition',1,'p_operator_condition','SQL_parser.py',374),
  ('operator_comparison -> EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',380),
  ('operator_comparison -> NOT_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',381),
  ('operator_comparison -> GREATER_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',382),
  ('operator_comparison -> LESS_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',383),
  ('operator_comparison -> GREATER_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',384),
  ('operator_comparison -> LESS_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',385),
  ('operator_expression -> PLUS','operator_expression',1,'p_operator_expression','SQL_parser.py',391),
  ('operator_expression -> MINUS','operator_expression',1,'p_operator_expression','SQL_parser.py',392),
  ('operator_expression -> STAR','operator_expression',1,'p_operator_expression','SQL_parser.py',393),
  ('operator_expression -> DIVISION','operator_expression',1,'p_operator_expression','SQL_parser.py',394),
  ('type -> int','type',1,'p_type','SQL_parser.py',400),
  ('type -> str','type',1,'p_type','SQL_parser.py',401),
  ('type -> bol','type',1,'p_type','SQL_parser.py',402),
  ('type -> bool','type',1,'p_type','SQL_parser.py',403),
  ('type -> float','type',1,'p_type','SQL_parser.py',404),
]
