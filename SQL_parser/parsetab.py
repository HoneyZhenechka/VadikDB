
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND COMMA CREATE DELETE DIVISION DROP ENDREQUEST EQUAL FROM GREATER_THAN GREATER_THAN_OR_EQUAL INSERT INTERSECT INTO JOIN LBRACKET LEFT LESS_THAN LESS_THAN_OR_EQUAL MINUS NAME NOT NOT_EQUAL ON OR OUTER PLUS RBRACKET RIGHT SELECT SET SHOW STAR TABLE UNION UPDATE USING VALUES WHERE bol bool float int strstart : create ENDREQUEST\n             | show ENDREQUEST\n             | drop ENDREQUEST\n             | tree_selects ENDREQUEST\n             | insert ENDREQUEST\n             | update ENDREQUEST\n             | delete ENDREQUESTcreate : CREATE create_bodycreate_body : TABLE NAME LBRACKET values RBRACKETvalues : NAME type\n              | values COMMA NAME typeshow : SHOW CREATE TABLE NAMEdrop : DROP TABLE NAMEtree_selects : nested_selectsnested_selects : select join nested_selects\n                    | select union nested_selects\n                    | select intersect nested_selects\n                    | selectjoin : JOIN\n            | LEFT JOIN\n            | RIGHT JOIN\n            | OUTER JOIN\n            | LEFT OUTER JOIN\n            | RIGHT OUTER JOINunion : UNION\n            | UNION ALLintersect : INTERSECTselect : SELECT select_body\n              | SELECT select_body conditionselect_body : fields FROM NAME\n                   | STAR COMMA fields FROM NAME\n                   | STAR FROM NAMEinsert : INSERT insert_bodyinsert_body : INTO NAME VALUES LBRACKET fields RBRACKET\n                   | INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKETupdate : UPDATE update_bodyupdate_body : NAME SET expression\n                   | NAME SET expression conditionexpression : field EQUAL tree_expression\n                  | expression COMMA field EQUAL tree_expressiondelete : DELETE FROM NAME\n              | DELETE FROM NAME conditionfields : NAME\n              | fields COMMA NAMEfield : NAMEcondition : WHERE tree_conditiontree_condition : tree_comparison operator_condition tree_condition\n                        | tree_comparisontree_comparison :  tree_expression operator_comparison tree_expressiontree_expression : field\n            | field operator_expression tree_expression\n            | operator_expression tree_expression\n            | LBRACKET tree_expression RBRACKET\n            | tree_expression operator_expression tree_expressionoperator_condition : AND\n                            | OR operator_comparison : EQUAL\n                            | NOT_EQUAL\n                            | GREATER_THAN\n                            | LESS_THAN\n                            | GREATER_THAN_OR_EQUAL\n                            | LESS_THAN_OR_EQUALoperator_expression : PLUS\n                | MINUS\n                | STAR\n                | DIVISIONtype : int\n            | str\n            | bol\n            | bool\n            | float'
    
_lr_action_items = {'CREATE':([0,10,],[9,27,]),'SHOW':([0,],[10,]),'DROP':([0,],[11,]),'INSERT':([0,],[13,]),'UPDATE':([0,],[14,]),'DELETE':([0,],[15,]),'SELECT':([0,34,35,36,37,41,42,56,58,60,61,76,77,],[17,17,17,17,-19,-25,-27,-20,-21,-22,-26,-23,-24,]),'$end':([1,18,19,20,21,22,23,24,],[0,-1,-2,-3,-4,-5,-6,-7,]),'ENDREQUEST':([2,3,4,5,6,7,8,12,16,25,29,31,43,49,52,53,54,55,62,69,72,73,75,78,79,81,88,91,96,111,120,125,126,127,128,129,130,131,133,138,140,],[18,19,20,21,22,23,24,-14,-18,-8,-33,-36,-28,-13,-41,-15,-16,-17,-29,-12,-45,-37,-42,-46,-48,-50,-30,-32,-38,-52,-9,-39,-47,-49,-54,-51,-53,-31,-34,-40,-35,]),'TABLE':([9,11,27,],[26,28,48,]),'INTO':([13,],[30,]),'NAME':([14,17,26,28,30,33,48,51,63,64,65,66,67,68,71,82,83,84,85,86,87,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,121,135,137,],[32,45,47,49,50,52,69,72,72,88,89,45,91,92,45,72,72,-63,-64,-65,-66,45,72,72,72,-55,-56,72,72,-57,-58,-59,-60,-61,-62,72,131,132,72,45,]),'FROM':([15,44,45,46,89,90,],[33,64,-43,67,-44,113,]),'JOIN':([16,38,39,40,43,57,59,62,72,78,79,81,88,91,111,126,127,128,129,130,131,],[37,56,58,60,-28,76,77,-29,-45,-46,-48,-50,-30,-32,-52,-47,-49,-54,-51,-53,-31,]),'LEFT':([16,43,62,72,78,79,81,88,91,111,126,127,128,129,130,131,],[38,-28,-29,-45,-46,-48,-50,-30,-32,-52,-47,-49,-54,-51,-53,-31,]),'RIGHT':([16,43,62,72,78,79,81,88,91,111,126,127,128,129,130,131,],[39,-28,-29,-45,-46,-48,-50,-30,-32,-52,-47,-49,-54,-51,-53,-31,]),'OUTER':([16,38,39,43,62,72,78,79,81,88,91,111,126,127,128,129,130,131,],[40,57,59,-28,-29,-45,-46,-48,-50,-30,-32,-52,-47,-49,-54,-51,-53,-31,]),'UNION':([16,43,62,72,78,79,81,88,91,111,126,127,128,129,130,131,],[41,-28,-29,-45,-46,-48,-50,-30,-32,-52,-47,-49,-54,-51,-53,-31,]),'INTERSECT':([16,43,62,72,78,79,81,88,91,111,126,127,128,129,130,131,],[42,-28,-29,-45,-46,-48,-50,-30,-32,-52,-47,-49,-54,-51,-53,-31,]),'STAR':([17,63,72,80,81,82,83,84,85,86,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,127,128,129,130,135,138,],[46,86,-45,86,86,86,86,-63,-64,-65,-66,86,86,-55,-56,86,86,-57,-58,-59,-60,-61,-62,86,86,86,86,86,86,86,-53,86,86,]),'SET':([32,],[51,]),'ALL':([41,],[61,]),'WHERE':([43,52,72,73,81,88,91,111,125,128,129,130,131,138,],[63,63,-45,63,-50,-30,-32,-52,-39,-54,-51,-53,-31,-40,]),'COMMA':([44,45,46,72,73,81,89,90,93,95,111,114,115,116,117,118,119,122,125,128,129,130,136,138,139,],[65,-43,66,-45,97,-50,-44,65,121,65,-52,-10,-67,-68,-69,-70,-71,65,-39,-54,-51,-53,-11,-40,65,]),'RBRACKET':([45,72,81,89,93,95,111,112,114,115,116,117,118,119,122,128,129,130,136,139,],[-43,-45,-50,-44,120,123,-52,130,-10,-67,-68,-69,-70,-71,133,-54,-51,-53,-11,140,]),'LBRACKET':([47,50,63,70,82,83,84,85,86,87,98,99,100,101,102,103,104,105,106,107,108,109,110,134,135,],[68,71,83,94,83,83,-63,-64,-65,-66,83,83,-55,-56,83,83,-57,-58,-59,-60,-61,-62,83,137,83,]),'VALUES':([50,123,],[70,134,]),'PLUS':([63,72,80,81,82,83,84,85,86,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,127,128,129,130,135,138,],[84,-45,84,84,84,84,-63,-64,-65,-66,84,84,-55,-56,84,84,-57,-58,-59,-60,-61,-62,84,84,84,84,84,84,84,-53,84,84,]),'MINUS':([63,72,80,81,82,83,84,85,86,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,127,128,129,130,135,138,],[85,-45,85,85,85,85,-63,-64,-65,-66,85,85,-55,-56,85,85,-57,-58,-59,-60,-61,-62,85,85,85,85,85,85,85,-53,85,85,]),'DIVISION':([63,72,80,81,82,83,84,85,86,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,125,127,128,129,130,135,138,],[87,-45,87,87,87,87,-63,-64,-65,-66,87,87,-55,-56,87,87,-57,-58,-59,-60,-61,-62,87,87,87,87,87,87,87,-53,87,87,]),'EQUAL':([72,74,80,81,111,124,128,129,130,],[-45,98,104,-50,-52,135,-54,-51,-53,]),'NOT_EQUAL':([72,80,81,111,128,129,130,],[-45,105,-50,-52,-54,-51,-53,]),'GREATER_THAN':([72,80,81,111,128,129,130,],[-45,106,-50,-52,-54,-51,-53,]),'LESS_THAN':([72,80,81,111,128,129,130,],[-45,107,-50,-52,-54,-51,-53,]),'GREATER_THAN_OR_EQUAL':([72,80,81,111,128,129,130,],[-45,108,-50,-52,-54,-51,-53,]),'LESS_THAN_OR_EQUAL':([72,80,81,111,128,129,130,],[-45,109,-50,-52,-54,-51,-53,]),'AND':([72,79,81,111,127,128,129,130,],[-45,100,-50,-52,-49,-54,-51,-53,]),'OR':([72,79,81,111,127,128,129,130,],[-45,101,-50,-52,-49,-54,-51,-53,]),'int':([92,132,],[115,115,]),'str':([92,132,],[116,116,]),'bol':([92,132,],[117,117,]),'bool':([92,132,],[118,118,]),'float':([92,132,],[119,119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'create':([0,],[2,]),'show':([0,],[3,]),'drop':([0,],[4,]),'tree_selects':([0,],[5,]),'insert':([0,],[6,]),'update':([0,],[7,]),'delete':([0,],[8,]),'nested_selects':([0,34,35,36,],[12,53,54,55,]),'select':([0,34,35,36,],[16,16,16,16,]),'create_body':([9,],[25,]),'insert_body':([13,],[29,]),'update_body':([14,],[31,]),'join':([16,],[34,]),'union':([16,],[35,]),'intersect':([16,],[36,]),'select_body':([17,],[43,]),'fields':([17,66,71,94,137,],[44,90,95,122,139,]),'condition':([43,52,73,],[62,75,96,]),'expression':([51,],[73,]),'field':([51,63,82,83,97,98,99,102,103,110,135,],[74,81,81,81,124,81,81,81,81,81,81,]),'tree_condition':([63,99,],[78,126,]),'tree_comparison':([63,99,],[79,79,]),'tree_expression':([63,82,83,98,99,102,103,110,135,],[80,111,112,125,80,127,128,129,138,]),'operator_expression':([63,80,81,82,83,98,99,102,103,110,111,112,125,127,128,129,135,138,],[82,103,110,82,82,82,82,82,82,82,103,103,103,103,103,103,82,103,]),'values':([68,],[93,]),'operator_condition':([79,],[99,]),'operator_comparison':([80,],[102,]),'type':([92,132,],[114,136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> create ENDREQUEST','start',2,'p_start','SQL_parser.py',238),
  ('start -> show ENDREQUEST','start',2,'p_start','SQL_parser.py',239),
  ('start -> drop ENDREQUEST','start',2,'p_start','SQL_parser.py',240),
  ('start -> tree_selects ENDREQUEST','start',2,'p_start','SQL_parser.py',241),
  ('start -> insert ENDREQUEST','start',2,'p_start','SQL_parser.py',242),
  ('start -> update ENDREQUEST','start',2,'p_start','SQL_parser.py',243),
  ('start -> delete ENDREQUEST','start',2,'p_start','SQL_parser.py',244),
  ('create -> CREATE create_body','create',2,'p_create','SQL_parser.py',251),
  ('create_body -> TABLE NAME LBRACKET values RBRACKET','create_body',5,'p_create_body','SQL_parser.py',257),
  ('values -> NAME type','values',2,'p_values','SQL_parser.py',263),
  ('values -> values COMMA NAME type','values',4,'p_values','SQL_parser.py',264),
  ('show -> SHOW CREATE TABLE NAME','show',4,'p_show','SQL_parser.py',275),
  ('drop -> DROP TABLE NAME','drop',3,'p_drop','SQL_parser.py',281),
  ('tree_selects -> nested_selects','tree_selects',1,'p_tree_selects','SQL_parser.py',286),
  ('nested_selects -> select join nested_selects','nested_selects',3,'p_nested_selects','SQL_parser.py',292),
  ('nested_selects -> select union nested_selects','nested_selects',3,'p_nested_selects','SQL_parser.py',293),
  ('nested_selects -> select intersect nested_selects','nested_selects',3,'p_nested_selects','SQL_parser.py',294),
  ('nested_selects -> select','nested_selects',1,'p_nested_selects','SQL_parser.py',295),
  ('join -> JOIN','join',1,'p_join','SQL_parser.py',307),
  ('join -> LEFT JOIN','join',2,'p_join','SQL_parser.py',308),
  ('join -> RIGHT JOIN','join',2,'p_join','SQL_parser.py',309),
  ('join -> OUTER JOIN','join',2,'p_join','SQL_parser.py',310),
  ('join -> LEFT OUTER JOIN','join',3,'p_join','SQL_parser.py',311),
  ('join -> RIGHT OUTER JOIN','join',3,'p_join','SQL_parser.py',312),
  ('union -> UNION','union',1,'p_union','SQL_parser.py',323),
  ('union -> UNION ALL','union',2,'p_union','SQL_parser.py',324),
  ('intersect -> INTERSECT','intersect',1,'p_intersect','SQL_parser.py',332),
  ('select -> SELECT select_body','select',2,'p_select','SQL_parser.py',338),
  ('select -> SELECT select_body condition','select',3,'p_select','SQL_parser.py',339),
  ('select_body -> fields FROM NAME','select_body',3,'p_select_body','SQL_parser.py',348),
  ('select_body -> STAR COMMA fields FROM NAME','select_body',5,'p_select_body','SQL_parser.py',349),
  ('select_body -> STAR FROM NAME','select_body',3,'p_select_body','SQL_parser.py',350),
  ('insert -> INSERT insert_body','insert',2,'p_insert','SQL_parser.py',361),
  ('insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET','insert_body',6,'p_insert_body','SQL_parser.py',367),
  ('insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET','insert_body',9,'p_insert_body','SQL_parser.py',368),
  ('update -> UPDATE update_body','update',2,'p_update','SQL_parser.py',377),
  ('update_body -> NAME SET expression','update_body',3,'p_update_body','SQL_parser.py',383),
  ('update_body -> NAME SET expression condition','update_body',4,'p_update_body','SQL_parser.py',384),
  ('expression -> field EQUAL tree_expression','expression',3,'p_expression','SQL_parser.py',393),
  ('expression -> expression COMMA field EQUAL tree_expression','expression',5,'p_expression','SQL_parser.py',394),
  ('delete -> DELETE FROM NAME','delete',3,'p_delete','SQL_parser.py',407),
  ('delete -> DELETE FROM NAME condition','delete',4,'p_delete','SQL_parser.py',408),
  ('fields -> NAME','fields',1,'p_fields','SQL_parser.py',416),
  ('fields -> fields COMMA NAME','fields',3,'p_fields','SQL_parser.py',417),
  ('field -> NAME','field',1,'p_field','SQL_parser.py',428),
  ('condition -> WHERE tree_condition','condition',2,'p_condition','SQL_parser.py',434),
  ('tree_condition -> tree_comparison operator_condition tree_condition','tree_condition',3,'p_tree_condition','SQL_parser.py',440),
  ('tree_condition -> tree_comparison','tree_condition',1,'p_tree_condition','SQL_parser.py',441),
  ('tree_comparison -> tree_expression operator_comparison tree_expression','tree_comparison',3,'p_tree_comparison','SQL_parser.py',455),
  ('tree_expression -> field','tree_expression',1,'p_tree_expression','SQL_parser.py',463),
  ('tree_expression -> field operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',464),
  ('tree_expression -> operator_expression tree_expression','tree_expression',2,'p_tree_expression','SQL_parser.py',465),
  ('tree_expression -> LBRACKET tree_expression RBRACKET','tree_expression',3,'p_tree_expression','SQL_parser.py',466),
  ('tree_expression -> tree_expression operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',467),
  ('operator_condition -> AND','operator_condition',1,'p_operator_condition','SQL_parser.py',479),
  ('operator_condition -> OR','operator_condition',1,'p_operator_condition','SQL_parser.py',480),
  ('operator_comparison -> EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',486),
  ('operator_comparison -> NOT_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',487),
  ('operator_comparison -> GREATER_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',488),
  ('operator_comparison -> LESS_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',489),
  ('operator_comparison -> GREATER_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',490),
  ('operator_comparison -> LESS_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',491),
  ('operator_expression -> PLUS','operator_expression',1,'p_operator_expression','SQL_parser.py',497),
  ('operator_expression -> MINUS','operator_expression',1,'p_operator_expression','SQL_parser.py',498),
  ('operator_expression -> STAR','operator_expression',1,'p_operator_expression','SQL_parser.py',499),
  ('operator_expression -> DIVISION','operator_expression',1,'p_operator_expression','SQL_parser.py',500),
  ('type -> int','type',1,'p_type','SQL_parser.py',506),
  ('type -> str','type',1,'p_type','SQL_parser.py',507),
  ('type -> bol','type',1,'p_type','SQL_parser.py',508),
  ('type -> bool','type',1,'p_type','SQL_parser.py',509),
  ('type -> float','type',1,'p_type','SQL_parser.py',510),
]
