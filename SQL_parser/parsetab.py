
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND COMMA CREATE DELETE DIVISION DOT DROP ENDREQUEST EQUAL FROM GREATER_THAN GREATER_THAN_OR_EQUAL INSERT INTERSECT INTO JOIN LBRACKET LEFT LESS_THAN LESS_THAN_OR_EQUAL MINUS NAME NOT NOT_EQUAL ON OR OUTER PLUS RBRACKET RIGHT SELECT SET SHOW STAR TABLE UNION UPDATE USING VALUES WHERE bol bool float int strstart : create ENDREQUEST\n             | show ENDREQUEST\n             | drop ENDREQUEST\n             | tree_selects ENDREQUEST\n             | insert ENDREQUEST\n             | update ENDREQUEST\n             | delete ENDREQUESTcreate : CREATE create_bodycreate_body : TABLE NAME LBRACKET values RBRACKETvalues : NAME type\n              | values COMMA NAME typeshow : SHOW CREATE TABLE NAMEdrop : DROP TABLE NAMEjoin : JOIN\n            | LEFT OUTER JOIN\n            | RIGHT OUTER JOINjoin_right_table : NAME ON field EQUAL field\n            | NAME USING LBRACKET field RBRACKETunion : UNION\n            | UNION ALLintersect : INTERSECTtree_selects : nested_selectsnested_selects : select\n                    | select union nested_selects\n                    | select intersect nested_selectsselect : SELECT select_body join join_right_table\n              | SELECT select_body join join_right_table condition\n              | SELECT select_body\n              | SELECT select_body conditionselect_body : fields FROM NAME\n                   | STAR COMMA fields FROM NAME\n                   | STAR FROM NAMEinsert : INSERT insert_bodyinsert_body : INTO NAME VALUES LBRACKET fields RBRACKET\n                   | INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKETupdate : UPDATE update_bodyupdate_body : NAME SET expression\n                   | NAME SET expression conditionexpression : field EQUAL tree_expression\n                  | expression COMMA field EQUAL tree_expressiondelete : DELETE FROM NAME\n              | DELETE FROM NAME conditionfields : field\n              | fields COMMA fieldfield : NAME\n            | NAME DOT NAMEcondition : WHERE tree_conditiontree_condition : tree_comparison operator_condition tree_condition\n                        | tree_comparisontree_comparison :  tree_expression operator_comparison tree_expressiontree_expression : field\n            | field operator_expression tree_expression\n            | operator_expression tree_expression\n            | LBRACKET tree_expression RBRACKET\n            | tree_expression operator_expression tree_expressionoperator_condition : AND\n                            | OR operator_comparison : EQUAL\n                            | NOT_EQUAL\n                            | GREATER_THAN\n                            | LESS_THAN\n                            | GREATER_THAN_OR_EQUAL\n                            | LESS_THAN_OR_EQUALoperator_expression : PLUS\n                | MINUS\n                | STAR\n                | DIVISIONtype : int\n            | str\n            | bol\n            | bool\n            | float'
    
_lr_action_items = {'CREATE':([0,10,],[9,27,]),'SHOW':([0,],[10,]),'DROP':([0,],[11,]),'INSERT':([0,],[13,]),'UPDATE':([0,],[14,]),'DELETE':([0,],[15,]),'SELECT':([0,34,35,36,37,51,],[17,17,17,-19,-21,-20,]),'$end':([1,18,19,20,21,22,23,24,],[0,-1,-2,-3,-4,-5,-6,-7,]),'ENDREQUEST':([2,3,4,5,6,7,8,12,16,25,29,31,38,40,45,48,49,50,53,64,67,69,70,74,75,77,84,86,88,93,96,113,122,127,130,131,132,133,134,135,137,144,145,146,148,],[18,19,20,21,22,23,24,-22,-23,-8,-33,-36,-28,-45,-13,-41,-24,-25,-29,-12,-37,-42,-26,-47,-49,-51,-30,-46,-32,-38,-27,-53,-9,-39,-48,-50,-55,-52,-54,-31,-34,-40,-17,-18,-35,]),'TABLE':([9,11,27,],[26,28,44,]),'INTO':([13,],[30,]),'NAME':([14,17,26,28,30,33,44,47,52,54,57,58,59,60,61,62,63,66,78,79,80,81,82,83,91,94,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,123,129,139,140,143,],[32,40,43,45,46,48,64,40,71,-14,40,84,40,86,40,88,89,40,40,40,-64,-65,-66,-67,40,40,40,40,-15,-16,40,-56,-57,40,40,-58,-59,-60,-61,-62,-63,40,135,136,40,40,40,40,]),'FROM':([15,39,40,41,42,85,86,87,],[33,58,-45,62,-43,-44,-46,115,]),'UNION':([16,38,40,53,70,74,75,77,84,86,88,96,113,130,131,132,133,134,135,145,146,],[36,-28,-45,-29,-26,-47,-49,-51,-30,-46,-32,-27,-53,-48,-50,-55,-52,-54,-31,-17,-18,]),'INTERSECT':([16,38,40,53,70,74,75,77,84,86,88,96,113,130,131,132,133,134,135,145,146,],[37,-28,-45,-29,-26,-47,-49,-51,-30,-46,-32,-27,-53,-48,-50,-55,-52,-54,-31,-17,-18,]),'STAR':([17,40,57,76,77,78,79,80,81,82,83,86,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,131,132,133,134,139,144,],[41,-45,82,82,82,82,82,-64,-65,-66,-67,-46,82,82,-56,-57,82,82,-58,-59,-60,-61,-62,-63,82,82,82,82,82,82,82,-54,82,82,]),'SET':([32,],[47,]),'ALL':([36,],[51,]),'JOIN':([38,72,73,84,88,135,],[54,99,100,-30,-32,-31,]),'LEFT':([38,84,88,135,],[55,-30,-32,-31,]),'RIGHT':([38,84,88,135,],[56,-30,-32,-31,]),'WHERE':([38,40,48,67,70,77,84,86,88,113,127,132,133,134,135,144,145,146,],[57,-45,57,57,57,-51,-30,-46,-32,-53,-39,-55,-52,-54,-31,-40,-17,-18,]),'COMMA':([39,40,41,42,67,77,85,86,87,90,92,113,116,117,118,119,120,121,124,127,132,133,134,142,144,147,],[59,-45,61,-43,94,-51,-44,-46,59,123,59,-53,-10,-68,-69,-70,-71,-72,59,-39,-55,-52,-54,-11,-40,59,]),'EQUAL':([40,68,76,77,86,113,126,128,132,133,134,],[-45,95,106,-51,-46,-53,139,140,-55,-52,-54,]),'PLUS':([40,57,76,77,78,79,80,81,82,83,86,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,131,132,133,134,139,144,],[-45,80,80,80,80,80,-64,-65,-66,-67,-46,80,80,-56,-57,80,80,-58,-59,-60,-61,-62,-63,80,80,80,80,80,80,80,-54,80,80,]),'MINUS':([40,57,76,77,78,79,80,81,82,83,86,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,131,132,133,134,139,144,],[-45,81,81,81,81,81,-64,-65,-66,-67,-46,81,81,-56,-57,81,81,-58,-59,-60,-61,-62,-63,81,81,81,81,81,81,81,-54,81,81,]),'DIVISION':([40,57,76,77,78,79,80,81,82,83,86,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,131,132,133,134,139,144,],[-45,83,83,83,83,83,-64,-65,-66,-67,-46,83,83,-56,-57,83,83,-58,-59,-60,-61,-62,-63,83,83,83,83,83,83,83,-54,83,83,]),'NOT_EQUAL':([40,76,77,86,113,132,133,134,],[-45,107,-51,-46,-53,-55,-52,-54,]),'GREATER_THAN':([40,76,77,86,113,132,133,134,],[-45,108,-51,-46,-53,-55,-52,-54,]),'LESS_THAN':([40,76,77,86,113,132,133,134,],[-45,109,-51,-46,-53,-55,-52,-54,]),'GREATER_THAN_OR_EQUAL':([40,76,77,86,113,132,133,134,],[-45,110,-51,-46,-53,-55,-52,-54,]),'LESS_THAN_OR_EQUAL':([40,76,77,86,113,132,133,134,],[-45,111,-51,-46,-53,-55,-52,-54,]),'RBRACKET':([40,42,77,85,86,90,92,113,114,116,117,118,119,120,121,124,132,133,134,141,142,147,],[-45,-43,-51,-44,-46,122,125,-53,134,-10,-68,-69,-70,-71,-72,137,-55,-52,-54,146,-11,148,]),'AND':([40,75,77,86,113,131,132,133,134,],[-45,102,-51,-46,-53,-50,-55,-52,-54,]),'OR':([40,75,77,86,113,131,132,133,134,],[-45,103,-51,-46,-53,-50,-55,-52,-54,]),'DOT':([40,],[60,]),'LBRACKET':([43,46,57,65,78,79,80,81,82,83,95,98,101,102,103,104,105,106,107,108,109,110,111,112,138,139,],[63,66,79,91,79,79,-64,-65,-66,-67,79,129,79,-56,-57,79,79,-58,-59,-60,-61,-62,-63,79,143,79,]),'VALUES':([46,125,],[65,138,]),'OUTER':([55,56,],[72,73,]),'ON':([71,],[97,]),'USING':([71,],[98,]),'int':([89,136,],[117,117,]),'str':([89,136,],[118,118,]),'bol':([89,136,],[119,119,]),'bool':([89,136,],[120,120,]),'float':([89,136,],[121,121,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'create':([0,],[2,]),'show':([0,],[3,]),'drop':([0,],[4,]),'tree_selects':([0,],[5,]),'insert':([0,],[6,]),'update':([0,],[7,]),'delete':([0,],[8,]),'nested_selects':([0,34,35,],[12,49,50,]),'select':([0,34,35,],[16,16,16,]),'create_body':([9,],[25,]),'insert_body':([13,],[29,]),'update_body':([14,],[31,]),'union':([16,],[34,]),'intersect':([16,],[35,]),'select_body':([17,],[38,]),'fields':([17,61,66,91,143,],[39,87,92,124,147,]),'field':([17,47,57,59,61,66,78,79,91,94,95,97,101,104,105,112,129,139,140,143,],[42,68,77,85,42,42,77,77,42,126,77,128,77,77,77,77,141,77,145,42,]),'join':([38,],[52,]),'condition':([38,48,67,70,],[53,69,93,96,]),'expression':([47,],[67,]),'join_right_table':([52,],[70,]),'tree_condition':([57,101,],[74,130,]),'tree_comparison':([57,101,],[75,75,]),'tree_expression':([57,78,79,95,101,104,105,112,139,],[76,113,114,127,76,131,132,133,144,]),'operator_expression':([57,76,77,78,79,95,101,104,105,112,113,114,127,131,132,133,139,144,],[78,105,112,78,78,78,78,78,78,78,105,105,105,105,105,105,78,105,]),'values':([63,],[90,]),'operator_condition':([75,],[101,]),'operator_comparison':([76,],[104,]),'type':([89,136,],[116,142,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> create ENDREQUEST','start',2,'p_start','SQL_parser.py',270),
  ('start -> show ENDREQUEST','start',2,'p_start','SQL_parser.py',271),
  ('start -> drop ENDREQUEST','start',2,'p_start','SQL_parser.py',272),
  ('start -> tree_selects ENDREQUEST','start',2,'p_start','SQL_parser.py',273),
  ('start -> insert ENDREQUEST','start',2,'p_start','SQL_parser.py',274),
  ('start -> update ENDREQUEST','start',2,'p_start','SQL_parser.py',275),
  ('start -> delete ENDREQUEST','start',2,'p_start','SQL_parser.py',276),
  ('create -> CREATE create_body','create',2,'p_create','SQL_parser.py',282),
  ('create_body -> TABLE NAME LBRACKET values RBRACKET','create_body',5,'p_create_body','SQL_parser.py',288),
  ('values -> NAME type','values',2,'p_values','SQL_parser.py',294),
  ('values -> values COMMA NAME type','values',4,'p_values','SQL_parser.py',295),
  ('show -> SHOW CREATE TABLE NAME','show',4,'p_show','SQL_parser.py',306),
  ('drop -> DROP TABLE NAME','drop',3,'p_drop','SQL_parser.py',312),
  ('join -> JOIN','join',1,'p_join','SQL_parser.py',318),
  ('join -> LEFT OUTER JOIN','join',3,'p_join','SQL_parser.py',319),
  ('join -> RIGHT OUTER JOIN','join',3,'p_join','SQL_parser.py',320),
  ('join_right_table -> NAME ON field EQUAL field','join_right_table',5,'p_join_right_table','SQL_parser.py',329),
  ('join_right_table -> NAME USING LBRACKET field RBRACKET','join_right_table',5,'p_join_right_table','SQL_parser.py',330),
  ('union -> UNION','union',1,'p_union','SQL_parser.py',338),
  ('union -> UNION ALL','union',2,'p_union','SQL_parser.py',339),
  ('intersect -> INTERSECT','intersect',1,'p_intersect','SQL_parser.py',348),
  ('tree_selects -> nested_selects','tree_selects',1,'p_tree_selects','SQL_parser.py',354),
  ('nested_selects -> select','nested_selects',1,'p_nested_selects','SQL_parser.py',360),
  ('nested_selects -> select union nested_selects','nested_selects',3,'p_nested_selects','SQL_parser.py',361),
  ('nested_selects -> select intersect nested_selects','nested_selects',3,'p_nested_selects','SQL_parser.py',362),
  ('select -> SELECT select_body join join_right_table','select',4,'p_select','SQL_parser.py',374),
  ('select -> SELECT select_body join join_right_table condition','select',5,'p_select','SQL_parser.py',375),
  ('select -> SELECT select_body','select',2,'p_select','SQL_parser.py',376),
  ('select -> SELECT select_body condition','select',3,'p_select','SQL_parser.py',377),
  ('select_body -> fields FROM NAME','select_body',3,'p_select_body','SQL_parser.py',390),
  ('select_body -> STAR COMMA fields FROM NAME','select_body',5,'p_select_body','SQL_parser.py',391),
  ('select_body -> STAR FROM NAME','select_body',3,'p_select_body','SQL_parser.py',392),
  ('insert -> INSERT insert_body','insert',2,'p_insert','SQL_parser.py',403),
  ('insert_body -> INTO NAME VALUES LBRACKET fields RBRACKET','insert_body',6,'p_insert_body','SQL_parser.py',409),
  ('insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET fields RBRACKET','insert_body',9,'p_insert_body','SQL_parser.py',410),
  ('update -> UPDATE update_body','update',2,'p_update','SQL_parser.py',419),
  ('update_body -> NAME SET expression','update_body',3,'p_update_body','SQL_parser.py',425),
  ('update_body -> NAME SET expression condition','update_body',4,'p_update_body','SQL_parser.py',426),
  ('expression -> field EQUAL tree_expression','expression',3,'p_expression','SQL_parser.py',435),
  ('expression -> expression COMMA field EQUAL tree_expression','expression',5,'p_expression','SQL_parser.py',436),
  ('delete -> DELETE FROM NAME','delete',3,'p_delete','SQL_parser.py',449),
  ('delete -> DELETE FROM NAME condition','delete',4,'p_delete','SQL_parser.py',450),
  ('fields -> field','fields',1,'p_fields','SQL_parser.py',458),
  ('fields -> fields COMMA field','fields',3,'p_fields','SQL_parser.py',459),
  ('field -> NAME','field',1,'p_field','SQL_parser.py',470),
  ('field -> NAME DOT NAME','field',3,'p_field','SQL_parser.py',471),
  ('condition -> WHERE tree_condition','condition',2,'p_condition','SQL_parser.py',480),
  ('tree_condition -> tree_comparison operator_condition tree_condition','tree_condition',3,'p_tree_condition','SQL_parser.py',486),
  ('tree_condition -> tree_comparison','tree_condition',1,'p_tree_condition','SQL_parser.py',487),
  ('tree_comparison -> tree_expression operator_comparison tree_expression','tree_comparison',3,'p_tree_comparison','SQL_parser.py',503),
  ('tree_expression -> field','tree_expression',1,'p_tree_expression','SQL_parser.py',512),
  ('tree_expression -> field operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',513),
  ('tree_expression -> operator_expression tree_expression','tree_expression',2,'p_tree_expression','SQL_parser.py',514),
  ('tree_expression -> LBRACKET tree_expression RBRACKET','tree_expression',3,'p_tree_expression','SQL_parser.py',515),
  ('tree_expression -> tree_expression operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',516),
  ('operator_condition -> AND','operator_condition',1,'p_operator_condition','SQL_parser.py',530),
  ('operator_condition -> OR','operator_condition',1,'p_operator_condition','SQL_parser.py',531),
  ('operator_comparison -> EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',537),
  ('operator_comparison -> NOT_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',538),
  ('operator_comparison -> GREATER_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',539),
  ('operator_comparison -> LESS_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',540),
  ('operator_comparison -> GREATER_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',541),
  ('operator_comparison -> LESS_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',542),
  ('operator_expression -> PLUS','operator_expression',1,'p_operator_expression','SQL_parser.py',548),
  ('operator_expression -> MINUS','operator_expression',1,'p_operator_expression','SQL_parser.py',549),
  ('operator_expression -> STAR','operator_expression',1,'p_operator_expression','SQL_parser.py',550),
  ('operator_expression -> DIVISION','operator_expression',1,'p_operator_expression','SQL_parser.py',551),
  ('type -> int','type',1,'p_type','SQL_parser.py',557),
  ('type -> str','type',1,'p_type','SQL_parser.py',558),
  ('type -> bol','type',1,'p_type','SQL_parser.py',559),
  ('type -> bool','type',1,'p_type','SQL_parser.py',560),
  ('type -> float','type',1,'p_type','SQL_parser.py',561),
]
