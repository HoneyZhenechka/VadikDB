
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND AS BEGIN COLON COMMA CREATE DELETE DIVISION DOT DROP END ENDREQUEST EQUAL FOR FROM GREATER_THAN GREATER_THAN_OR_EQUAL HYPHEN INSERT INTERSECT INTO JOIN LBRACKET LEFT LESS_THAN LESS_THAN_OR_EQUAL MINUS NAME NOT NOT_EQUAL ON ON OR OUTER PLUS QUOTE RBRACKET RIGHT ROLLBACK SELECT SET SHOW STAR SYSTEM TABLE TIME TO TRANSACTION UNION UPDATE USING VALUES VERSIONING WHERE WITH bol bool float int strstart : create ENDREQUEST\n             | show ENDREQUEST\n             | drop ENDREQUEST\n             | tree_selects ENDREQUEST\n             | insert ENDREQUEST\n             | update ENDREQUEST\n             | delete ENDREQUEST\n             | transaction ENDREQUESTtransaction : BEGIN TRANSACTION\n                   | END TRANSACTION\n                   | ROLLBACKcreate : CREATE create_bodycreate_body :  TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET\n                    | TABLE NAME LBRACKET variables RBRACKETvariables : NAME type\n              | variables COMMA NAME typeshow : SHOW CREATE TABLE NAMEdrop : DROP TABLE NAMEjoin : JOIN\n            | LEFT OUTER JOIN\n            | RIGHT OUTER JOINunion : UNION\n            | UNION ALLintersect : INTERSECTtree_selects :   LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET\n                    |   LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET\n                    |   LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition\n                    |   LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET\n                    |   LBRACKET tree_selects RBRACKET union select\n                    |   LBRACKET tree_selects RBRACKET intersect select\n                    |   LBRACKET tree_selects RBRACKET join select join_condition\n                    |   LBRACKET tree_selects RBRACKET join select\n                    |   LBRACKET tree_selects RBRACKET join name_table join_condition\n                    |   LBRACKET tree_selects RBRACKET join name_table\n                    |   select union LBRACKET tree_selects RBRACKET\n                    |   select intersect LBRACKET tree_selects RBRACKET\n                    |   select join LBRACKET tree_selects RBRACKET AS name_table join_condition\n                    |   select join LBRACKET tree_selects RBRACKET AS name_table\n                    |   select union select\n                    |   select intersect select\n                    |   select join select join_condition\n                    |   select join select\n                    |   select join name_table join_condition\n                    |   select join name_table\n                    |   selectjoin_condition : ON field EQUAL field\n            | USING LBRACKET fields RBRACKETname_table : NAMEselect : SELECT select_body condition FOR SYSTEM TIME FROM date TO date\n              | SELECT select_body FOR SYSTEM TIME FROM date TO date\n              | SELECT select_body condition\n              | SELECT select_bodydate : NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME\n            | NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME\n            | NAME HYPHEN NAME HYPHEN NAME NAME\n            | NAME HYPHEN NAME HYPHEN NAME\n            | NAME HYPHEN NAMEselect_body : fields FROM NAME\n                   | STAR COMMA fields FROM NAME\n                   | STAR FROM NAMEinsert : INSERT insert_bodyinsert_body : INTO NAME VALUES LBRACKET values RBRACKET\n                   | INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKETupdate : UPDATE update_bodyupdate_body : NAME SET expression\n                   | NAME SET expression conditionexpression : field EQUAL tree_expression\n                  | expression COMMA field EQUAL tree_expressiondelete : DELETE FROM NAME\n              | DELETE FROM NAME conditionvalues : value\n              | values COMMA valuevalue : NAME\n             | QUOTE NAME QUOTEfields : field\n              | fields COMMA fieldfield : NAME\n            | NAME DOT NAMEcondition : WHERE tree_conditiontree_condition : tree_comparison operator_condition tree_condition\n                        | tree_comparisontree_comparison :  tree_expression operator_comparison tree_expressiontree_expression : value\n            | value operator_expression tree_expression\n            | operator_expression tree_expression\n            | LBRACKET tree_expression RBRACKET\n            | tree_expression operator_expression tree_expressionoperator_condition : AND\n                            | OR operator_comparison : EQUAL\n                            | NOT_EQUAL\n                            | GREATER_THAN\n                            | LESS_THAN\n                            | GREATER_THAN_OR_EQUAL\n                            | LESS_THAN_OR_EQUALoperator_expression : PLUS\n                | MINUS\n                | STAR\n                | DIVISIONtype : int\n            | str\n            | bol\n            | bool\n            | float'
    
_lr_action_items = {'CREATE':([0,11,],[10,32,]),'SHOW':([0,],[11,]),'DROP':([0,],[12,]),'LBRACKET':([0,13,35,36,37,38,39,40,55,60,62,64,67,70,75,83,84,85,90,93,94,95,106,107,110,111,112,113,121,123,125,137,140,141,142,143,144,145,146,147,148,149,150,151,186,196,197,],[13,13,60,62,64,-22,-24,-19,81,13,13,13,-23,96,107,121,123,125,131,-20,-21,133,107,107,-96,-97,-98,-99,13,13,13,107,107,-88,-89,107,107,-90,-91,-92,-93,-94,-95,107,201,206,107,]),'INSERT':([0,],[15,]),'UPDATE':([0,],[16,]),'DELETE':([0,],[17,]),'BEGIN':([0,],[18,]),'END':([0,],[19,]),'ROLLBACK':([0,],[20,]),'SELECT':([0,13,35,36,37,38,39,40,60,62,64,67,83,84,85,93,94,121,123,125,],[21,21,21,21,21,-22,-24,-19,21,21,21,-23,21,21,21,-20,-21,21,21,21,]),'$end':([1,22,23,24,25,26,27,28,29,],[0,-1,-2,-3,-4,-5,-6,-7,-8,]),'ENDREQUEST':([2,3,4,5,6,7,8,9,14,20,30,43,45,48,49,50,52,57,59,61,63,65,66,72,73,82,88,92,97,99,102,103,105,108,114,116,118,122,124,126,127,128,129,135,152,162,167,168,176,179,180,181,182,183,184,185,188,189,190,191,192,193,194,203,204,207,214,215,217,218,221,222,223,225,227,],[22,23,24,25,26,27,28,29,-45,-11,-12,-61,-64,-9,-10,-52,-77,-18,-39,-40,-42,-44,-48,-69,-51,-17,-41,-43,-65,-70,-79,-81,-83,-73,-58,-78,-60,-29,-30,-32,-34,-35,-36,-66,-85,-14,-31,-33,-67,-80,-82,-87,-84,-86,-74,-59,-25,-26,-28,-46,-47,-38,-62,-27,-37,-68,-50,-57,-63,-49,-56,-13,-55,-54,-53,]),'TABLE':([10,12,32,],[31,33,56,]),'RBRACKET':([14,34,50,52,54,59,61,63,65,66,73,86,87,88,91,92,102,103,105,108,114,115,116,118,120,122,124,126,127,128,129,134,152,153,156,157,158,159,160,161,164,165,166,167,168,170,172,173,179,180,181,182,183,184,185,188,189,190,191,192,193,202,203,204,205,212,214,215,218,220,221,223,225,227,],[-45,58,-52,-77,-75,-39,-40,-42,-44,-48,-51,128,129,-41,132,-43,-79,-81,-83,-73,-58,-76,-78,-60,162,-29,-30,-32,-34,-35,-36,174,-85,183,-15,-100,-101,-102,-103,-104,188,189,190,-31,-33,192,194,-71,-80,-82,-87,-84,-86,-74,-59,-25,-26,-28,-46,-47,-38,-16,-27,-37,-72,217,-50,-57,-49,222,-56,-55,-54,-53,]),'UNION':([14,50,58,73,102,103,105,108,114,118,152,179,180,181,182,183,184,185,214,215,218,221,223,225,227,],[38,-52,38,-51,-79,-81,-83,-73,-58,-60,-85,-80,-82,-87,-84,-86,-74,-59,-50,-57,-49,-56,-55,-54,-53,]),'INTERSECT':([14,50,58,73,102,103,105,108,114,118,152,179,180,181,182,183,184,185,214,215,218,221,223,225,227,],[39,-52,39,-51,-79,-81,-83,-73,-58,-60,-85,-80,-82,-87,-84,-86,-74,-59,-50,-57,-49,-56,-55,-54,-53,]),'JOIN':([14,50,58,68,69,73,102,103,105,108,114,118,152,179,180,181,182,183,184,185,214,215,218,221,223,225,227,],[40,-52,40,93,94,-51,-79,-81,-83,-73,-58,-60,-85,-80,-82,-87,-84,-86,-74,-59,-50,-57,-49,-56,-55,-54,-53,]),'LEFT':([14,50,58,73,102,103,105,108,114,118,152,179,180,181,182,183,184,185,214,215,218,221,223,225,227,],[41,-52,41,-51,-79,-81,-83,-73,-58,-60,-85,-80,-82,-87,-84,-86,-74,-59,-50,-57,-49,-56,-55,-54,-53,]),'RIGHT':([14,50,58,73,102,103,105,108,114,118,152,179,180,181,182,183,184,185,214,215,218,221,223,225,227,],[42,-52,42,-51,-79,-81,-83,-73,-58,-60,-85,-80,-82,-87,-84,-86,-74,-59,-50,-57,-49,-56,-55,-54,-53,]),'INTO':([15,],[44,]),'NAME':([16,21,31,33,37,40,44,47,56,71,75,76,77,78,79,80,81,85,89,93,94,96,106,107,109,110,111,112,113,131,133,136,137,140,141,142,143,144,145,146,147,148,149,150,151,155,163,169,171,178,195,197,198,206,209,210,213,219,221,224,226,],[46,52,55,57,66,-19,70,72,82,52,108,114,52,116,52,118,119,66,52,-20,-21,52,108,108,154,-96,-97,-98,-99,52,108,52,108,108,-88,-89,108,108,-90,-91,-92,-93,-94,-95,108,185,187,52,66,200,108,108,200,108,200,215,200,221,223,225,227,]),'FROM':([17,51,52,53,54,115,116,117,139,177,],[47,76,-77,80,-75,-76,-78,155,178,198,]),'TRANSACTION':([18,19,],[48,49,]),'STAR':([21,75,104,105,106,107,108,110,111,112,113,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,176,180,181,182,183,184,197,207,],[53,112,112,112,112,112,-73,-96,-97,-98,-99,112,112,-88,-89,112,112,-90,-91,-92,-93,-94,-95,112,112,112,112,112,112,112,-86,-74,112,112,]),'ALL':([38,],[67,]),'OUTER':([41,42,],[68,69,]),'SET':([46,],[71,]),'FOR':([50,73,102,103,105,108,114,118,152,179,180,181,182,183,184,185,],[74,100,-79,-81,-83,-73,-58,-60,-85,-80,-82,-87,-84,-86,-74,-59,]),'ON':([50,63,65,66,73,102,103,105,108,114,118,126,127,152,179,180,181,182,183,184,185,190,193,214,215,216,218,221,223,225,227,],[-52,89,89,-48,-51,-79,-81,-83,-73,-58,-60,89,89,-85,-80,-82,-87,-84,-86,-74,-59,89,89,-50,-57,220,-49,-56,-55,-54,-53,]),'USING':([50,63,65,66,73,102,103,105,108,114,118,126,127,152,179,180,181,182,183,184,185,190,193,214,215,218,221,223,225,227,],[-52,90,90,-48,-51,-79,-81,-83,-73,-58,-60,90,90,-85,-80,-82,-87,-84,-86,-74,-59,90,90,-50,-57,-49,-56,-55,-54,-53,]),'WHERE':([50,72,97,105,108,114,118,152,176,181,182,183,184,185,207,],[75,75,75,-83,-73,-58,-60,-85,-67,-87,-84,-86,-74,-59,-68,]),'COMMA':([51,52,53,54,97,105,108,115,116,117,120,134,152,156,157,158,159,160,161,170,172,173,176,181,182,183,184,202,205,207,212,],[77,-77,79,-75,136,-83,-73,-76,-78,77,163,77,-85,-15,-100,-101,-102,-103,-104,77,195,-71,-67,-87,-84,-86,-74,-16,-72,-68,195,]),'EQUAL':([52,98,104,105,108,116,130,152,175,181,182,183,184,211,],[-77,137,145,-83,-73,-78,169,-85,197,-87,-84,-86,-74,216,]),'DOT':([52,],[78,]),'VALUES':([70,174,],[95,196,]),'SYSTEM':([74,100,],[101,138,]),'QUOTE':([75,106,107,110,111,112,113,133,137,140,141,142,143,144,145,146,147,148,149,150,151,154,195,197,206,],[109,109,109,-96,-97,-98,-99,109,109,109,-88,-89,109,109,-90,-91,-92,-93,-94,-95,109,184,109,109,109,]),'PLUS':([75,104,105,106,107,108,110,111,112,113,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,176,180,181,182,183,184,197,207,],[110,110,110,110,110,-73,-96,-97,-98,-99,110,110,-88,-89,110,110,-90,-91,-92,-93,-94,-95,110,110,110,110,110,110,110,-86,-74,110,110,]),'MINUS':([75,104,105,106,107,108,110,111,112,113,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,176,180,181,182,183,184,197,207,],[111,111,111,111,111,-73,-96,-97,-98,-99,111,111,-88,-89,111,111,-90,-91,-92,-93,-94,-95,111,111,111,111,111,111,111,-86,-74,111,111,]),'DIVISION':([75,104,105,106,107,108,110,111,112,113,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,176,180,181,182,183,184,197,207,],[113,113,113,113,113,-73,-96,-97,-98,-99,113,113,-88,-89,113,113,-90,-91,-92,-93,-94,-95,113,113,113,113,113,113,113,-86,-74,113,113,]),'TIME':([101,138,],[139,177,]),'AND':([103,105,108,152,180,181,182,183,184,],[141,-83,-73,-85,-82,-87,-84,-86,-74,]),'OR':([103,105,108,152,180,181,182,183,184,],[142,-83,-73,-85,-82,-87,-84,-86,-74,]),'NOT_EQUAL':([104,105,108,152,181,182,183,184,],[146,-83,-73,-85,-87,-84,-86,-74,]),'GREATER_THAN':([104,105,108,152,181,182,183,184,],[147,-83,-73,-85,-87,-84,-86,-74,]),'LESS_THAN':([104,105,108,152,181,182,183,184,],[148,-83,-73,-85,-87,-84,-86,-74,]),'GREATER_THAN_OR_EQUAL':([104,105,108,152,181,182,183,184,],[149,-83,-73,-85,-87,-84,-86,-74,]),'LESS_THAN_OR_EQUAL':([104,105,108,152,181,182,183,184,],[150,-83,-73,-85,-87,-84,-86,-74,]),'int':([119,187,],[157,157,]),'str':([119,187,],[158,158,]),'bol':([119,187,],[159,159,]),'bool':([119,187,],[160,160,]),'float':([119,187,],[161,161,]),'AS':([132,],[171,]),'WITH':([162,],[186,]),'TO':([199,208,215,221,223,225,227,],[209,213,-57,-56,-55,-54,-53,]),'HYPHEN':([200,215,],[210,219,]),'VERSIONING':([201,],[211,]),'COLON':([223,225,],[224,226,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'create':([0,],[2,]),'show':([0,],[3,]),'drop':([0,],[4,]),'tree_selects':([0,13,60,62,64,121,123,125,],[5,34,86,87,91,164,165,166,]),'insert':([0,],[6,]),'update':([0,],[7,]),'delete':([0,],[8,]),'transaction':([0,],[9,]),'select':([0,13,35,36,37,60,62,64,83,84,85,121,123,125,],[14,14,59,61,63,14,14,14,122,124,126,14,14,14,]),'create_body':([10,],[30,]),'union':([14,58,],[35,83,]),'intersect':([14,58,],[36,84,]),'join':([14,58,],[37,85,]),'insert_body':([15,],[43,]),'update_body':([16,],[45,]),'select_body':([21,],[50,]),'fields':([21,79,96,131,],[51,117,134,170,]),'field':([21,71,77,79,89,96,131,136,169,],[54,98,115,54,130,54,54,175,191,]),'name_table':([37,85,171,],[65,127,193,]),'condition':([50,72,97,],[73,99,135,]),'join_condition':([63,65,126,127,190,193,],[88,92,167,168,203,204,]),'expression':([71,],[97,]),'tree_condition':([75,140,],[102,179,]),'tree_comparison':([75,140,],[103,103,]),'tree_expression':([75,106,107,137,140,143,144,151,197,],[104,152,153,176,104,180,181,182,207,]),'value':([75,106,107,133,137,140,143,144,151,195,197,206,],[105,105,105,173,105,105,105,105,105,205,105,173,]),'operator_expression':([75,104,105,106,107,137,140,143,144,151,152,153,176,180,181,182,197,207,],[106,144,151,106,106,106,106,106,106,106,144,144,144,144,144,144,106,144,]),'variables':([81,],[120,]),'operator_condition':([103,],[140,]),'operator_comparison':([104,],[143,]),'type':([119,187,],[156,202,]),'values':([133,206,],[172,212,]),'date':([178,198,209,213,],[199,208,214,218,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> create ENDREQUEST','start',2,'p_start','SQL_parser.py',285),
  ('start -> show ENDREQUEST','start',2,'p_start','SQL_parser.py',286),
  ('start -> drop ENDREQUEST','start',2,'p_start','SQL_parser.py',287),
  ('start -> tree_selects ENDREQUEST','start',2,'p_start','SQL_parser.py',288),
  ('start -> insert ENDREQUEST','start',2,'p_start','SQL_parser.py',289),
  ('start -> update ENDREQUEST','start',2,'p_start','SQL_parser.py',290),
  ('start -> delete ENDREQUEST','start',2,'p_start','SQL_parser.py',291),
  ('start -> transaction ENDREQUEST','start',2,'p_start','SQL_parser.py',292),
  ('transaction -> BEGIN TRANSACTION','transaction',2,'p_transaction','SQL_parser.py',298),
  ('transaction -> END TRANSACTION','transaction',2,'p_transaction','SQL_parser.py',299),
  ('transaction -> ROLLBACK','transaction',1,'p_transaction','SQL_parser.py',300),
  ('create -> CREATE create_body','create',2,'p_create','SQL_parser.py',311),
  ('create_body -> TABLE NAME LBRACKET variables RBRACKET WITH LBRACKET VERSIONING EQUAL ON RBRACKET','create_body',11,'p_create_body','SQL_parser.py',317),
  ('create_body -> TABLE NAME LBRACKET variables RBRACKET','create_body',5,'p_create_body','SQL_parser.py',318),
  ('variables -> NAME type','variables',2,'p_variables','SQL_parser.py',327),
  ('variables -> variables COMMA NAME type','variables',4,'p_variables','SQL_parser.py',328),
  ('show -> SHOW CREATE TABLE NAME','show',4,'p_show','SQL_parser.py',339),
  ('drop -> DROP TABLE NAME','drop',3,'p_drop','SQL_parser.py',345),
  ('join -> JOIN','join',1,'p_join','SQL_parser.py',351),
  ('join -> LEFT OUTER JOIN','join',3,'p_join','SQL_parser.py',352),
  ('join -> RIGHT OUTER JOIN','join',3,'p_join','SQL_parser.py',353),
  ('union -> UNION','union',1,'p_union','SQL_parser.py',362),
  ('union -> UNION ALL','union',2,'p_union','SQL_parser.py',363),
  ('intersect -> INTERSECT','intersect',1,'p_intersect','SQL_parser.py',372),
  ('tree_selects -> LBRACKET tree_selects RBRACKET union LBRACKET tree_selects RBRACKET','tree_selects',7,'p_tree_selects','SQL_parser.py',378),
  ('tree_selects -> LBRACKET tree_selects RBRACKET intersect LBRACKET tree_selects RBRACKET','tree_selects',7,'p_tree_selects','SQL_parser.py',379),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET join_condition','tree_selects',8,'p_tree_selects','SQL_parser.py',380),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join LBRACKET tree_selects RBRACKET','tree_selects',7,'p_tree_selects','SQL_parser.py',381),
  ('tree_selects -> LBRACKET tree_selects RBRACKET union select','tree_selects',5,'p_tree_selects','SQL_parser.py',382),
  ('tree_selects -> LBRACKET tree_selects RBRACKET intersect select','tree_selects',5,'p_tree_selects','SQL_parser.py',383),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join select join_condition','tree_selects',6,'p_tree_selects','SQL_parser.py',384),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join select','tree_selects',5,'p_tree_selects','SQL_parser.py',385),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join name_table join_condition','tree_selects',6,'p_tree_selects','SQL_parser.py',386),
  ('tree_selects -> LBRACKET tree_selects RBRACKET join name_table','tree_selects',5,'p_tree_selects','SQL_parser.py',387),
  ('tree_selects -> select union LBRACKET tree_selects RBRACKET','tree_selects',5,'p_tree_selects','SQL_parser.py',388),
  ('tree_selects -> select intersect LBRACKET tree_selects RBRACKET','tree_selects',5,'p_tree_selects','SQL_parser.py',389),
  ('tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table join_condition','tree_selects',8,'p_tree_selects','SQL_parser.py',390),
  ('tree_selects -> select join LBRACKET tree_selects RBRACKET AS name_table','tree_selects',7,'p_tree_selects','SQL_parser.py',391),
  ('tree_selects -> select union select','tree_selects',3,'p_tree_selects','SQL_parser.py',392),
  ('tree_selects -> select intersect select','tree_selects',3,'p_tree_selects','SQL_parser.py',393),
  ('tree_selects -> select join select join_condition','tree_selects',4,'p_tree_selects','SQL_parser.py',394),
  ('tree_selects -> select join select','tree_selects',3,'p_tree_selects','SQL_parser.py',395),
  ('tree_selects -> select join name_table join_condition','tree_selects',4,'p_tree_selects','SQL_parser.py',396),
  ('tree_selects -> select join name_table','tree_selects',3,'p_tree_selects','SQL_parser.py',397),
  ('tree_selects -> select','tree_selects',1,'p_tree_selects','SQL_parser.py',398),
  ('join_condition -> ON field EQUAL field','join_condition',4,'p_join_right_table','SQL_parser.py',456),
  ('join_condition -> USING LBRACKET fields RBRACKET','join_condition',4,'p_join_right_table','SQL_parser.py',457),
  ('name_table -> NAME','name_table',1,'p_name_table','SQL_parser.py',465),
  ('select -> SELECT select_body condition FOR SYSTEM TIME FROM date TO date','select',10,'p_select','SQL_parser.py',471),
  ('select -> SELECT select_body FOR SYSTEM TIME FROM date TO date','select',9,'p_select','SQL_parser.py',472),
  ('select -> SELECT select_body condition','select',3,'p_select','SQL_parser.py',473),
  ('select -> SELECT select_body','select',2,'p_select','SQL_parser.py',474),
  ('date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME COLON NAME','date',10,'p_date','SQL_parser.py',487),
  ('date -> NAME HYPHEN NAME HYPHEN NAME NAME COLON NAME','date',8,'p_date','SQL_parser.py',488),
  ('date -> NAME HYPHEN NAME HYPHEN NAME NAME','date',6,'p_date','SQL_parser.py',489),
  ('date -> NAME HYPHEN NAME HYPHEN NAME','date',5,'p_date','SQL_parser.py',490),
  ('date -> NAME HYPHEN NAME','date',3,'p_date','SQL_parser.py',491),
  ('select_body -> fields FROM NAME','select_body',3,'p_select_body','SQL_parser.py',510),
  ('select_body -> STAR COMMA fields FROM NAME','select_body',5,'p_select_body','SQL_parser.py',511),
  ('select_body -> STAR FROM NAME','select_body',3,'p_select_body','SQL_parser.py',512),
  ('insert -> INSERT insert_body','insert',2,'p_insert','SQL_parser.py',523),
  ('insert_body -> INTO NAME VALUES LBRACKET values RBRACKET','insert_body',6,'p_insert_body','SQL_parser.py',529),
  ('insert_body -> INTO NAME LBRACKET fields RBRACKET VALUES LBRACKET values RBRACKET','insert_body',9,'p_insert_body','SQL_parser.py',530),
  ('update -> UPDATE update_body','update',2,'p_update','SQL_parser.py',539),
  ('update_body -> NAME SET expression','update_body',3,'p_update_body','SQL_parser.py',545),
  ('update_body -> NAME SET expression condition','update_body',4,'p_update_body','SQL_parser.py',546),
  ('expression -> field EQUAL tree_expression','expression',3,'p_expression','SQL_parser.py',555),
  ('expression -> expression COMMA field EQUAL tree_expression','expression',5,'p_expression','SQL_parser.py',556),
  ('delete -> DELETE FROM NAME','delete',3,'p_delete','SQL_parser.py',569),
  ('delete -> DELETE FROM NAME condition','delete',4,'p_delete','SQL_parser.py',570),
  ('values -> value','values',1,'p_values','SQL_parser.py',578),
  ('values -> values COMMA value','values',3,'p_values','SQL_parser.py',579),
  ('value -> NAME','value',1,'p_value','SQL_parser.py',590),
  ('value -> QUOTE NAME QUOTE','value',3,'p_value','SQL_parser.py',591),
  ('fields -> field','fields',1,'p_fields','SQL_parser.py',600),
  ('fields -> fields COMMA field','fields',3,'p_fields','SQL_parser.py',601),
  ('field -> NAME','field',1,'p_field','SQL_parser.py',612),
  ('field -> NAME DOT NAME','field',3,'p_field','SQL_parser.py',613),
  ('condition -> WHERE tree_condition','condition',2,'p_condition','SQL_parser.py',622),
  ('tree_condition -> tree_comparison operator_condition tree_condition','tree_condition',3,'p_tree_condition','SQL_parser.py',628),
  ('tree_condition -> tree_comparison','tree_condition',1,'p_tree_condition','SQL_parser.py',629),
  ('tree_comparison -> tree_expression operator_comparison tree_expression','tree_comparison',3,'p_tree_comparison','SQL_parser.py',645),
  ('tree_expression -> value','tree_expression',1,'p_tree_expression','SQL_parser.py',654),
  ('tree_expression -> value operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',655),
  ('tree_expression -> operator_expression tree_expression','tree_expression',2,'p_tree_expression','SQL_parser.py',656),
  ('tree_expression -> LBRACKET tree_expression RBRACKET','tree_expression',3,'p_tree_expression','SQL_parser.py',657),
  ('tree_expression -> tree_expression operator_expression tree_expression','tree_expression',3,'p_tree_expression','SQL_parser.py',658),
  ('operator_condition -> AND','operator_condition',1,'p_operator_condition','SQL_parser.py',672),
  ('operator_condition -> OR','operator_condition',1,'p_operator_condition','SQL_parser.py',673),
  ('operator_comparison -> EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',679),
  ('operator_comparison -> NOT_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',680),
  ('operator_comparison -> GREATER_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',681),
  ('operator_comparison -> LESS_THAN','operator_comparison',1,'p_operator_comparison','SQL_parser.py',682),
  ('operator_comparison -> GREATER_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',683),
  ('operator_comparison -> LESS_THAN_OR_EQUAL','operator_comparison',1,'p_operator_comparison','SQL_parser.py',684),
  ('operator_expression -> PLUS','operator_expression',1,'p_operator_expression','SQL_parser.py',690),
  ('operator_expression -> MINUS','operator_expression',1,'p_operator_expression','SQL_parser.py',691),
  ('operator_expression -> STAR','operator_expression',1,'p_operator_expression','SQL_parser.py',692),
  ('operator_expression -> DIVISION','operator_expression',1,'p_operator_expression','SQL_parser.py',693),
  ('type -> int','type',1,'p_type','SQL_parser.py',699),
  ('type -> str','type',1,'p_type','SQL_parser.py',700),
  ('type -> bol','type',1,'p_type','SQL_parser.py',701),
  ('type -> bool','type',1,'p_type','SQL_parser.py',702),
  ('type -> float','type',1,'p_type','SQL_parser.py',703),
]
